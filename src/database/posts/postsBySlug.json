{
  "configurando-variaveis-de-ambiente-em-aplicacoes-node-js": {
    "id": "r244td2x5346p6e",
    "title": "Configurando variáveis de ambiente em aplicações Node.js",
    "slug": "configurando-variaveis-de-ambiente-em-aplicacoes-node-js",
    "locale": "pt-BR",
    "created": "2023-09-05T21:01:49.238Z",
    "updated": "2023-09-05T21:06:00.400Z",
    "content": "<p>A partir do Node.js 20.6.0, é possível carregar variáveis de ambiente a partir de um arquivo <code>.env</code> de maneira nativa, sem a necessidade de utilizar o pacote <a href=\"https://www.npmjs.com/package/dotenv\"><code>dotenv</code></a>.</p>\n<p>Para isso, basta iniciar o seu projeto usando o seguinte comando:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">node</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> --env-file=.env</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> index.js</span></span></code></pre>\n<Alert title=\"Variáveis de ambiente\" mb=\"md\" color=\"blue\">\n<a href=\"https://pt.wikipedia.org/wiki/Vari%C3%A1vel_de_ambiente\">Variáveis de ambiente</a> são valores, definidos pelo usuário que podem afetar o o modo que um programa é executado no computador. Tais valores são usados para passar informações para programas, scripts e comandos, sem que seja necessário alterar o código fonte.\n</Alert>\n<h2>E para versões mais antigas do Node.js?</h2>\n<p>Bom, neste caso você pode continuar utilizando o pacote <a href=\"https://www.npmjs.com/package/dotenv\"><code>dotenv</code></a>:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">npm</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> install</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> dotenv</span></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">node</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> -r</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> dotenv/config</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> index.js</span></span></code></pre>\n<h2>E por que eu deveria usar variáveis de ambiente?</h2>\n<p>Variáveis de ambiente permitem que você acesse informações sensíveis em seu código (credenciais de acesso ao banco de dados, chaves de API, etc.), sem que seja necessário armazenar essas informações diretamente no código fonte. Isso facilita a definição de variáveis distintas para diferentes ambientes de desenvolvimento (local, desenvolvimento, homologação, produção, etc.) sem que seja necessário alterar o código. Conforme a própria recomendação do <a href=\"https://12factor.net/pt_br/config\">Twelve-Factor App</a>:</p>\n<blockquote>\n<p>A prova de fogo para saber se uma aplicação tem todas as configurações corretamente consignadas fora do código é saber se a base de código poderia ter seu código aberto ao público a qualquer momento, sem comprometer as credenciais.</p>\n</blockquote>\n<p>Além disso facilitar o trabalho da equipe, também evita que informações sensíveis possam vazar para o repositório de projeto.</p>\n<p>Então, nunca esqueça de adicionar seus arquivos <code>.env</code> ao <code>.gitignore</code>:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-text\"><span class=\"line\"><span>// .gitignore</span></span>\n<span class=\"line\"><span>.env</span></span>\n<span class=\"line\"><span>*.env</span></span>\n<span class=\"line\"><span>.env.*</span></span>\n<span class=\"line\"><span>*.env.*</span></span></code></pre>\n",
    "tags": [
      "Node.js",
      "javascript"
    ],
    "translates": null
  },
  "using-fetch-with-typescript": {
    "id": "j5ouuw7zm51z2ts",
    "title": "Using fetch with TypeScript",
    "slug": "using-fetch-with-typescript",
    "locale": "en-US",
    "created": "2023-06-02T12:19:46.717Z",
    "updated": "2023-06-04T19:57:40.482Z",
    "content": "<p>Since <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API\"><code>fetch</code></a>) is pratically <a href=\"https://caniuse.com/?search=fetch\">universally supported</a> on the most used web browsers, we may safely drop the use <a href=\"https://axios-http.com/\">Axios</a> and other similar libraries in favor of <code>fetch</code>. In this article, I’ll create a little wrapper for <code>fetch</code> that adds some conveniences to improve the developer experience.</p>\n<h2>The code</h2>\n<p>First, I will create a base function from where all the other shall be derived:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-typescript\"><span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// Extends the error class to throw HTTP Errors (any response with status > 299)</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">class</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\"> HTTPError</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> extends</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Error</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">//            A generic type to type the response</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// -----------\\/</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> query</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> &#x3C;</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">T</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> unknown</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">>(</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">url</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> RequestInfo</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> |</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> URL</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">init</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">?:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> RequestInit</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">  fetch</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(url, init).</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">then</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">((</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">res</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">!</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">res.ok)</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">      throw</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6;font-weight:bold;--shiki-dark-font-weight:bold\"> new</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> HTTPError</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(res.statusText, { cause</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> res })</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> res.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">json</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">() </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">as</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Promise</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">&#x3C;</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">T</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">> </span><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// &#x3C;--- Applying the generic type above</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  })</span></span></code></pre>\n<p>In the code above, we:</p>\n<ol>\n<li>Created a new <code>HTTPError</code> class, in order to throw <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status\">HTTP Errors</a> as they appear;</li>\n<li>Use a <a href=\"https://www.typescriptlang.org/docs/handbook/2/generics.html\">generic type</a> in order to be able to type the response of the request.</li>\n</ol>\n<p>Now, let’s extend the query function to enable us to serialize and send data on our requests:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-typescript\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> makeRequest</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  // -----------\\/ RequestInit['method'] is a union of all the possible HTTP methods</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">method</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> RequestInit</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">[</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">method</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">]) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">    //     | Those two generic types enables us to type the</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">    // \\/--  data input (TBody) and output (TResponse) of the function.</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    &#x3C;</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">TResponse</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> unknown</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">TBody</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\"> Record</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">&#x3C;</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">string</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">unknown</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">>>(</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">url</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> RequestInfo</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> |</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> URL</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">body</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> TBody</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">      query</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">&#x3C;</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">TResponse</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">>(url, {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">        method,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">        body</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> JSON</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">stringify</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(body), </span><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// &#x3C;-- JSON Stringify any given object</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      })</span></span></code></pre>\n<p>In the code above, we:</p>\n<ol>\n<li>We build a <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures\">closure</a> that, first, receive the method we want to call and then returns a function where we pass the <code>url</code> and the <code>body</code> (which is, by default, <em>JSON-stringified</em>) of the request.</li>\n</ol>\n<p>At this point, we can use our newly created functions like this:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-typescript\"><span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// Adding type for the Product entity</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">type</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Product</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  id</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  title</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> string</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  description</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> string</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  price</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  discountPercentage</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  rating</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  stock</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  brand</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> string</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  category</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> string</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  thumbnail</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> string</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  images</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> string</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">[]</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// Getting a single product</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> product </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> await</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> query</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">&#x3C;</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">Product</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">>(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">https://dummyjson.com/products/1</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">console.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">log</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(product)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// Creates a function that makes POST requests</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> post </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> makeRequest</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">POST</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// Adding a new product</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> newProduct </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> await</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> post</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">&#x3C;</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">Product</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">Omit</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">&#x3C;</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">Product</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">id</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">>>(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">https://dummyjson.com/products</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  title</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">New Product</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  description</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">This is a new product</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  price</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 100</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  discountPercentage</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 0</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  rating</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 0</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  stock</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 0</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  brand</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">New Brand</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  category</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">New Category</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  images</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> [],</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  thumbnail</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> ''</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">})</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">console.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">log</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(newProduct)</span></span>\n<span class=\"line\"></span></code></pre>\n<p>Fully functional, but not very “ergonomic”. I believe that our code should also be able to accept a base URL for all the requests, make it easier to add things on the header (like an <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Authorization\">authorization token</a>) and an easy way to make <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/PATCH\"><code>PATCH</code></a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/PUT\"><code>PUT</code></a> and <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/DELETE\"><code>DELETE</code></a> requests.</p>\n<p>Let’s refactor the code above in order to make it easy to add a base URL and pass a common header to all requests:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-typescript\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">import</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> { getToken } </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">from</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">my-custom-auth</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">class</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\"> HTTPError</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> extends</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Error</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> createQuery </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">baseURL</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> RequestInfo</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> |</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> URL</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> ''</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">baseInit</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">?:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> RequestInit</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    &#x3C;</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">T</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> unknown</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">>(</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">url</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> RequestInfo</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> |</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> URL</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">init</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">?:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> RequestInit</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">      fetch</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">`</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">${</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">baseURL</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">}${</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">url</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">}</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">`</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, { </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">...</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">baseInit, </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">...</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">init }).</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">then</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">((</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">res</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">        if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">!</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">res.ok)</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">          throw</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6;font-weight:bold;--shiki-dark-font-weight:bold\"> new</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> HTTPError</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(res.statusText, { cause</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> res })</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">         return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> res.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">json</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">() </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">as</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Promise</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">&#x3C;</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">T</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">></span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">       })</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// This is the function where we define our base URL and headers</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> query </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> createQuery</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span></span>\n<span class=\"line\"><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">https://dummyjson.com</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    headers</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E9F284;--shiki-dark:#E9F284\">      '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Content-Type</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">application/json</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#E9F284;--shiki-dark:#E9F284\">      '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Authorization</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> `Bearer </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">${</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">getToken</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">()</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">}</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">`</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// If you need to add a token to the header, you can do it here.</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    },</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  })</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> makeRequest</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">method</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> RequestInit</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">[</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">method</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">]) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  &#x3C;</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">TResponse</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> unknown</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">TBody</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\"> Record</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">&#x3C;</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">string</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">unknown</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">>>(</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">url</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> RequestInfo</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> |</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> URL</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">body</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> TBody</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">    query</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">&#x3C;</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">TResponse</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">>(url, {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      method,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      body</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> JSON</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">stringify</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(body),</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">     })</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">export</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> api </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  get</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> query,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  post</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> makeRequest</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">POST</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">),</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  delete</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> makeRequest</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">DELETE</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">),</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  put</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> makeRequest</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">PUT</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">),</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  patch</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> makeRequest</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">PATCH</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">),</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<p>In the code above, I:</p>\n<ol>\n<li>Created a <code>createQuery</code> function, a closure where I can set a default <a href=\"https://developer.mozilla.org/pt-BR/docs/Web/API/URL\"><code>url</code></a> and <code>init</code> parameters;</li>\n<li>Created a new <code>query</code> function, where I use the <code>createQuery</code> function to define the base URL and the default parameters that all requests should have (note the dummy <code>getToken</code> function that adds a <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Authentication\">Bearer Token</a> to each request);</li>\n<li>In the end, I export the <code>api</code> object all the commonly used function to make requests.</li>\n</ol>\n<p>You may want to return the body of a request that returned an error, like, for example, when your backend returns the standardized <a href=\"https://datatracker.ietf.org/doc/html/rfc7807\">problem details</a>. So, the refactored code would be:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-typescript\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">import</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> { getToken } </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">from</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">my-custom-auth</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// Extends the return of the HTTPError class</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">class</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\"> HTTPError</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> extends</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Error</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  readonly</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> response</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> any</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  readonly</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> status</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  readonly</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> statusText</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> string</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  constructor</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">status</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">statusText</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> string</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">response</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> any</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#BD93F9;--shiki-dark:#BD93F9;font-style:italic;--shiki-dark-font-style:italic\">    super</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(statusText);</span></span>\n<span class=\"line\"><span style=\"color:#BD93F9;--shiki-dark:#BD93F9;font-style:italic;--shiki-dark-font-style:italic\">    this</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">.status </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> status;</span></span>\n<span class=\"line\"><span style=\"color:#BD93F9;--shiki-dark:#BD93F9;font-style:italic;--shiki-dark-font-style:italic\">    this</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">.statusText </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> statusText;</span></span>\n<span class=\"line\"><span style=\"color:#BD93F9;--shiki-dark:#BD93F9;font-style:italic;--shiki-dark-font-style:italic\">    this</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">.response </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> response;</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> createQuery </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">baseURL</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> RequestInfo</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> |</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> URL</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> ''</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">baseInit</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">?:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> RequestInit</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    &#x3C;</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">TResponse</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> unknown</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">>(</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">url</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> RequestInfo</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> |</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> URL</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">init</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">?:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> RequestInit</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">      fetch</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">`</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">${</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">baseURL</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">}${</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">url</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">}</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">`</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, { </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">...</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">baseInit, </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">...</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">init }).</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">then</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">async</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">res</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">        // Now, we get the JSON response early</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">        const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> response </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> await</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> res.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">json</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">()</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">        if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">!</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">res.ok)</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">          throw</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6;font-weight:bold;--shiki-dark-font-weight:bold\"> new</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> HTTPError</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(res.status, res.statusText, response);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">         return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> response </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">as</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> TResponse</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">       })</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// In this function, we define our base URL and headers.</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> query </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> createQuery</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span></span>\n<span class=\"line\"><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">https://dummyjson.com</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    headers</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E9F284;--shiki-dark:#E9F284\">      '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Content-Type</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">application/json</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#E9F284;--shiki-dark:#E9F284\">      '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Authorization</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> `Bearer </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">${</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">getToken</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">()</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">}</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">`</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// If you need to add a token to the header, you can do it here.</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    },</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  })</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> makeRequest</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">method</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> RequestInit</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">[</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">method</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">]) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  &#x3C;</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">TResponse</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> unknown</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">TBody</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\"> Record</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">&#x3C;</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">string</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">unknown</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">>>(</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">url</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> RequestInfo</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> |</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> URL</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">body</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> TBody</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">    query</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">&#x3C;</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">TResponse</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">>(url, {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      method,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      body</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> JSON</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">stringify</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(body),</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">     })</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">export</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> api </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  get</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> query,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  post</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> makeRequest</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">POST</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">),</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  delete</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> makeRequest</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">DELETE</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">),</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  put</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> makeRequest</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">PUT</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">),</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  patch</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> makeRequest</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">PATCH</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">),</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<p>And now, you can use your new wrapper around fetch like this:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-typescript\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">type</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Product</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  id</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  title</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> string</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  description</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> string</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  price</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  discountPercentage</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  rating</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  stock</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  brand</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> string</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  category</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> string</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  thumbnail</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> string</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  images</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> string</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">[]</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// GET https://dummyjson.com/products/1</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">api</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  .</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">get</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">&#x3C;</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">Product</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">>(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">/products/1</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  .</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">then</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">console</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">.</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">log</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  .</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">catch</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">((</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">err</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">    if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">err</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\"> instanceof</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\"> HTTPError</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">      // Handle HTTP Errors</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      console.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">error</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">HTTPError</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, err);</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">    if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">err</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\"> instanceof</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\"> SyntaxError</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">      // Handle error parsing of the response</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      console.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">error</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">SyntaxError</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, err);</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">    console</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">.</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">error</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Other errors</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">err</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">);</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">});</span></span></code></pre>\n<h2>Final thoughts</h2>\n<p>The code above is not full-featured as <a href=\"https://axios-http.com/\">Axios</a>, <a href=\"https://github.com/developit/redaxios\">redaxios</a>, <a href=\"https://github.com/sindresorhus/ky\">ky</a> or <a href=\"https://github.com/elbywan/wretch\">wretch</a>, but, most of the time, it is all need when I’m working with React using <a href=\"https://swr.vercel.app/\">SWR</a> or <a href=\"https://tanstack.com/query/latest\">TanStack Query</a> (and on the backend too). Give me your thoughts about the code and show me your improvements (if you want). You can access this code on this <a href=\"https://gist.github.com/DouglasdeMoura/59ce418672d0e33dda7056b382b01de9\">gist</a>.</p>\n",
    "tags": [
      "typescript",
      "javascript"
    ],
    "translates": "k9f6b2e2nioulc6"
  },
  "aprenda-como-os-programas-sao-executados-no-computador": {
    "id": "atlbwc7th1nnlm9",
    "title": "Aprenda como os programas são executados no computador",
    "slug": "aprenda-como-os-programas-sao-executados-no-computador",
    "locale": "pt-BR",
    "created": "2023-07-29T23:57:35.952Z",
    "updated": "2023-07-30T00:05:18.961Z",
    "content": "<p><a href=\"https://cpu.land/\">Neste delicioso artigo</a> (em inglês),  <a href=\"https://kognise.dev/\">Lexi Mattick</a> (juntamente com o <a href=\"https://hackclub.com/\">Hack Club</a>) descreve como funciona multiprocessamento, o que são <a href=\"https://en.wikipedia.org/wiki/System_call\"><em>system calls</em></a>, como os computadores gerenciam sua memória e como o Linux carrega seus executáveis. Tenho certeza que vocês aprenderão muito.</p>\n",
    "tags": [
      "Computadores",
      "Dicas"
    ],
    "translates": null
  },
  "the-minimum-you-need-to-know-to-test-your-apis-with-curl": {
    "id": "pgltwbdkto3gado",
    "title": "The minimum you need to know to test your APIs with CURL",
    "slug": "the-minimum-you-need-to-know-to-test-your-apis-with-curl",
    "locale": "en-US",
    "created": "2023-08-30T18:41:29.529Z",
    "updated": "2024-06-02T00:25:38.664Z",
    "content": "<p><a href=\"https://github.com/curl/curl\">CURL</a> is a command-line tool that allows you to transmit data with URL syntax, supporting a myriad of protocols (DICT, FILE, FTP, FTPS, GOPHER, GOPHERS, HTTP, HTTPS, IMAP, IMAPS, LDAP, LDAPS, MQTT, POP3, POP3S, RTMP, RTMPS, RTSP, SCP, SFTP, SMB, SMBS, SMTP, SMTPS, TELNET, TFTP, WS and WSS). In this article, I will focus on using CURL to make HTTP requests to APIs, which, at least for me, is the most common use.</p>\n<h2>Installation</h2>\n<p>CURL is already installed on most Linux distributions and <a href=\"https://techcommunity.microsoft.com/t5/containers/tar-and-curl-come-to-windows/ba-p/382409\">recent versions of Windows</a>. To check if it’s installed, just run the <code>curl</code> command in the terminal. If you don’t have CURL installed, you can install it with the command <code>sudo apt install curl</code> (Ubuntu/Debian) or <code>sudo yum install curl</code> (CentOS/Fedora) or <code>winget install curl</code> (Windows).</p>\n<p>Oh, and as it is common for us to work with REST APIs in web development, another command-line tool that will be useful to us is <a href=\"https://jqlang.github.io/jq/\"><code>jq</code></a>, which serves to format JSON in the terminal. To install <code>jq</code>, just run the command <code>sudo apt install jq</code> (Ubuntu/Debian) or <code>sudo yum install jq</code> (CentOS/Fedora) or <code>winget install jqlang.jq</code> (Windows).</p>\n<h2>Our example API</h2>\n<p>For didactic purposes, I will use <a href=\"https://dummyjson.com/\">DummyJSON</a> as an API.</p>\n<h2>Making a GET request</h2>\n<p>To make a GET request, just run the <code>curl</code> command followed by the URL you want to access. For example, to request data for product 1, just run the command <code>curl https://dummyjson.com/products/1</code>.</p>\n<p>And, to format the output, just add a <code>| jq</code> at the end of the command:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">curl</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> https://dummyjson.com/products/1</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> |</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> jq</span></span></code></pre>\n<h2>Making a POST, PUT, PATCH or DELETE request with JSON in the body</h2>\n<p>To make a POST request, just run:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">curl</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> --json</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">{\"title\": \"New product\"}</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> https://dummyjson.com/products/add</span></span></code></pre>\n<p>The <code>curl</code> will take care of adding the headers <code>Content-Type: application/json</code> and <code>Accept: application/json</code>. If you want to make a <code>PUT</code>, <code>PATCH</code> or <code>DELETE</code> request, add the <code>-X</code> option followed by the HTTP method you want to use. For example, to make a <code>PUT</code>, run:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">curl</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> -X</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> PUT</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> --json</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">{\"title\": \"New title\"}</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> https://dummyjson.com/products/1</span></span></code></pre>\n<p>You can also send a JSON file instead of typing the JSON in the terminal by putting an @ in front of the file name:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">curl</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> --json</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> @arquivo.json</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> https://dummyjson.com/products/add</span></span></code></pre>\n<p>Or passing data from <a href=\"https://man.archlinux.org/man/stdin.3.en\"><em>stdin</em></a> (note that I use <code>@-</code> instead of <code>@</code> to indicate that the data will come from <em>stdin</em>):</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">curl</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> --json</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> @-</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> https://dummyjson.com/products/add</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> &#x3C;</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> file.json</span></span></code></pre>\n<h2>Making a request with headers</h2>\n<p>To make a request with headers, just run the <code>curl</code> command followed by the URL you want to access, and the <code>-H</code> option followed by the header you want to send. So, to send a Bearer Token, you would run the following command:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">curl</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> -H</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Authentication: Bearer token</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> --json</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">{\"title\": \"New product\"}</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> https://dummyjson.com/products/add</span></span></code></pre>\n<h2>Some Exercises</h2>\n<p>Julia Evans published a few exercises to help you become fluent in curl. It should be worth to take a look at <a href=\"https://jvns.ca/blog/2019/08/27/curl-exercises/\">this post</a> in her blog.</p>\n<h2>References</h2>\n<ul>\n<li><a href=\"https://manpages.ubuntu.com/manpages/lunar/en/man1/curl.1.html\">curl manpage</a></li>\n</ul>\n",
    "tags": [
      "curl",
      "API",
      "HTTP"
    ],
    "translates": "5ufu9x2h9ilz2jr"
  },
  "slides-da-palestra-design-system-com-tailwind-css-da-conferencia-css-brasil-2023": {
    "id": "hf1qmggdzmgfgiz",
    "title": "Slides da palestra \"Design System com Tailwind CSS\" da Conferência CSS Brasil 2023",
    "slug": "slides-da-palestra-design-system-com-tailwind-css-da-conferencia-css-brasil-2023",
    "locale": "pt-BR",
    "created": "2023-01-22T19:02:10.980Z",
    "updated": "2023-01-22T19:09:17.314Z",
    "content": "<p>Palestra apresentada no <a href=\"https://conferenciacssbrasil.com.br/\">Conferência CSS Brasil 2023</a>.</p>\n<p>Veja os slides em <a href=\"https://design-system-com-tailwind-css.vercel.app/\">design-system-com-tailwind-css.vercel.app</a>. Quer ver como foram feitos? Acesse o repositório no <a href=\"https://github.com/DouglasdeMoura/design-system-com-tailwind-css\">GitHub</a>.</p>\n<p>Feito com <a href=\"https://sli.dev/\">Slidev</a>.</p>\n",
    "tags": [
      "talks"
    ],
    "translates": null
  },
  "um-array-com-todos-os-estados-do-brasil-para-voce-reusar-em-suas-aplicacoes": {
    "id": "ivk3bq1nejzjip8",
    "title": "Um array com todos os estados do Brasil, para você reusar em suas aplicações",
    "slug": "um-array-com-todos-os-estados-do-brasil-para-voce-reusar-em-suas-aplicacoes",
    "locale": "pt-BR",
    "created": "2024-05-31T15:26:20.916Z",
    "updated": "2024-05-31T15:41:29.153Z",
    "content": "<p>Eu já recriei este array tantas vezes na última década que eu só vou deixar este <em>snippet</em> (em JSON) aqui para que eu possa apenas copiá-lo a qualquer momento.</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-json\"><span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">[</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  { </span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">value</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">AC</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">label</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Acre</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> },</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  { </span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">value</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">AL</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">label</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Alagoas</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> },</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  { </span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">value</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">AP</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">label</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Amapá</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> },</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  { </span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">value</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">AM</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">label</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Amazonas</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> },</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  { </span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">value</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">BA</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">label</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Bahia</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> },</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  { </span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">value</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">CE</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">label</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Ceará</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> },</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  { </span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">value</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">DF</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">label</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Distrito Federal</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> },</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  { </span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">value</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">ES</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">label</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Espirito Santo</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> },</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  { </span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">value</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">GO</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">label</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Goiás</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> },</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  { </span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">value</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">MA</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">label</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Maranhão</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> },</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  { </span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">value</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">MS</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">label</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Mato Grosso do Sul</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> },</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  { </span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">value</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">MT</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">label</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Mato Grosso</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> },</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  { </span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">value</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">MG</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">label</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Minas Gerais</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> },</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  { </span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">value</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">PA</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">label</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Pará</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> },</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  { </span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">value</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">PB</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">label</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Paraíba</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> },</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  { </span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">value</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">PR</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">label</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Paraná</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> },</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  { </span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">value</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">PE</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">label</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Pernambuco</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> },</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  { </span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">value</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">PI</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">label</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Piauí</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> },</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  { </span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">value</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">RJ</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">label</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Rio de Janeiro</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> },</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  { </span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">value</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">RN</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">label</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Rio Grande do Norte</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> },</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  { </span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">value</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">RS</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">label</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Rio Grande do Sul</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> },</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  { </span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">value</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">RO</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">label</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Rondônia</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> },</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  { </span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">value</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">RR</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">label</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Roraima</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> },</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  { </span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">value</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">SC</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">label</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Santa Catarina</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> },</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  { </span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">value</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">SP</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">label</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">São Paulo</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> },</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  { </span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">value</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">SE</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">label</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Sergipe</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> },</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  { </span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">value</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">TO</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">label</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Tocantins</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> }</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">]</span></span></code></pre>\n",
    "tags": [
      "javascript",
      "html",
      "Snippet"
    ],
    "translates": null
  },
  "o-programador-poderoso": {
    "id": "jbn0kg24q86k7vn",
    "title": "O programador poderoso",
    "slug": "o-programador-poderoso",
    "locale": "pt-BR",
    "created": "2024-01-22T20:18:03.828Z",
    "updated": "2024-01-23T13:26:49.676Z",
    "content": "<p>Estimar, implementar e implantar software, rapidamente, é uma característica de programadores poderosos, como diz <a href=\"https://www.kentbeck.com/\">Kent Beck</a> em seu livro <a href=\"https://www.oreilly.com/library/view/extreme-programming-explained/0201616416/\">Extreme Programming Explained</a>. Vou explorar estes três pontos neste artigo, inserindo minhas próprias opiniões em cada ponto.</p>\n<h2>Estimativa</h2>\n<p>Estimar um projeto software é <a href=\"https://jacobian.org/2021/may/20/estimation/\">difícil</a>, e existem diversas técnicas diferentes de como estimar um projeto de software. Você pode criar um método, pela sua própria experiência, aprender o método utilizado por outras empresas mas, deve se atentar que, o ponto central é que você ter uma boa ideia de quanto tempo o projeto levará. Projetos têm começo, meio e fim. Aprenda a estimar (bem) o seu trabalho.</p>\n<h2>Implementação</h2>\n<p>Para mim, particularmente, implementar é a parte mais divertida do projeto. E como em todo trabalho, temos que ser pragmáticos na escolha da linguagem e das ferramentas. Ser pragmático na escolha não significa, necessariamente, usar o mesmo que todo mundo utiliza, pois, muitas vezes, algumas ferramentas continuam fortes no mercado por pura inércia. O <a href=\"https://expressjs.com/\">Express</a> é um bom exemplo disso. Além de haverem muitas opções melhores e com um melhor suporte (como o <a href=\"https://fastify.dev/\">Fastify</a>), muitas equipes ainda começam novos projetos com Express, mesmo que ele não esteja sendo mantido regularmente, não trate rejeições de Promises, etc.</p>\n<p>Fora a questão da escolha de ferramentas, é preciso que você <strong>domine</strong> a pilha de tecnologias do seu projeto, sendo capaz de implementar as melhores soluções no menor tempo possível. Na ponta da língua, você tem que saber um bom padrão para aplicar no projeto, um bom framework para o backend, um bom framework para o frontend ou mesmo um bom framework full stack. E a experiência do desenvolvimento não pode ficar de fora. Para que a implementação seja rápida, o entendimento do projeto deve ser fácil, sua documentação adequada e seus testes precisam validar os fluxos de <strong>intenção</strong> do usuário que utilizará o sistema.</p>\n<h2>Implantação</h2>\n<p>Hoje, você consegue construir um projeto inteiro e colocar em produção, sozinho? E não estou falando de subir um o seu projeto em uma plataforma completamente gerenciada, como a Vercel, mas sim, de pegar uma máquina Linux, instalar as ferramentas necessárias e expor a sua aplicação para a web. E não, isso não é nenhum tipo de purismo. Se você não é uma startup que pode queimar alguns milhões de reais por anos, sem se preocupar com o custo da sua infraestrutura, deveria, pelo menos, saber como iniciar a sua aplicação e mantê-la ativa entre as reinicializações do servidor (de preferência, usando <em>containers</em>), colocá-la atrás de um proxy reverso (como o <a href=\"https://www.nginx.com/\">NGINX</a> ou <a href=\"https://caddyserver.com/\">Caddy</a>), configurar um firewall e fazer um backup do banco de dados em três lugares diferentes. Você ainda pode subir várias instâncias da sua aplicação e usar a mesma ferramenta de proxy como load balancer para distribuir os acessos da sua aplicação às diferentes instâncias que estão rodando.</p>\n",
    "tags": [
      "Engenharia de Software",
      "Padrões de Projeto",
      "Carreira"
    ],
    "translates": "wxuu4bshveoe7ld"
  },
  "instalando-o-tema-dracula-no-gnome-console": {
    "id": "vk08vwbjc8nhmdw",
    "title": "Instalando o tema Dracula no Gnome Console",
    "slug": "instalando-o-tema-dracula-no-gnome-console",
    "locale": "pt-BR",
    "created": "2024-07-29T17:55:16.247Z",
    "updated": "2024-07-29T17:55:16.247Z",
    "content": "<p>O tema <a href=\"https://draculatheme.com/\">Dracula</a> criado pelo brasileiro <a href=\"https://x.com/zenorocha\">Zeno Rocha</a> é o tema que mais gosto de usar nas minhas ferramentas de trabalho (VS Code, NeoVim, etc.). Enquanto estava preparando meu ambiente de trabalho no Ubuntu, decidi experimentar o novo <a href=\"https://apps.gnome.org/Console/\">Gnome Console</a> e gostei muito. Infelizmente, ele não tem uma opção de configurar temas de cores, mas, ainda assim, é possível fazer isso configurando as <a href=\"https://www.gnu.org/software/coreutils/manual/html_node/dircolors-invocation.html\"><code>dircolors</code></a> e alterando a cor de fundo do terminal executando <code>echo -ne '\\e]11;#282A36\\e\\\\'</code> (note que <code>#282A36</code> é a <a href=\"https://draculatheme.com/contribute\">cor de fundo</a> do tema Dracula).</p>\n<p>Para isso, vamos baixar as <code>dircolors</code> do <a href=\"https://draculatheme.com/dircolors\">site oficial</a>:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">wget</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> https://raw.githubusercontent.com/dracula/dircolors/main/.dircolors</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> -P</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> ~/.dircolors</span></span></code></pre>\n<p>Agora, adicione <code>echo -ne '\\e]11;#282A36\\e\\\\'</code> no seu <code>.bashrc</code> (se você usa o Bash), <code>.zshrc</code> (se você usa ZSH) e/ou <code>.config/fish/config.fish</code> (se você, como eu, usa o Fish Shell).</p>\n",
    "tags": [
      "Linux",
      "Ubuntu"
    ],
    "translates": null
  },
  "use-this-npm-script-to-create-your-editorconfig-files": {
    "id": "fyuo9wob9vf9fz3",
    "title": "Use this NPM script to create your EditorConfig files ",
    "slug": "use-this-npm-script-to-create-your-editorconfig-files",
    "locale": "en-US",
    "created": "2022-01-09T15:00:00.000Z",
    "updated": "2023-01-04T15:16:37.227Z",
    "content": "<p>Have you ever needed to create an <a href=\"https://editorconfig.org/\">EditorConfig</a> to your programming projects but can never remember all the options you can use? Worry no more: just type <code>npx create-editorconfig -y</code> in your terminal and have one generated for you. Those are the default options:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-text\"><span class=\"line\"><span># editorconfig.org</span></span>\n<span class=\"line\"><span>root = true</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>[*]</span></span>\n<span class=\"line\"><span>charset = utf-8</span></span>\n<span class=\"line\"><span>end_of_line = lf</span></span>\n<span class=\"line\"><span>insert_final_newline = true</span></span>\n<span class=\"line\"><span>indent_style = space</span></span>\n<span class=\"line\"><span>indent_size = 2</span></span>\n<span class=\"line\"><span>trim_trailing_whitespace = true</span></span></code></pre>\n<p>If you want to customize the settings or even add more for a different set of files (by defining a glob pattern), just ommit the <code>-y</code> argument in the terminal and answer the prompted questions.</p>\n<img src=\"https://github.com/DouglasdeMoura/create-editorconfig/raw/main/usage.svg\" alt=\"Using create-editorconfig on ZSH\" />\n<h2>What is EditorConfig?</h2>\n<p>EditorConfig is a configuration file (the <code>.editorconfig</code>) that defines the coding styles that a given code editor (such as <a href=\"https://code.visualstudio.com/\">VS Code</a>) should apply in the files. You can even set a different set of rules for the files of your project according to your their extension or directory, by using a <a href=\"https://en.wikipedia.org/wiki/Glob_(programming)\">glob pattern</a>.</p>\n<h2>My code editor is not applying the EditorConfig settings</h2>\n<p>To apply your <code>.editorconfig</code> rules, your code editor should have a plugin or have EditorConfig rule parsing implemented natively (if you are using VS Code, you must install <a href=\"https://marketplace.visualstudio.com/items?itemName=EditorConfig.EditorConfig\">this extension</a>.</p>\n<p><a href=\"https://marketplace.visualstudio.com/items?itemName=EditorConfig.EditorConfig\"><img src=\"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/641onx2wrltmoq1ze501.png\" alt=\"EditorConfig extension on VS Code Marketplace\"></a></p>\n<h2>How can I contribute to <code>create-editorconfig</code>?</h2>\n<p>Please, go to the official <a href=\"https://github.com/douglasdeMoura/create-editorconfig\">GitHub repository</a> and open an issue.</p>\n<h2></h2>\n",
    "tags": [
      "javascript",
      "editorconfig",
      "npm",
      "npx"
    ],
    "translates": "1z3ovbccz4z4tmh"
  },
  "como-ficar-rico-segundo-naval": {
    "id": "uexpopcezi7muo0",
    "title": "Como ficar rico, segundo Naval",
    "slug": "como-ficar-rico-segundo-naval",
    "locale": "pt-BR",
    "created": "2024-06-01T23:45:47.857Z",
    "updated": "2024-06-01T23:50:04.710Z",
    "content": "<p>Há algum tempo, Naval Ravikant postou uma <a href=\"https://x.com/naval/status/1002103360646823936\">thread</a> no X (antigo Twitter) sobre como ficar rico. A thread foi tão boa que ele mesmo a transformou em um <a href=\"https://nav.al/rich\">podcast</a>. Aqui está uma tradução livre da thread:</p>\n<div hidden>\n- Seek wealth, not money or status. Wealth is having assets that earn while you sleep. Money is how we transfer time and wealth. Status is your place in the social hierarchy;\n- Understand that ethical wealth creation is possible. If you secretly despise wealth, it will elude you;\n- Ignore people playing status games. They gain status by attacking people playing wealth creation games;\n- You're not going to get rich renting out your time. You must own equity - a piece of a business - to gain your financial freedom;\n- You will get rich by giving society what it wants but does not yet know how to get. At scale;\n- Pick an industry where you can play long term games with long term people;\n- The Internet has massively broadened the possible space of careers. Most people haven't figured this out yet;\n- Play iterated games. All the returns in life, whether in wealth, relationships, or knowledge, come from compound interest;\n- Pick business partners with high intelligence, energy, and, above all, integrity;\n- Don't partner with cynics and pessimists. Their beliefs are self-fulfilling;\n- Learn to sell. Learn to build. If you can do both, you will be unstoppable;\n- Arm yourself with specific knowledge, accountability, and leverage;\n- Specific knowledge is knowledge that you cannot be trained for. If society can train you, it can train someone else, and replace you;\n- Specific knowledge is found by pursuing your genuine curiosity and passion rather than whatever is hot right now;\n- Building specific knowledge will feel like play to you but will look like work to others;\n- When specific knowledge is taught, it's through apprenticeships, not schools;\n- Specific knowledge is often highly technical or creative. It cannot be outsourced or automated;\n- Embrace accountability and take business risks under your own name. Society will reward you with responsibility, equity, and leverage;\n- The most accountable people have singular, public, and risky brands: Oprah, Trump, Kanye, Elon;\n- \"Give me a lever long enough, and a place to stand, and I will move the earth.\" - Archimedes\n- Fortunes require leverage. Business leverage comes from capital, people, and products with no marginal cost of replication (code and media);\n- Capital means money. To raise money, apply your specific knowledge, with accountability, and show resulting good judgment;\n- Labor means people working for you. It's the oldest and most fought-over form of leverage. Labor leverage will impress your parents, but don’t waste your life chasing it.;\n- Capital and labor are permissioned leverage. Everyone is chasing capital, but someone has to give it to you. Everyone is trying to lead, but someone has to follow you;\n- Code and media are permissionless leverage. They're the leverage behind the newly rich. You can create software and media that works for you while you sleep;\n- An army of robots is freely available - it's just packed in data centers for heat and space efficiency. Use it;\n- If you can't code, write books and blogs, record videos and podcasts;\n- Leverage is a force multiplier for your judgement;\n- Judgement requires experience, but can be built faster by learning foundational skills;\n- There is no skill called \"business.\" Avoid business magazines and business classes;\n- Study microeconomics, game theory, psychology, persuasion, ethics, mathematics, and computers;\n- Reading is faster than listening. Doing is faster than watching;\n- You should be too busy to \"do coffee,\" while still keeping an uncluttered calendar;\n- Set and enforce an aspirational personal hourly rate. If fixing a problem will save less than your hourly rate, ignore it. If outsourcing a task will cost less than your hourly rate, outsource it;\n- Work as hard as you can. Even though who you work with and what you work on are more important than how hard you work;\n- Become the best in the world at what you do. Keep redefining what you do until this is true;\n- There are no get rich quick schemes. That's just someone else getting rich off you;\n- Apply specific knowledge, with leverage, and eventually, you will get what you deserve;\n- When you're finally wealthy, you'll realize that it wasn't what you were seeking in the first place.\n</div>\n<ul>\n<li>Busque riqueza, não dinheiro ou status. Riqueza é ter ativos que geram renda enquanto você dorme. Dinheiro é como transferimos tempo e riqueza. Status é seu lugar na hierarquia social;</li>\n<li>Entenda que a criação de riqueza ética é possível. Se você secretamente despreza a riqueza, ela o iludirá;</li>\n<li>Ignore pessoas jogando jogos de status. Elas ganham status atacando pessoas que jogam jogos de criação de riqueza;</li>\n<li>Você não ficará rico alugando seu tempo. Você deve possuir patrimônio - uma parte de um negócio - para conquistar sua liberdade financeira;</li>\n<li>Você ficará rico dando à sociedade o que ela quer, mas ainda não sabe como obter. Em escala;</li>\n<li>Escolha uma indústria onde você possa jogar jogos de longo prazo com pessoas de longo prazo;</li>\n<li>A Internet ampliou massivamente o espaço possível de carreiras. A maioria das pessoas ainda não percebeu isso;</li>\n<li>Jogue jogos iterados. Todos os retornos na vida, seja em riqueza, relacionamentos ou conhecimento, vêm do interesse composto;</li>\n<li>Escolha parceiros de negócios com alta inteligência, energia e, acima de tudo, integridade;</li>\n<li>Não se associe a cínicos e pessimistas. Suas crenças são auto-realizáveis;</li>\n<li>Aprenda a vender. Aprenda a construir. Se você puder fazer ambos, será imparável;</li>\n<li>Arme-se com conhecimento específico, responsabilidade e alavancagem;</li>\n<li>Conhecimento específico é conhecimento para o qual você não pode ser treinado. Se a sociedade pode treiná-lo, ela pode treinar outra pessoa e substituí-lo;</li>\n<li>Conhecimento específico é encontrado ao seguir sua genuína curiosidade e paixão, em vez do que está na moda agora;</li>\n<li>Construir conhecimento específico parecerá brincadeira para você, mas parecerá trabalho para os outros;</li>\n<li>Quando o conhecimento específico é ensinado, é através de aprendizados, não escolas;</li>\n<li>Conhecimento específico é frequentemente altamente técnico ou criativo. Não pode ser terceirizado ou automatizado;</li>\n<li>Abrace a responsabilidade e assuma riscos empresariais em seu próprio nome. A sociedade recompensará você com responsabilidade, patrimônio e alavancagem;</li>\n<li>As pessoas mais responsáveis têm marcas singulares, públicas e arriscadas: Oprah, Trump, Kanye, Elon;</li>\n<li>“Dê-me uma alavanca suficientemente longa e um ponto de apoio, e moverei a Terra.” - Arquimedes</li>\n<li>Fortunas exigem alavancagem. A alavancagem dos negócios vem do capital, pessoas e produtos sem custo marginal de replicação (código e mídia);</li>\n<li>Capital significa dinheiro. Para levantar dinheiro, aplique seu conhecimento específico, com responsabilidade, e mostre bom julgamento resultante;</li>\n<li>Trabalho significa pessoas trabalhando para você. É a forma mais antiga e mais disputada de alavancagem. A alavancagem do trabalho impressionará seus pais, mas não desperdice sua vida perseguindo-a;</li>\n<li>Capital e trabalho são as alavancagens permitidas. Todos estão perseguindo capital, mas alguém tem que dar a você. Todos estão tentando liderar, mas alguém tem que segui-lo;</li>\n<li>Código e mídia são alavancagens sem permissão. Elas são a alavancagem por trás dos novos ricos. Você pode criar software e mídia que trabalham para você enquanto você dorme;</li>\n<li>Um exército de robôs está disponível gratuitamente - ele está apenas contido em centros de dados para eficiência de calor e espaço. Use-o;</li>\n<li>Se você não sabe programar, escreva livros e blogs, grave vídeos e podcasts;</li>\n<li>Alavancagem é um multiplicador de força para seu julgamento;</li>\n<li>Julgamento requer experiência, mas pode ser construído mais rapidamente aprendendo habilidades fundamentais;</li>\n<li>Não existe habilidade chamada “negócios”. Evite revistas de negócios e aulas de negócios;</li>\n<li>Estude microeconomia, teoria dos jogos, psicologia, persuasão, ética, matemática e computação;</li>\n<li>Ler é mais rápido que ouvir. Fazer é mais rápido que assistir;</li>\n<li>Você deve estar ocupado demais para “tomar um café”, mas ainda mantendo uma agenda desocupada;</li>\n<li>Estabeleça e faça cumprir uma taxa pessoal horária aspiracional. Se resolver um problema economizar menos do que sua taxa horária, ignore-o. Se terceirizar uma tarefa custar menos do que sua taxa horária, terceirize-a;</li>\n<li>Trabalhe o mais duro que puder. Mesmo que com quem você trabalha e no que você trabalha sejam mais importantes do que quão duro você trabalha;</li>\n<li>Torne-se o melhor do mundo no que você faz. Continue redefinindo o que você faz até que isso seja verdade;</li>\n<li>Não existem esquemas para ficar rico rapidamente. Isso é apenas outra pessoa ficando rica às suas custas;</li>\n<li>Aplique conhecimento específico, com alavancagem, e eventualmente você obterá o que merece;</li>\n<li>Quando você finalmente estiver rico, perceberá que não era isso que você estava buscando originalmente.</li>\n</ul>\n",
    "tags": [
      "Conselhos",
      "Riqueza",
      "Sabedoria"
    ],
    "translates": null
  },
  "criando-modais-nativos-com-o-elemento-dialog": {
    "id": "066kuym52jk3nbp",
    "title": "Criando modais nativos com o elemento dialog",
    "slug": "criando-modais-nativos-com-o-elemento-dialog",
    "locale": "pt-BR",
    "created": "2023-08-13T01:49:01.615Z",
    "updated": "2023-08-15T00:22:04.855Z",
    "content": "<p>Usar elementos customizados de diálogo no lugar das implementações nativas do navegador, como <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/alert\"><code>alert</code></a>,\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/confirm\"><code>confirm</code></a> ou <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/prompt\"><code>prompt</code></a>,\nse tornou o padrão do desenvolvimento web há bastante tempo (popularizado por diversos plugins do <a href=\"https://jqueryui.com/dialog/\">jQuery</a> e pelo próprio <a href=\"https://getbootstrap.com/2.3.2/javascript.html#modals\">Bootstrap</a>), de modo que, a cada nova biblioteca de UI que surge<sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1\">[1]</a></sup><sup class=\"footnote-ref\"><a href=\"#fn2\" id=\"fnref2\">[2]</a></sup><sup class=\"footnote-ref\"><a href=\"#fn3\" id=\"fnref3\">[3]</a></sup>, é comum que seus autores re-implementem um modal com o framework da vez (que podem ou não implementar <a href=\"https://www.w3.org/WAI/ARIA/apg/patterns/dialog-modal/\">acessibilidade WAI-ARIA</a>).</p>\n<p>Mas agora, com a chegada do elemento <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog\"><code>&lt;dialog&gt;</code></a> no HTML5 (suportado por <a href=\"https://caniuse.com/dialog\">93,85%</a> dos navegadores em uso), é muito mais fácil criar diálogos de forma nativa. Neste artigo, vamos ver como criar um diálogo modal (e não-modal) simples com o elemento <code>&lt;dialog&gt;</code>.</p>\n<h2>Entendendo o elemento <em>dialog</em></h2>\n<p>No sentido empregado no desenvolvimento de interfaces de usuário, um <strong>diálogo</strong> é uma <q>conversação</q> entre o sistema e o usuário, onde o sistema espera uma resposta do usuário para continuar. Um diálogo pode ser <strong>modal</strong> ou <strong>não-modal</strong>. Um diálogo modal (isto é um, um diálogo que muda o <strong>modo</strong> de interação do usuário com o sistema) é aquele que trava a interface, impedindo o usuário de interagir com o restante da página até que ele seja fechado. Um diálogo não-modal (isto é um, um diálogo que <em>não</em> muda o <strong>modo</strong> de interação do usuário com o sistema), por outro lado, permite que o usuário interaja com o restante da página enquanto o diálogo está aberto.</p>\n<p>A maneira mais simples de colocar um diálogo não-modal na tela é da seguinte forma:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-html\"><span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">&#x3C;</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">dialog</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B;font-style:italic;--shiki-dark-font-style:italic\"> open</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">></span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  &#x3C;</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">p</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">>Olá, mundo!&#x3C;/</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">p</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">></span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  &#x3C;</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">form</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B;font-style:italic;--shiki-dark-font-style:italic\"> method</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">dialog</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">></span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    &#x3C;</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">button</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">>Fechar&#x3C;/</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">button</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">></span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  &#x3C;/</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">form</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">></span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">&#x3C;/</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">dialog</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">></span></span></code></pre>\n<p>Note o formulário, na linha 5, com o método <em>dialog</em>. É este formulário que envia ações para o <code>dialog</code>. Ele será exibido dessa forma:</p>\n<iframe loading=\"lazy\" allowtransparency allowfullscreen height=\"380px\" width=\"100%\" title=\"Styled Dialog\" src=\"https://codepen.io/douglasdemoura/embed/qBQzzww\n?default-tab=result&embed-version=2\"></iframe><p>O que torna o exemplo acima um diálogo não modal é o uso do atributo <code>open</code> (linha 1), o que também faz com que ele não possa ser fechado com a tecla <code>Esc</code>. Também é possível criar um diálogo não modal usando a API JavaScript:</p>\n<iframe loading=\"lazy\" allowtransparency allowfullscreen height=\"380px\" width=\"100%\" title=\"Styled Dialog\" src=\"https://codepen.io/douglasdemoura/embed/BaGXqjx\n?default-tab=result&embed-version=2\"></iframe><p>Agora, para que o diálogo se comporte como um modal, é necessário que ele seja aberto através de sua API JavaScript, você pode ver no exemplo a seguir:</p>\n<iframe loading=\"lazy\" allowtransparency allowfullscreen height=\"380px\" width=\"100%\" title=\"Styled Dialog\" src=\"https://codepen.io/douglasdemoura/embed/ZEmdgYj\n?default-tab=result&embed-version=2\"></iframe><p>Desta vez, abrimos e fechamos o modal com JavaScript e colocamos o resultado do formulário no elemento <code>output</code> quando o modal é fechado. Leia o código com calma e tente entender o que está acontecendo.</p>\n<h2>Estilizando o modal</h2>\n<p>O elemento <code>dialog</code> pode (é claro), ser estilizado como qualquer outro elemento HTML. Atente-se, porém, que, para estilizar o <em>overlay</em> (o fundo escuro que fica atrás do modal), é necessário usar o seletor <code>::backdrop</code>:</p>\n<iframe loading=\"lazy\" allowtransparency allowfullscreen height=\"380px\" width=\"100%\" title=\"Styled Dialog\" src=\"https://codepen.io/douglasdemoura/embed/PoxrMzW\n?default-tab=result&embed-version=2\"></iframe><h2>Polyfill</h2>\n<p>Se você quiser usar o <code>dialog</code> e não ter problemas de compatibilidade em navegadores mais antigos, pode usar este <a href=\"https://github.com/GoogleChrome/dialog-polyfill\">polyfill</a>.</p>\n<hr />\n<h3>Referências</h3>\n<ul>\n<li><a href=\"https://web.dev/learn/html/dialog/\">Dialog</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog\">Dialog</a></li>\n<li><a href=\"https://www.nngroup.com/articles/modal-nonmodal-dialog/\">Modal &amp; Nonmodal Dialogs: When (&amp; When Not) to Use Them</a></li>\n</ul>\n<hr class=\"footnotes-sep\">\n<section class=\"footnotes\">\n<ol class=\"footnotes-list\">\n<li id=\"fn1\" class=\"footnote-item\"><p><a href=\"https://mui.com/material-ui/react-modal/\">Modal do Material UI</a> <a href=\"#fnref1\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn2\" class=\"footnote-item\"><p><a href=\"https://ant.design/components/modal\">Modal do Ant Design</a> <a href=\"#fnref2\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn3\" class=\"footnote-item\"><p><a href=\"https://carbondesignsystem.com/components/modal/usage/#live-demo\">Modal do Carbon Design System</a> <a href=\"#fnref3\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n</ol>\n</section>\n",
    "tags": [
      "tutorial",
      "javascript",
      "html"
    ],
    "translates": "pd682cq57ureywz"
  },
  "encontrando-o-maior-divisor-comum-em-typescript": {
    "id": "vfb16zvqx9d6eq8",
    "title": "Encontrando o maior divisor comum em TypeScript",
    "slug": "encontrando-o-maior-divisor-comum-em-typescript",
    "locale": "pt-BR",
    "created": "2024-01-25T13:47:59.773Z",
    "updated": "2024-01-25T13:56:47.886Z",
    "content": "<p>Primeiramente descrito no clássico livro de geometria <em>Elementos</em>, pelo matemático grego antigo Euclides (cerca de 300 a.C., no livro VII, proposição 2), o método de encontrar o maior divisor comum entre os números positivos $a$ e $b$, sendo $a &gt; b$, consiste no conhecimento de que os divisores comuns de $a$ e $b$ são os mesmos de $a - b$ e $b$. Portanto, podemos encontrar esse maior divisor comum substituindo o maior número ($a$) pela diferença entre os dois números ($a - b$), repetidamente, até que os dois números sejam iguais. Em TypeScript, podemos fazer isso assim:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-typescript\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> gcd</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">a</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">b</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  // Quando `a` for igual a `b`, retorna o resultado</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (a </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">===</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> b) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> a</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  // Enquanto `a` é maior que b, chama a função novamente</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  // com o novo `a` sendo `a - b`:</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (a </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> b) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    return</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> gcd</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(a </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">-</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> b, b)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  // Se o novo `b` for maior que `a`,</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  // subtraia `a` de `b`.</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> gcd</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(a, b </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">-</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> a)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<p>Este método pode ser muito lento se a diferença entre $a$ e $b$ for muito grande. Felizmente, existe outro método para encontrar o maior divisor comum entre dois números, que pode ser descrito da seguinte forma:</p>\n<p>Para encontrar o maior divisor comum entre $a$ e $b$, sendo $a &gt; b$, realize a divisão entre os dois números. Esta operação dará um quociente e um resto (que chamaremos de $q$ e $r$, respectivamente). Assim, $a$ pode ser descrito como $a = q \\times b + r$;\nSe $r$ for igual a 0, paramos, porque descobrimos que o maior divisor comum de $a$ e $b$ é $b$. Caso contrário, voltamos ao passo 1, fazendo de $b$ o novo $a$ e $r$ será o novo $b$.\nAgora, podemos começar com a implementação do algoritmo acima:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-typescript\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> gcd</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">a</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">b</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  // Primeiro, calculamos o resto da divisão entre `a` e `b`:</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> r </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> a </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">%</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> b</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  </span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  // Se o resto for igual a zero, significamos que já encontramos o</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  // maior divisor comum, porrtanto, retornamos `b`:</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (r </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">===</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 0</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> b</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  </span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  // Enquanto o resto não for igual a 0, chamamos a função novamente,</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  // com os novos valores de `a` e `b`:</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> gcd</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(b, a </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">%</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> b)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<p>A implementação é muito direta e pode ser lida exatamente como descrita nos passos 1 e 2. Podemos tornar a função mais simples, verificando diretamente se $b$ é igual a zero e só realizando a operação de resto depois disso. Portanto, se a função receber um $b$ que seja igual a zero, saberemos que $a$ é o maior divisor comum:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-typescript\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> gcd</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">a</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">b</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (b </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">===</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 0</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> a</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  </span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> gcd</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(b, a </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">%</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> b)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<p>Esta variante é chamada de <em>algoritmo euclidiano</em> (em contraste com a primeira, que é o <em>algoritmo de Euclides</em>) e é significativamente mais rápida do que a primeira implementação.</p>\n<h2>Implementações alternativas</h2>\n<p>Também podemos adotar uma abordagem diferente. Em vez de chamar nossa função gcd recursivamente, podemos implementar nossa função usando um laço <code>while</code> (análogo à nossa primeira implementação acima):</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-typescript\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> gcd</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">a</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">b</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  // Roda este laço enquanto `a` for diferente de `b`</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  while</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (a </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">!==</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> b) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (a </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> b) {</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">      // Subtrai `b` de `a` enquanto `a` for maior que `b`</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      a </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> a </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">-</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> b</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">      // Pula para a próxima iteração</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">      continue</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    }</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">    // Subtrai `a` de `b` quanto a &#x3C;= b</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    b </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> b </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">-</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> a</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  // Retorna o resultado</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> a</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<p>E esta é outra maneira (análoga à nossa segunda implementação acima):</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-typescript\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> gcd</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">a</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">b</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  // Roda este laço enquanto `b` for diferente de 0</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  while</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (b </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">!==</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 0</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">    // Salva o novo valor em uma variável temporária</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> newA </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> b</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    b </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> a </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">%</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> b</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    a </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> newA</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> a</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<h2>Encontrando o maior divisor comum entre três ou mais números</h2>\n<p>O maior divisor comum de três ou mais números é igual ao produto dos fatores primos comuns a todos os números (exploraremos mais isso em um futuro artigo), mas, você também pode calcular o maior divisor comum entre pares desta lista de números com as mesmas funções que já mostramos. Então, vamos refatorar nossa função<code>gcd</code> para receber múltiplos parâmetros:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-typescript\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> gcd</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">...</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">numbers</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">[])</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> calculateGcd</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">a</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">b</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (b </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">===</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 0</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">      return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> a</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    return</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> calculateGcd</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(b, a </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">%</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> b)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  };</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span></span>\n<span class=\"line\"><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">    numbers</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">      // Só por precaução, ordena os números em ordem descendente:</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      .</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">sort</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">((</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">a</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">b</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> b </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">-</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> a)</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">      // Chama `calculateGcd` para cada par de números na lista:</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      .</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">reduce</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">((</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">a</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">b</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> calculateGcd</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(a, b))</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  )</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<h2>Validando nossas entradas</h2>\n<p>Vamos garantir que nossas funções devem sempre receber, pelo menos, dois números e que todos os números deve ser positivos:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-typescript\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> gcd</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">...</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">numbers</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">[])</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (numbers.length </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">&#x3C;</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 2</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    throw</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6;font-weight:bold;--shiki-dark-font-weight:bold\"> new</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> Error</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Você deve passar, pelo menos, 2 números</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (numbers.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">some</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">((</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">number</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> number </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">&#x3C;</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 0</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    throw</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6;font-weight:bold;--shiki-dark-font-weight:bold\"> new</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> Error</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Os números devem ser >= 0</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> calculateGcd</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">a</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">b</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (b </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">===</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 0</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">      return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> a</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    return</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> calculateGcd</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(b, a </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">%</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> b);</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  };</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span></span>\n<span class=\"line\"><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">    numbers</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      .</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">sort</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">((</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">a</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">b</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> b </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">-</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> a)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      .</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">reduce</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">((</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">a</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">b</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> calculateGcd</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(a, b))</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  )</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n",
    "tags": [
      "javascript",
      "mathematic",
      "typescript"
    ],
    "translates": "5d4agn9wp8tkd45"
  },
  "devo-commitar-o-node-modules-no-git": {
    "id": "bjdnvqai9ykbt6v",
    "title": "Devo commitar o node_modules no git?",
    "slug": "devo-commitar-o-node-modules-no-git",
    "locale": "pt-BR",
    "created": "2024-06-04T17:49:35.568Z",
    "updated": "2024-06-04T17:49:35.568Z",
    "content": "<p>TL; DR: Não. Por favor, adicione <code>node_modules</code> ao seu arquivo <code>.gitignore</code>:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-text\"><span class=\"line\"><span>node_modules</span></span></code></pre>\n<h2>Mas, por quê?</h2>\n<p>O diretório <code>node_modules</code> é onde o seu gerenciador de pacotes (que pode ser o <a href=\"https://www.npmjs.com/\">npm</a>, <a href=\"https://classic.yarnpkg.com/\">yarn</a> ou <a href=\"https://pnpm.io/\">pnpm</a>) irá instalar todas as dependências do projeto listadas no seu <code>package.json</code>. Independentemente do gerenciador de pacotes que você escolher, um lockfile (<code>package-lock.json</code>, <code>yarn.lock</code> ou <code>pnpm-lock.yaml</code>, respectivamente) será gerado na primeira vez que você instalar as dependências do seu projeto, descrevendo toda a árvore de dependências. Dessa forma, toda vez que você precisar reinstalar as dependências do seu projeto, você obterá exatamente os mesmos arquivos.</p>\n<p>O lockfile deve ser <em>commitado</em> no <code>git</code>, permitindo a reinstalação da árvore de dependências em qualquer outro ambiente, o que torna desnecessário commitar o diretório <code>node_modules</code> no <code>git</code> (além disso, isso reduz muito o tamanho do seu repositório, já que o <code>node_modules</code> pode consumir gigabytes de espaço).</p>\n",
    "tags": [
      "Node.js",
      "javascript",
      "npm"
    ],
    "translates": "46trc5wkbpbc97s"
  },
  "introduction-to-algorithms": {
    "id": "fk4euqpea154kb9",
    "title": "Introduction to algorithms",
    "slug": "introduction-to-algorithms",
    "locale": "en-US",
    "created": "2024-01-25T17:00:12.952Z",
    "updated": "2024-01-25T17:01:52.985Z",
    "content": "<h2>What is an Algorithm?</h2>\n<p>An algorithm is a precise and unambiguous specification of a sequence of computational steps that can be mechanically performed<sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1\">[1]</a></sup>. From this, we can think of a function that receives a value or a set of values as input and returns a value or a set of values as its output.</p>\n<p>An algorithm can be correct or incorrect. It is correct when, given its input parameters, its output is correct and, therefore, solves the computational problem for which it was developed. An incorrect algorithm, on the other hand, may stop with an incorrect output or may not stop at all for some input instances. Still, some incorrect algorithms can still have useful applications.</p>\n<p>There can be different algorithms that solve the same problem, some more efficient, that is, faster than others. But, not every problem has an efficient solution. Such problems are known as <abbr title=\"Non-deterministic Polynomial time\">NP</abbr>-complete.</p>\n<p><abbr title=\"Non-deterministic Polynomial time\">NP</abbr>-complete problems are very interesting: even though no efficient algorithm has been found for this class of problems, it has not been proven that it is not possible to find an efficient algorithm (from class P, which can be solved in polynomial time) for such a problem. Moreover, if there were an efficient algorithm to solve an NP-complete problem, it would mean that there is an efficient algorithm for all <abbr title=\"Non-deterministic Polynomial time\">NP</abbr>-complete problems.</p>\n<Alert title=\"P vs. NP\">\nP vs. NP is a fundamental question in computer science, specifically in the field of computational complexity theory. It concerns the relationship between two classes of problems. The P class consists of decision problems (problems with a yes or no answer) that can be quickly solved (in polynomial time) by a deterministic computer, meaning that the time needed to solve the problem grows at a manageable rate as the size of the input increases. On the other hand, the NP class consists of decision problems for which, if a solution is provided, it can be quickly verified (also in polynomial time) by a deterministic computer.\n<p>The crucial question, “Is P equal to NP?”, asks whether every problem whose solution can be quickly verified (NP) can also be solved quickly (P). This is profound because, if P were equal to NP, it would mean that all the problems that we can verify quickly can also be solved quickly. This has vast implications for various fields, including cryptography, optimization, and algorithm design.\n</Alert></p>\n<h2>Algorithmic Complexity</h2>\n<p>When we talk about algorithms, most of the time we are interested in the growth rate of time and space required to solve increasingly larger instances of certain problems. If we are interested in the time a particular algorithm takes to perform its function, we are interested in its time complexity. And the behavior of the time complexity limit of our algorithm in relation to the increase of the problem instances is called asymptotic time complexity. And it is this asymptotic complexity that determines the size of the problem that can be solved by algorithms<sup class=\"footnote-ref\"><a href=\"#fn2\" id=\"fnref2\">[2]</a></sup>.</p>\n<p>If an algorithm takes a time $cn^2$ for a constant $c$ to process an input of size $n$, we say that the complexity of the algorithm is of the order of $n^2$, or, in Bachmann–Landau notation (also called asymptotic notation and Big O notation), the algorithm has complexity $O(n^2)$.</p>\n<p>To get a better idea of what this means in relation to the runtime of our algorithm, consider that one unit of time on the computer on which we run our algorithm is 1 millisecond. Now, we want to know what the maximum size of input that our algorithm can process within a certain time limit (one second, one hour, and one day). Note, in the table below, how much the complexity of the algorithm interferes with the maximum size of the input it can handle, given the time limit:</p>\n<table>\n<thead>\n<tr>\n<th>Time Complexity</th>\n<th>1 second</th>\n<th>1 minute</th>\n<th>1 hour</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>$n$</td>\n<td>1000</td>\n<td>60000</td>\n<td>360000</td>\n</tr>\n<tr>\n<td>$n \\log_2 n$</td>\n<td>140</td>\n<td>4895</td>\n<td>204095</td>\n</tr>\n<tr>\n<td>$n^2$</td>\n<td>31</td>\n<td>244</td>\n<td>1897</td>\n</tr>\n<tr>\n<td>$n^3$</td>\n<td>10</td>\n<td>39</td>\n<td>153</td>\n</tr>\n<tr>\n<td>$2^n$</td>\n<td>9</td>\n<td>15</td>\n<td>21</td>\n</tr>\n</tbody>\n</table>\n<p>Even though we can build faster computers, the increase in the execution speed of less efficient algorithms would not be so significant, so we should always seek the most efficient algorithm to address a given problem.</p>\n<hr class=\"footnotes-sep\">\n<section class=\"footnotes\">\n<ol class=\"footnotes-list\">\n<li id=\"fn1\" class=\"footnote-item\"><p>AHO, Alfred V.; ULLMAN, Jeffrey D. <em>Foundations of Computer Science</em>. Stanford, 1994. <a href=\"#fnref1\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn2\" class=\"footnote-item\"><p>AHO, Alfred V.; HOPCROFT, John E.; ULLMAN, Jeffrey D. <em>The Design and Analysis of Computer Algorithms</em>. Addison-Wesley, 1974. <a href=\"#fnref2\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n</ol>\n</section>\n",
    "tags": [
      "Beginners",
      "Computer Science",
      "algorithms"
    ],
    "translates": "q56goy3mqfdb3hu"
  },
  "usando-typescript-em-projetos-node-js": {
    "id": "5xfzc0v2gy17ywy",
    "title": "Usando TypeScript em projetos Node.js",
    "slug": "usando-typescript-em-projetos-node-js",
    "locale": "pt-BR",
    "created": "2024-07-08T09:51:28.826Z",
    "updated": "2024-07-08T09:51:28.826Z",
    "content": "<p><a href=\"https://www.typescriptlang.org/\">TypeScript</a> é extremamente útil durante o desenvolvimento de aplicações Node.js. Vamos ver como configurá-lo para uma experiência de desenvolvimento tranquila.</p>\n<h2>Configurando o TypeScript</h2>\n<p>Primeiro, precisamos instalar o TypeScript. Podemos fazer isso executando o seguinte comando:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">npm</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> i</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> -D</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> typescript</span></span></code></pre>\n<p>Em seguida, precisamos criar um arquivo <code>tsconfig.json</code> na raiz do nosso projeto. Este arquivo conterá a configuração do TypeScript para o nosso projeto. Aqui está um exemplo de um arquivo <code>tsconfig.json</code> que peguei do <a href=\"https://www.totaltypescript.com/tsconfig-cheat-sheet\">Total TypeScript</a> e adicionei mais algumas coisas (leia o código e preste atenção aos comentários):</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-json\"><span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">  \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">compilerOptions</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">    /* Opções Base: */</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">esModuleInterop</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">skipLibCheck</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">target</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">es2022</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">allowJs</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">resolveJsonModule</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">moduleDetection</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">force</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">isolatedModules</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">verbatimModuleSyntax</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">    /* Configurando ~ como alias para o diretório src/ */</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">baseUrl</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">.</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">paths</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">      \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">~/*</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> [</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">src/*</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">]</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    },</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">    /* Rigor */</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">strict</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">noUncheckedIndexedAccess</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">noImplicitOverride</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">    /* Se compilando com TypeScript: */</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">module</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">NodeNext</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">outDir</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">dist</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">sourceMap</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">    /* E se você estiver construindo para uma biblioteca: */</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">declaration</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">    /* E se você estiver construindo para uma biblioteca em um monorepo: */</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">composite</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">declarationMap</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">    /* Se NÃO estiver compilando com TypeScript: */</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">module</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">preserve</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">noEmit</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">    /* Se o seu código roda no DOM: */</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">lib</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> [</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">es2022</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">dom</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">dom.iterable</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">],</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">    /* Se o seu código não roda no DOM: */</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">lib</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> [</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">es2022</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">],</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  },</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  /* Estou considerando que todo o seu código está em src/ */</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">  \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">include</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> [</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">src/**/*.ts</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">]</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<h2>Configurando o script de build</h2>\n<p>Em seguida, precisamos configurar um script de build que irá compilar nosso código TypeScript para JavaScript. Primeiro, instale <a href=\"https://www.npmjs.com/package/tsc-alias\"><code>tsc-alias</code></a> para lidar com os aliases que definimos no arquivo <code>tsconfig.json</code>:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">npm</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> i</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> -D</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> tsc-alias</span></span></code></pre>\n<p>Depois, você pode adicionar o script <code>build</code> adicionando o seguinte script ao nosso arquivo <code>package.json</code>:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-json\"><span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">  \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">scripts</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">build</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">tsc &#x26;&#x26; tsc-alias</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<h2>Configurando o script de desenvolvimento</h2>\n<p>Agora, precisamos configurar um script de desenvolvimento que irá observar mudanças em nossos arquivos TypeScript e recompilá-los. Pessoalmente, gosto de usar <a href=\"https://tsx.is/\"><code>tsx</code></a>, pois proporciona uma experiência de desenvolvimento muito mais rápida em comparação com o <a href=\"https://www.typescriptlang.org/docs/handbook/configuring-watch.html\">TypeScript watcher</a> ou <a href=\"https://typestrong.org/ts-node/\">ts-node</a>. Primeiro, instale <code>tsx</code>:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">npm</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> i</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> -D</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> tsx</span></span></code></pre>\n<p>Depois, você pode adicionar o script <code>dev</code> (para iniciar o projeto em modo de desenvolvimento) adicionando o seguinte script ao seu arquivo <code>package.json</code>:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-json\"><span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">  \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">scripts</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">build</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">tsc &#x26;&#x26; tsc-alias</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">dev</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">node --import=tsx --watch ./src/index.ts</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<p>Sim, você não terá verificação de tipos enquanto desenvolve usando <code>tsx</code>, mas você pode rodar <code>npm run build</code> para isso ou adicionar um novo script <code>typecheck</code> ao seu <code>package.json</code> e executá-lo sempre que quiser verificar erros de tipos:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-json\"><span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">  \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">scripts</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">build</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">tsc &#x26;&#x26; tsc-alias</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">dev</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">node --import=tsx --watch ./src/index.ts</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">typecheck</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">tsc --noEmit</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n",
    "tags": [
      "Node.js",
      "javascript",
      "typescript"
    ],
    "translates": "8cxztl6gvjs26in"
  },
  "multiplas-formas-de-somar-os-valores-de-um-array-de-objetos-em-typescript": {
    "id": "l2hgc45s729in42",
    "title": "Múltiplas formas de somar os valores de um array de objetos, em TypeScript",
    "slug": "multiplas-formas-de-somar-os-valores-de-um-array-de-objetos-em-typescript",
    "locale": "pt-BR",
    "created": "2024-01-17T23:28:26.679Z",
    "updated": "2024-01-23T13:49:43.604Z",
    "content": "<p>Há algum tempo, o <a href=\"https://twitter.com/zanfranceschi\">Zan Franceschi</a> postou o seguinte desafio:</p>\n<Tweet id=\"1564671754483765251\" />\n<p>Neste artigo, vou resolvê-lo de duas formas: uma com laços e outra sem laços, com TypeScript.</p>\n<h2>Analisando os dados</h2>\n<p>Vou transcrever o JSON do desafio para facilitar a nossa análise:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-json\"><span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">  \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">compras</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> [</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    {</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">      \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">data</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">2022-01-01</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">      \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">produtos</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> [</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">        {</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">          \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">cod</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">a</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">          \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">qtd</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 2</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">          \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">valor_unitario</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 12.24</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">        },</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">        {</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">          \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">cod</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">b</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">          \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">qtd</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 1</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">          \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">valor_unitario</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 3.99</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">        },</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">        {</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">          \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">cod</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">c</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">          \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">qtd</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 3</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">          \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">valor_unitario</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 98.14</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">        }</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      ]</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    },</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    {</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">      \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">data</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">2022-01-02</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">      \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">produtos</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> [</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">        {</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">          \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">cod</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">a</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">          \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">qtd</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 6</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">          \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">valor_unitario</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 12.34</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">        },</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">        {</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">          \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">cod</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">b</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">          \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">qtd</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 1</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">          \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">valor_unitario</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 3.99</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">        },</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">        {</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">          \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">cod</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">c</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">          \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">qtd</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 1</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">          \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">valor_unitario</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 34.02</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">        }</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      ]</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    }</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  ]</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<p>Podemos definir o JSON acima em dois tipos distintos: <code>Produto</code> e <code>Compra</code>. Seus nomes são autoexplicativos, mas vou defini-los aqui para facilitar a leitura do código:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-ts\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">type</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Produto</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  cod</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> string</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  qtd</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  valor_unitario</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">type</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Compra</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  data</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> string</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  produtos</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Produto</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">[]</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<h2>Escrevendo testes</h2>\n<p>Antes de começar a escrever o código, vamos escrever alguns testes para garantir que o código está funcionando corretamente. Para isso, vamos usar o <a href=\"https://vitest.dev/\">Vitest</a>.</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-ts\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">import</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> { describe, expect, test } </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">from</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">vitest</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">import</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  somaComFor,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  somaComForIn,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  somaComForOf,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  somaComWhile,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  somaComForEach,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  somaComReduce,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  somaComFlatMapEReduce,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  somaComSum,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  somaComSumEFlatMap</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">} </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">from</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">./desafio-da-soma</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> { compras } </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> await</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> import</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">./data.json</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, { with</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> { type</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">json</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> } })</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> result </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 434.93999999999994</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">describe</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Desafio da soma</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, () </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">  test</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">somaComFor</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, () </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">    expect</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">somaComFor</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(compras)).</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">toBe</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(result)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  })</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">  test</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">somaComForOf</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, () </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">    expect</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">somaComForOf</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(compras)).</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">toBe</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(result)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  })</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">  test</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">somaComForIn</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, () </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">    expect</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">somaComForIn</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(compras)).</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">toBe</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(result)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  })</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">  test</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">somaComWhile</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, () </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">    expect</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">somaComWhile</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(compras)).</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">toBe</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(result)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  })</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">  test</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">somaComForEach</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, () </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">    expect</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">somaComForEach</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(compras)).</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">toBe</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(result)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  })</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">  test</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">somaComReduce</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, () </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">    expect</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">somaComReduce</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(compras)).</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">toBe</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(result)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  })</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">  test</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">somaComFlatMapEReduce</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, () </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">    expect</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">somaComFlatMapEReduce</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(compras)).</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">toBe</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(result)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  })</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">  test</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">somaComSum</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, () </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">    expect</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">somaComSum</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(compras)).</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">toBe</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(result)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  })</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">  test</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">somaComSumEFlatMap</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, () </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">    expect</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">somaComSumEFlatMap</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(compras)).</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">toBe</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(result)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  })</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">})</span></span></code></pre>\n<h2>Somando com laços</h2>\n<p>Agora que já temos os tipos definidos, podemos começar a resolver o desafio. Podemos fazer isso de quatro formas:</p>\n<h3>1. Usando <code>for</code></h3>\n<p>O <a href=\"https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Statements/for\"><code>for</code></a> é um <strong>laço de repetição</strong> que executa um bloco de código até que uma condição seja satisfeita.</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-typescript\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">function</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> somaComFor</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">compras</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Compra</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">[])</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  let</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> soma </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 0</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  for</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">let</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> i </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 0</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">; i </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">&#x3C;</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> compras.length; i</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">++</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    for</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">let</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> j </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 0</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">; j </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">&#x3C;</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> compras[i].produtos.length; j</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">++</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      soma </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">+=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> compras[i].produtos[j].qtd </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">*</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> compras[i].produtos[j].valor_unitario</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    }</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> soma</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<h3>2. Usando <code>for...of</code></h3>\n<p>O <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...of\"><code>for...of</code></a> é um <strong>laço de iteração</strong> que itera sobre uma sequência de valores vindos de um <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#the_iterable_protocol\">objeto iterável</a> (que, no nosso caso, é um <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array\">Array</a>).</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-typescript\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">function</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> somaComForOf</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">compras</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Compra</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">[])</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  let</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> soma </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 0</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  for</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> compra </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">of</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> compras) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    for</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> produto </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">of</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> compra.produtos) {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      soma </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">+=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> produto.qtd </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">*</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> produto.valor_unitario</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    }</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> soma</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<h3>3. Usando <code>for...in</code></h3>\n<p>O <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...in\"><code>for...in</code></a> é um <strong>laço de iteração</strong> que itera sobre as propriedades enumeráveis do tipo <em>string</em> de um objeto, inclusive as herdadas. Estou colocando esta solução aqui somente para mostrar que ela é possível, mas deve ser preterida em relação às outras soluções apresentadas neste artigo.</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-typescript\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">function</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> somaComForIn</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">compras</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Compra</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">[])</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  let</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> soma </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 0</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  for</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> i </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">in</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> compras) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    for</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> j </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">in</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> compras[i].produtos) {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      soma </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">+=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> compras[i].produtos[j].qtd </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">*</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> compras[i].produtos[j].valor_unitario</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    }</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> soma</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<h3>4. Usando <code>while</code></h3>\n<p>O <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/while\"><code>while</code></a> é um <strong>laço de repetição</strong> que executa um bloco de código até que uma condição seja satisfeita.</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-typescript\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">function</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> somaComWhile</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">compras</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Compra</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">[])</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  let</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> soma </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 0</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  let</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> i </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 0</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  while</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (i </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">&#x3C;</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> compras.length) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    let</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> j </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 0</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    while</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (j </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">&#x3C;</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> compras[i].produtos.length) {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      soma </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">+=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> compras[i].produtos[j].qtd </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">*</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> compras[i].produtos[j].valor_unitario</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      j</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">++</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    }</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    i</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">++</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> soma</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<h2>Somando com métodos de <code>Array</code></h2>\n<h3>1. Usando <code>Array.prototype.forEach</code></h3>\n<p>O <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach\"><code>Array.prototype.forEach</code></a> é um método que executa uma função para cada elemento do array.</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-typescript\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">function</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> somaComForEach</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">compras</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Compra</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">[])</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  let</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> soma </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 0</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  compras.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">forEach</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">compra</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    compra.produtos.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">forEach</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">produto</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      soma </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">+=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> produto.qtd </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">*</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> produto.valor_unitario</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    })</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  })</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> soma</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<h3>2. Usando <code>Array.prototype.reduce</code></h3>\n<p>O <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce\"><code>Array.prototype.reduce</code></a> é um método que executa uma função para cada elemento do array, retornando um único valor.</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-typescript\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">function</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> somaComReduce</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">compras</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Compra</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">[])</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> compras.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">reduce</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">((</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">soma</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">compra</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      soma </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">+</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      compra.produtos.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">reduce</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">((</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">soma</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">produto</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">        return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> soma </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">+</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> produto.qtd </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">*</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> produto.valor_unitario</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      }, </span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">0</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    )</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }, </span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">0</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<p>Mas, podemos torná-la ainda melhor usando o <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flatMap\"><code>Array.prototype.flatMap</code></a>:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-typescript\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">function</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> somaComFlatMapEReduce</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">compras</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Compra</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">[])</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> compras</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    .</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">flatMap</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">compra</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> compra.produtos)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    .</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">reduce</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">((</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">soma</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">produto</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> soma </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">+</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> produto.qtd </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">*</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> produto.valor_unitario, </span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">0</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<h2>Com uma função de ajuda</h2>\n<p>Podemos criar uma função genérica que faz a soma de qualquer array da seguinte forma:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-typescript\"><span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">/**</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\"> * Soma todos os valores de um array. Se o array for de objetos, é possível</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\"> * passar uma função para extrair os números que serão somados.</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\"> *</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\"> * </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">@example</span><span style=\"color:#6272A4;--shiki-dark:#6272A4\"> soma([1, 2, 3]) // 6</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\"> * </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">@example</span><span style=\"color:#6272A4;--shiki-dark:#6272A4\"> soma([{ valor: 1 }, { valor: 2 }, { valor: 3 }], item => item.valor) // 6</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\"> */</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">function</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> sum</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">&#x3C;</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">T</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> extends</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> |</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> object</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">>(</span></span>\n<span class=\"line\"><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">  array</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> T</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">[],</span></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">  fn</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">?:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">item</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> T</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> array.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">reduce</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">acumulador</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">item</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> acumulador </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">+</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (fn </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">?</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> fn</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(item) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (item </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">as</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)),</span></span>\n<span class=\"line\"><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">    0</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  )</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<p>E usá-la em conjunto com as soluções já apresentadas:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-typescript\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">function</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> somaComSumEFlatMap</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">compras</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Compra</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">[])</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> sum</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    compras.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">flatMap</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">compra</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> compra.produtos),</span></span>\n<span class=\"line\"><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">    produto</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> produto.qtd </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">*</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> produto.valor_unitario,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  )</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<p>Se tiver alguma sugestão ou alguma outra ideia de como resolver este desafio, conta para mim nos comentários.</p>\n",
    "tags": [
      "tutorial",
      "typescript",
      "algorithms"
    ],
    "translates": null
  },
  "o-protocolo-da-internet-ip": {
    "id": "oxiuks4pe1et1ku",
    "title": "O protocolo da internet (IP)",
    "slug": "o-protocolo-da-internet-ip",
    "locale": "pt-BR",
    "created": "2023-01-11T13:20:20.751Z",
    "updated": "2023-08-12T13:15:55.254Z",
    "content": "<p>O protocolo de internet é, como o próprio nome já diz, um protocolo que define como blocos de dados (chamados <strong>datagramas</strong>) serão transmitidos entre computadores na internet. Cada computador da rede possui, pelo menos um endereço com o qual é identificado na rede. Este endereço é chamado de <strong>endereço de IP</strong>.</p>\n<p><Alert title=\"Mas, o que é um protocolo?\" mb=\"md\" color=\"blue\">De maneira sucinta, um protocolo é uma definição do formato e da ordem das mensagens trocadas entre duas ou mais entidades, que são, no nosso caso, computadores. Um protocolo define o que deve ser feito quando uma mensagem é enviada ou recebida, e também o que deve ser feito quando um evento ocorre.</Alert></p>\n<p>O protocolo de internet foi definido, pela primeira vez, no artigo “A Protocol for Packet Network Intercommunication” em maio de 1974, publicado pelo <a href=\"https://www.ieee.org/\">IEEE</a>, escrito por Vinton Cerf e Robert Kahn.</p>\n<p>O IP não requer uma conexão contínua entre os pontos de comunicação, ou seja, o computador que envia os dados não verifica se a mensagem foi recebida. Cada pacote trafegado na rede é tratado de maneira totalmente independente, sem relação com outros pacotes. Para verificar se os pacotes chegaram corretamente ao destino e rearranjá-los na ordem correta, utiliza-se o TCP (<em>Transmission Control Protocol</em> - Protocolo de Controle de Transmissão). Sua utilização é tão comum em conjunto com o IP, que nos referimos aos dois protocolos, ao mesmo tempo, como TCP/IP. É bom salientar the o TCP não é o único protocolo da internet.</p>\n<h2>Roteamento</h2>\n<p>Quando enviamos ou recebemos algum dado através da internet, este dado é dividido em pequenas partes chamadas de <strong>pacotes</strong>, que contém o endereço único do remetente e do destinatário (chamado <strong>endereço de IP</strong>). Estes pequenos pacotes são enviados a um <em>gateway</em>, que nada mais é do que um computador que conecta duas ou mais redes através de diferentes protocolos. Este gateway verifica se pode encontrar o endereço do destinatário em sua rede. Se não conseguir, encaminha o pacote para o gateway mais próximo, até que o endereço do destinatário seja encontrado (ou retorne um erro, caso o endereço esteja errado ou fora do ar).</p>\n<p>Você pode ver o caminho que os pacotes traçam, entre os roteadores da rede, até o destino, com o comando <a href=\"https://www.ibm.com/docs/pt-br/power8?topic=commands-traceroute-command\"><code>traceroute</code></a> - ou <a href=\"https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/tracert\"><code>tracert</code></a>, caso esteja no Windows ou ainda, usando o <code>traceroute</code> online do <a href=\"https://registro.br/tecnologia/ferramentas/traceroute/\">Registro.br</a>:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">traceroute</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> google.com</span></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">traceroute</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> to</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> google.com</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (142.251.129.46), 64 hops max, 52 byte packets</span></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> 1</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">  192.168.0.1</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (192.168.0.1)  7.353 ms  3.096 ms  1.902 ms</span></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> 2</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">  100.65.0.1</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (100.65.0.1)  8.703 ms  5.352 ms  6.726 ms</span></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> 3</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">  45.190.209.1</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (45.190.209.1)  6.509 ms  2.820 ms  4.341 ms</span></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> 4</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">  172.16.90.1</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (172.16.90.1)  9.714 ms  5.157 ms  5.715 ms</span></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> 5</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">  172.17.16.41</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (172.17.16.41)  9.328 ms  5.390 ms  4.412 ms</span></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> 6</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">  172.17.1.74</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (172.17.1.74)  8.665 ms  7.749 ms  10.623 ms</span></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> 7</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">  142.250.166.121</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (142.250.166.121)  9.529 ms  5.825 ms  6.133 ms</span></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> 8</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9;font-style:italic;--shiki-dark-font-style:italic\">  *</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9;font-style:italic;--shiki-dark-font-style:italic\"> *</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9;font-style:italic;--shiki-dark-font-style:italic\"> *</span></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> 9</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">  142.251.61.70</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (142.251.61.70)  6.626 ms</span></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">    172.253.69.202</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (172.253.69.202)  5.531 ms</span></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">    172.253.73.190</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (172.253.73.190)  7.071 ms</span></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">10</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">  74.125.243.12</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (74.125.243.12)  9.858 ms</span></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">    gru06s72-in-f14.1e100.net</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (142.251.129.46)  7.649 ms</span></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">    142.251.76.13</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (142.251.76.13)  6.488 ms</span></span></code></pre>\n<p>Como cada pacote é enviado de maneira independente, eles podem chegar ao destinatário através de gateways distintos, e em uma ordem diferente da que foram enviados. É trabalho de outro protocolo, o TCP, de reagrupar estes pacotes na ordem correta e verificar se os dados não foram corrompidos.</p>\n<p>Outros protocolos comumente utilizados em conjunto com o IP são:</p>\n<ul>\n<li>UDP (<em>User Datagram Protocol</em>): provê um processo de comunicação de baixa latência, largamente utilizado em buscas de DNS e VoIP (<em>Voice Over IP</em> - voz sobre IP);</li>\n<li>HTTP (<em>Hyper Text Transfer Protocol</em>): especifica o protocolo de comunicação que habilita os navegadores a exibirem conteúdo;</li>\n<li>FTP (<em>File Transfer Protocol</em>): especifica o protocolo de gerenciamento de arquivos em cliente conectados.</li>\n</ul>\n<h2>Camadas de protocolos</h2>\n<p>A internet é composta por uma série de protocolos que se comunicam entre si, e que são organizados em camadas. Cada camada é responsável por uma tarefa específica, e cada camada pode ser implementada de maneira diferente, desde que mantenha a compatibilidade com as camadas superiores e inferiores.</p>\n<figure>\n  <pre>\nAplicação\nTransporte\nRede\nEnlace\nFísico\n  </pre>\n  <figcaption>\n    A pilha de cinco camadas de protocolos da Internet.\n  </figcaption>\n</figure>\n<p>Uma camada de protocolo pode ser implementada com software ou hardware ou uma combinação dos dois.</p>\n<h3>Camada de aplicação</h3>\n<p>A camada de aplicação é a camada mais próxima do usuário, fornecendo-lhe os mais diversos tipos de serviços, como e-mail, transferência de arquivos, chat, etc.\nOs pacotes trafegados nessa camada são chamados de <em>mensagens</em>.</p>\n<h3>Camada de transporte</h3>\n<p>A camada de transporte fornece serviços de transporte da camada de aplicação entre diferentes pontos da aplicação. Dois protocolos são utilizados nesta camada: TCP e UDP. O TCP fornece um serviço de transmissão confiável, isto é, este protocolo garante que o destinatário está disponível na rede, divide a mensagens em pequenos pacotes para enviá-las, verifica se as mensagens não foram corrompidas no trajeto e as reconstrói no destino. O UDP fornece um serviço de transmissão não confiável, no sentido que não garante que o destinatário está disponível na rede, não divide a mensagem em pacotes, não verifica se as mensagens não foram corrompidas no trajeto e não as reconstrói no destino. Normalmente, o UDP é utilizado para serviços de streaming, como vídeo e áudio, onde a perda de alguns pacotes não é crítica. Os pacotes trafegados nesta camada são chamados de <em>segmentos</em>.</p>\n<h3>Camada de rede</h3>\n<p>A camada de rede fornece serviços de roteamento entre diferentes pontos de rede, de modo a movimentar os pacotes de um ponto a outro. Aqui, além do protocolo IP,\nutilizam-se vários outros protocolos de roteamento. Os pacotes trafegados nesta camada são chamados de <em>datagramas</em>.</p>\n<h3>Camada de enlace</h3>\n<p>A camada de enlace fornece serviços de transmissão de dados entre dispositivos de rede conectados por um meio de transmissão. A camada de rede depende dos serviços\ndesta camada para mover os pacotes de um nó a outro da rede. Os pacotes trafegados nesta camada são chamados de <em>frames</em>.</p>\n<h3>Camada física</h3>\n<p>O trabalho desta camada consiste em moves os <em>bits</em> individuais dentro de um <em>frame</em> de um nó para o outro. Os protocolos utilizados nesta camada\ndependem do meio de transmissão (fibra ótica, cabo coaxial, cabo de par trançado, etc.).</p>\n<hr>\n<p><strong>Referências</strong></p>\n<ul>\n<li><a href=\"https://www.techtarget.com/searchunifiedcommunications/definition/Internet-Protocol\">Internet Protocol (IP)</a>;</li>\n<li><a href=\"https://www.rfc-editor.org/rfc/rfc791\">RFC 791 - Internet Protocol</a>;</li>\n<li><a href=\"https://www.rfc-editor.org/rfc/rfc3439\">RFC 3439 - Some Internet Architectural Guidelines and Philosophy</a>;</li>\n<li><a href=\"http://web.stanford.edu/class/msande91si/www-spr04/readings/week1/InternetWhitepaper.htm\">How Does the Internet Work?</a>;</li>\n<li><a href=\"https://www.rfc-editor.org/rfc/rfc1393\">Traceroute Using an IP Option</a></li>\n<li><a href=\"http://gaia.cs.umass.edu/kurose_ross/online_lectures.htm\">Computer Networking: A Top-Down Approach (2020, J.F. Kurose, K.W. Ross, Pearson)</a>.</li>\n</ul>\n",
    "tags": [
      "Iniciantes",
      "Internet"
    ],
    "translates": null
  },
  "how-to-calculate-the-border-radius-of-nested-elements": {
    "id": "afekje3ez7b2byc",
    "title": "How to calculate the border-radius of nested elements",
    "slug": "how-to-calculate-the-border-radius-of-nested-elements",
    "locale": "en-US",
    "created": "2023-08-30T18:47:17.057Z",
    "updated": "2023-08-30T18:50:19.490Z",
    "content": "<p>The <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/border-radius\"><code>border-radius</code></a> property allows you to round the edges of an element. Giving the same <code>border-radius</code> value to the parent element and child element doesn’t result in the best appearance, so how do you calculate the border radius of nested elements?</p>\n<p>Check out the demo below:</p>\n<iframe loading=\"lazy\" allowtransparency allowfullscreen height=\"380px\" width=\"100%\" title=\"Styled Dialog\" src=\"https://codepen.io/douglasdemoura/embed/KKbzrER\n?default-tab=result&embed-version=2\"></iframe><p>In the example above, the two circles have the same radius and are inscribed in squares with rounded edges. Note that the radius of the border is the same as the radius of the circle. We want the end of the arc of the circle each edge starts to be coincident with both squares. This can be done in two ways:</p>\n<ol>\n<li>Radius of the border of the inner square (R<sub>i</sub>) + spacing between squares (E) = radius of the border of the outer square (R<sub>e</sub>);</li>\n<li>Outer square border radius (R<sub>e</sub>) - spacing between squares (E) = inner square border radius R<sub>i</sub>.</li>\n</ol>\n<p>Note that the center of the circles inscribed in the squares do not coincide, as well as the end of the border arc. Still, the result is satisfactory.</p>\n<h2>Bonus</h2>\n<p>In this interactive example, made by <a href=\"https://jhey.dev/\">Jhey Tompkins</a>, you can see how this rule applies in practice:</p>\n<CodePen user=\"jh3y\" id=\"KKrYaxx\n?default-tab=result&embed-version=2\"></iframe><h2>References</h2>\n<ul>\n<li><a href=\"https://twitter.com/jh3yy/status/1688542283602231296\">@jh3yy</a></li>\n<li><a href=\"https://www.30secondsofcode.org/css/s/nested-border-radius/\">Tip: Perfect nested border radius in CSS</a></li>\n<li><a href=\"https://www.w3schools.com/cssref/css3_pr_border-radius.asp\">CSS3 border-radius Property</a></li>\n<li><a href=\"https://www.w3.org/TR/css-backgrounds-3/#corners\">CSS Backgrounds and Borders Module Level 3</a></li>\n</ul>\n",
    "tags": [
      "CSS",
      "HTML"
    ],
    "translates": "jyetft1jka7szdn"
  },
  "increase-youtube-video-playback-rate-up-to-2x": {
    "id": "02cjfu0pbl38fsa",
    "title": "Increase YouTube video playback rate up to 2x",
    "slug": "increase-youtube-video-playback-rate-up-to-2x",
    "locale": "en-US",
    "created": "2020-10-25T00:00:00.000Z",
    "updated": "2022-12-29T14:52:21.704Z",
    "content": "<p>YouTube videos (along with all modern video implementations on the web) uses the <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video\">HTML5 video element</a>. This new media tag implements the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement\">HTMLMediaElement API</a>, which gives a plenty of media-related methods common to audio and video.</p>\n<p>The standard YouTube player just allow us to increase video speed up to 2x, but, if you want to increase it even more? Well, there’s a solution for that: just set the playback rate to whatever number you want!</p>\n<p>In order to do that, you need to select the <code>&lt;video&gt;</code> element in the page and change its playback rate to the desired speed:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-js\"><span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">document.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">getElementsByTagName</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">video</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)[</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">0</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">].playbackRate </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 2.5</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">;</span></span></code></pre>\n<p>It’s a good solution, but not a practical one. Gracefully, there’s a better way to make use of this functionality without having to open the console of your browser.</p>\n<h2>JavaScript bookmarklet</h2>\n<figure>\n<img src=\"https://dev-to-uploads.s3.amazonaws.com/i/hjvcu6sqxp24u5emozsb.png\" alt=\"Adding the bookmarklet on Firefox\" />\n  <figcaption>\n    Adding the bookmarklet on Firefox\n  </figcaption>\n</figure>\n<p>If you want to have this script always at hand, the best way is to put it inside a JavaScript <a href=\"https://en.wikipedia.org/wiki/Bookmarklet\">bookmarklet</a>. Just create a new bookmark in you favorite browser and add the code below:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-js\"><span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">javascript:(</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">function</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">() {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> rate </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> prompt</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Set the new playback rate</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">2.5</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">);</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (rate </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">!=</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> null</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> video </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> document.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">getElementsByTagName</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">video</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)[</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">0</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">];</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    video.playbackRate </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> parseFloat</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(rate);</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">})();</span></span></code></pre>\n<p>And here is an screenshot of the bookmarklet working:</p>\n<figure>\n<img src=\"https://dev-to-uploads.s3.amazonaws.com/i/erxbc4xcxdk7v0gun8z1.png\" alt=\"Video speed bookmarklet working\" />\n  <figcaption>\n    Changing the speed of an (awesome) <a href=\"https://www.youtube.com/watch?v=G4MvFT8TGII\">YouTube video</a>\n  </figcaption>\n</figure>\n<p>Feel free to contribute with this code in <a href=\"https://gist.github.com/DouglasdeMoura/052456a93f93d47982ccb5eefc602eb1\" target=\"_blank\">my public gist</a>.</p>\n",
    "tags": [
      "javascript",
      "html",
      "video",
      "youtube"
    ],
    "translates": null
  },
  "understanding-tail-call-optimization-with-javascript": {
    "id": "8mgwfzzig2t1wd9",
    "title": "Understanding Tail Call Optimization With JavaScript",
    "slug": "understanding-tail-call-optimization-with-javascript",
    "locale": "en-US",
    "created": "2023-10-24T15:13:38.216Z",
    "updated": "2023-10-24T15:27:40.960Z",
    "content": "<p>Consider the following function that calculates the factorial of a number:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-javascript\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> factorial</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">n</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  let</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> result </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 1</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  while</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (n </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">></span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 1</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    result </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">*=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> n</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    n</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">--</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> result</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<Alert title=\"Factorial\" mb=\"md\" color=\"blue\">\nIn Mathematics, the factorial of a non-negative integer (n!) is the product of all positive integers less than or equal to n.\n</Alert>\n<p>The function above was implemented iteratively, that is, it uses a loop to calculate the factorial of a number. However, it is possible to implement the same function recursively (that is, a function that references itself):</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-javascript\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> factorial</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">n</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (n </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">===</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 0</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">return</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 1</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> n </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">*</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> factorial</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(n </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">-</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 1</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<p>The result of both functions is the same, however, the iterative function is <a href=\"https://jsben.ch/1qyl8\">much more efficient</a> (in JavaScript) than the recursive function. In addition, if we try to calculate the factorial of a very large number, we encounter the error RangeError: Maximum call stack size exceeded. Let’s understand why this happens and how we can improve the recursive function.</p>\n<h2>Call Stack</h2>\n<p>A <a href=\"https://developer.mozilla.org/en-US/docs/Glossary/Call_stack\">call stack</a> is a data structure that stores information about a program’s functions. When a function is called, it is added to the execution stack, as well as all the functions it calls. When a function returns, it is removed from the execution stack. Each function added to the stack is called a <em>stack frame</em>.</p>\n<p>In order to understand what is happening, let’s try to represent, graphically, how the calculation of the factorial of 6 is done with the iterative function:</p>\n<div class=\"flex align-center justify-center\"><svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 265.90625 838.4765625\" style=\"max-width: 250px;\">\n  <rect x=\"0\" y=\"0\" width=\"265.90625\" height=\"838.4765625\" fill=\"#ffffff\"></rect><g transform=\"translate(23.453125 21.1630859375) rotate(0 82.03125 396)\"><text x=\"0\" y=\"0\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">factorial(6)</text><text x=\"0\" y=\"24\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\"></text><text x=\"0\" y=\"48\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">result = 1</text><text x=\"0\" y=\"72\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">while(6 &gt; 1) {</text><text x=\"0\" y=\"96\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">  result *= 6</text><text x=\"0\" y=\"120\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">  6--</text><text x=\"0\" y=\"144\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">}</text><text x=\"0\" y=\"168\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\"></text><text x=\"0\" y=\"192\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">result = 6</text><text x=\"0\" y=\"216\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">while(5 &gt; 1) {</text><text x=\"0\" y=\"240\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">  result *= 5</text><text x=\"0\" y=\"264\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">  5--</text><text x=\"0\" y=\"288\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">}</text><text x=\"0\" y=\"312\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\"></text><text x=\"0\" y=\"336\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">result = 30</text><text x=\"0\" y=\"360\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">while(4 &gt; 1) {</text><text x=\"0\" y=\"384\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">  result *= 4</text><text x=\"0\" y=\"408\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">  4--</text><text x=\"0\" y=\"432\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">}</text><text x=\"0\" y=\"456\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\"></text><text x=\"0\" y=\"480\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">result = 120</text><text x=\"0\" y=\"504\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">while(3 &gt; 1) {</text><text x=\"0\" y=\"528\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">  result *= 3</text><text x=\"0\" y=\"552\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">  3--</text><text x=\"0\" y=\"576\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">}</text><text x=\"0\" y=\"600\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\"></text><text x=\"0\" y=\"624\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">result = 360</text><text x=\"0\" y=\"648\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">while(2 &gt; 1) {</text><text x=\"0\" y=\"672\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">  result *= 2</text><text x=\"0\" y=\"696\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">  2--</text><text x=\"0\" y=\"720\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">}</text><text x=\"0\" y=\"744\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\"></text><text x=\"0\" y=\"768\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">result = 720</text></g><g stroke-linecap=\"round\" transform=\"translate(10.6328125 10) rotate(0 91.837890625 409.23828125)\"><path d=\"M0 0 C48.5 0, 97 0, 183.68 0 M0 0 C38.1 0, 76.21 0, 183.68 0 M183.68 0 C183.68 322.39, 183.68 644.78, 183.68 818.48 M183.68 0 C183.68 209.12, 183.68 418.24, 183.68 818.48 M183.68 818.48 C136.65 818.48, 89.63 818.48, 0 818.48 M183.68 818.48 C139.2 818.48, 94.72 818.48, 0 818.48 M0 818.48 C0 520.36, 0 222.25, 0 0 M0 818.48 C0 552.95, 0 287.41, 0 0\" stroke=\"#1e1e1e\" stroke-width=\"2\" fill=\"none\"></path></g><g stroke-linecap=\"round\"><g transform=\"translate(10.42578125 59.25) rotate(0 91.15625 -0.71875)\"><path d=\"M0 0 C72.12 -0.57, 144.24 -1.14, 182.31 -1.44 M0 0 C71.69 -0.57, 143.39 -1.13, 182.31 -1.44\" stroke=\"#1e1e1e\" stroke-width=\"2\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(12.23046875 202.26953125) rotate(0 91.15625 -0.71875)\"><path d=\"M0 0 C36.59 -0.29, 73.19 -0.58, 182.31 -1.44\" stroke=\"#1e1e1e\" stroke-width=\"2.5\" fill=\"none\" stroke-dasharray=\"8 10\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(10.625 347.87109375) rotate(0 91.15625 -0.71875)\"><path d=\"M0 0 C51.33 -0.4, 102.66 -0.81, 182.31 -1.44\" stroke=\"#1e1e1e\" stroke-width=\"2.5\" fill=\"none\" stroke-dasharray=\"8 10\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(11.01953125 492.28125) rotate(0 91.15625 -0.71875)\"><path d=\"M0 0 C57.44 -0.45, 114.88 -0.91, 182.31 -1.44\" stroke=\"#1e1e1e\" stroke-width=\"2.5\" fill=\"none\" stroke-dasharray=\"8 10\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(10 638.734375) rotate(0 91.15625 -0.71875)\"><path d=\"M0 0 C69.77 -0.55, 139.54 -1.1, 182.31 -1.44\" stroke=\"#1e1e1e\" stroke-width=\"2.5\" fill=\"none\" stroke-dasharray=\"8 10\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(10.375 779.0859375) rotate(0 91.716796875 -0.111328125)\"><path d=\"M0 0 C60.87 -0.07, 121.75 -0.15, 183.43 -0.22 M0 0 C42.98 -0.05, 85.97 -0.1, 183.43 -0.22\" stroke=\"#1e1e1e\" stroke-width=\"2\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(253.8515625 18.4609375) rotate(0 -21.484375 392.23828125)\"><path d=\"M0 0 C0.51 193.83, 1.02 387.65, 2.05 783.86 M0 0 C0.77 295.38, 1.55 590.76, 2.05 783.86 M2.05 783.86 C-13.35 784.06, -28.75 784.26, -45.02 784.48 M2.05 783.86 C-8.14 783.99, -18.33 784.12, -45.02 784.48\" stroke=\"#e03131\" stroke-width=\"2\" fill=\"none\"></path></g><g transform=\"translate(253.8515625 18.4609375) rotate(0 -21.484375 392.23828125)\"><path d=\"M-45.02 784.48 L-31.51 777.96 L-31.35 790.64 L-45.02 784.48\" stroke=\"none\" stroke-width=\"0\" fill=\"#e03131\" fill-rule=\"evenodd\"></path><path d=\"M-45.02 784.48 C-41.68 782.86, -38.34 781.25, -31.51 777.96 M-45.02 784.48 C-39.93 782.02, -34.84 779.56, -31.51 777.96 M-31.51 777.96 C-31.46 782.11, -31.4 786.25, -31.35 790.64 M-31.51 777.96 C-31.48 780.7, -31.44 783.45, -31.35 790.64 M-31.35 790.64 C-34.7 789.13, -38.05 787.62, -45.02 784.48 M-31.35 790.64 C-35.52 788.76, -39.69 786.88, -45.02 784.48 M-45.02 784.48 C-45.02 784.48, -45.02 784.48, -45.02 784.48 M-45.02 784.48 C-45.02 784.48, -45.02 784.48, -45.02 784.48\" stroke=\"#e03131\" stroke-width=\"2\" fill=\"none\"></path></g></g><mask></mask></svg></div><p>Now, compare it with the substitution model for calculating the factorial of 6 using the recursive function:\n<SVG64 content=\"PHN2ZyB2ZXJzaW9uPSIxLjEiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgdmlld0JveD0iMCAwIDUyMy4xMjUwODcxODU1MzM5IDMwOCIgc3R5bGU9Im1heC13aWR0aDogNTAwcHg7Ij4KICA8cmVjdCB4PSIwIiB5PSIwIiB3aWR0aD0iNTIzLjEyNTA4NzE4NTUzMzkiIGhlaWdodD0iMzA4IiBmaWxsPSIjZmZmZmZmIj48L3JlY3Q+PGcgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoMTAgMTApIHJvdGF0ZSgwIDIzNC4zNzUgMTQ0KSI+PHRleHQgeD0iMCIgeT0iMCIgZm9udC1mYW1pbHk9IkNhc2NhZGlhLCBTZWdvZSBVSSBFbW9qaSxtb25vc3BhY2UiIGZvbnQtc2l6ZT0iMjBweCIgZmlsbD0iIzFlMWUxZSIgdGV4dC1hbmNob3I9InN0YXJ0IiBzdHlsZT0id2hpdGUtc3BhY2U6IHByZTsiIGRpcmVjdGlvbj0ibHRyIiBkb21pbmFudC1iYXNlbGluZT0idGV4dC1iZWZvcmUtZWRnZSI+ZmFjdG9yaWFsKDYpPC90ZXh0Pjx0ZXh0IHg9IjAiIHk9IjI0IiBmb250LWZhbWlseT0iQ2FzY2FkaWEsIFNlZ29lIFVJIEVtb2ppLG1vbm9zcGFjZSIgZm9udC1zaXplPSIyMHB4IiBmaWxsPSIjMWUxZTFlIiB0ZXh0LWFuY2hvcj0ic3RhcnQiIHN0eWxlPSJ3aGl0ZS1zcGFjZTogcHJlOyIgZGlyZWN0aW9uPSJsdHIiIGRvbWluYW50LWJhc2VsaW5lPSJ0ZXh0LWJlZm9yZS1lZGdlIj42ICogZmFjdG9yaWFsKDUpPC90ZXh0Pjx0ZXh0IHg9IjAiIHk9IjQ4IiBmb250LWZhbWlseT0iQ2FzY2FkaWEsIFNlZ29lIFVJIEVtb2ppLG1vbm9zcGFjZSIgZm9udC1zaXplPSIyMHB4IiBmaWxsPSIjMWUxZTFlIiB0ZXh0LWFuY2hvcj0ic3RhcnQiIHN0eWxlPSJ3aGl0ZS1zcGFjZTogcHJlOyIgZGlyZWN0aW9uPSJsdHIiIGRvbWluYW50LWJhc2VsaW5lPSJ0ZXh0LWJlZm9yZS1lZGdlIj42ICogKDUgKiBmYWN0b3JpYWwoNCkpPC90ZXh0Pjx0ZXh0IHg9IjAiIHk9IjcyIiBmb250LWZhbWlseT0iQ2FzY2FkaWEsIFNlZ29lIFVJIEVtb2ppLG1vbm9zcGFjZSIgZm9udC1zaXplPSIyMHB4IiBmaWxsPSIjMWUxZTFlIiB0ZXh0LWFuY2hvcj0ic3RhcnQiIHN0eWxlPSJ3aGl0ZS1zcGFjZTogcHJlOyIgZGlyZWN0aW9uPSJsdHIiIGRvbWluYW50LWJhc2VsaW5lPSJ0ZXh0LWJlZm9yZS1lZGdlIj42ICogKDUgKiAoNCAqIGZhY3RvcmlhbCgzKSkpPC90ZXh0Pjx0ZXh0IHg9IjAiIHk9Ijk2IiBmb250LWZhbWlseT0iQ2FzY2FkaWEsIFNlZ29lIFVJIEVtb2ppLG1vbm9zcGFjZSIgZm9udC1zaXplPSIyMHB4IiBmaWxsPSIjMWUxZTFlIiB0ZXh0LWFuY2hvcj0ic3RhcnQiIHN0eWxlPSJ3aGl0ZS1zcGFjZTogcHJlOyIgZGlyZWN0aW9uPSJsdHIiIGRvbWluYW50LWJhc2VsaW5lPSJ0ZXh0LWJlZm9yZS1lZGdlIj42ICogKDUgKiAoNCAqICgzICogZmFjdG9yaWFsKDIpKSkpPC90ZXh0Pjx0ZXh0IHg9IjAiIHk9IjEyMCIgZm9udC1mYW1pbHk9IkNhc2NhZGlhLCBTZWdvZSBVSSBFbW9qaSxtb25vc3BhY2UiIGZvbnQtc2l6ZT0iMjBweCIgZmlsbD0iIzFlMWUxZSIgdGV4dC1hbmNob3I9InN0YXJ0IiBzdHlsZT0id2hpdGUtc3BhY2U6IHByZTsiIGRpcmVjdGlvbj0ibHRyIiBkb21pbmFudC1iYXNlbGluZT0idGV4dC1iZWZvcmUtZWRnZSI+NiAqICg1ICogKDQgKiAoMyAqICgyICogZmFjdG9yaWFsKDEpKSkpKTwvdGV4dD48dGV4dCB4PSIwIiB5PSIxNDQiIGZvbnQtZmFtaWx5PSJDYXNjYWRpYSwgU2Vnb2UgVUkgRW1vamksbW9ub3NwYWNlIiBmb250LXNpemU9IjIwcHgiIGZpbGw9IiMxZTFlMWUiIHRleHQtYW5jaG9yPSJzdGFydCIgc3R5bGU9IndoaXRlLXNwYWNlOiBwcmU7IiBkaXJlY3Rpb249Imx0ciIgZG9taW5hbnQtYmFzZWxpbmU9InRleHQtYmVmb3JlLWVkZ2UiPjYgKiAoNSAqICg0ICogKDMgKiAoMiAqIDEpKSkpPC90ZXh0Pjx0ZXh0IHg9IjAiIHk9IjE2OCIgZm9udC1mYW1pbHk9IkNhc2NhZGlhLCBTZWdvZSBVSSBFbW9qaSxtb25vc3BhY2UiIGZvbnQtc2l6ZT0iMjBweCIgZmlsbD0iIzFlMWUxZSIgdGV4dC1hbmNob3I9InN0YXJ0IiBzdHlsZT0id2hpdGUtc3BhY2U6IHByZTsiIGRpcmVjdGlvbj0ibHRyIiBkb21pbmFudC1iYXNlbGluZT0idGV4dC1iZWZvcmUtZWRnZSI+NiAqICg1ICogKDQgKiAoMyAqIDIpKSk8L3RleHQ+PHRleHQgeD0iMCIgeT0iMTkyIiBmb250LWZhbWlseT0iQ2FzY2FkaWEsIFNlZ29lIFVJIEVtb2ppLG1vbm9zcGFjZSIgZm9udC1zaXplPSIyMHB4IiBmaWxsPSIjMWUxZTFlIiB0ZXh0LWFuY2hvcj0ic3RhcnQiIHN0eWxlPSJ3aGl0ZS1zcGFjZTogcHJlOyIgZGlyZWN0aW9uPSJsdHIiIGRvbWluYW50LWJhc2VsaW5lPSJ0ZXh0LWJlZm9yZS1lZGdlIj42ICogKDUgKiAoNCAqIDYpKTwvdGV4dD48dGV4dCB4PSIwIiB5PSIyMTYiIGZvbnQtZmFtaWx5PSJDYXNjYWRpYSwgU2Vnb2UgVUkgRW1vamksbW9ub3NwYWNlIiBmb250LXNpemU9IjIwcHgiIGZpbGw9IiMxZTFlMWUiIHRleHQtYW5jaG9yPSJzdGFydCIgc3R5bGU9IndoaXRlLXNwYWNlOiBwcmU7IiBkaXJlY3Rpb249Imx0ciIgZG9taW5hbnQtYmFzZWxpbmU9InRleHQtYmVmb3JlLWVkZ2UiPjYgKiAoNSAqIDI0KTwvdGV4dD48dGV4dCB4PSIwIiB5PSIyNDAiIGZvbnQtZmFtaWx5PSJDYXNjYWRpYSwgU2Vnb2UgVUkgRW1vamksbW9ub3NwYWNlIiBmb250LXNpemU9IjIwcHgiIGZpbGw9IiMxZTFlMWUiIHRleHQtYW5jaG9yPSJzdGFydCIgc3R5bGU9IndoaXRlLXNwYWNlOiBwcmU7IiBkaXJlY3Rpb249Imx0ciIgZG9taW5hbnQtYmFzZWxpbmU9InRleHQtYmVmb3JlLWVkZ2UiPjYgKiAxMjA8L3RleHQ+PHRleHQgeD0iMCIgeT0iMjY0IiBmb250LWZhbWlseT0iQ2FzY2FkaWEsIFNlZ29lIFVJIEVtb2ppLG1vbm9zcGFjZSIgZm9udC1zaXplPSIyMHB4IiBmaWxsPSIjMWUxZTFlIiB0ZXh0LWFuY2hvcj0ic3RhcnQiIHN0eWxlPSJ3aGl0ZS1zcGFjZTogcHJlOyIgZGlyZWN0aW9uPSJsdHIiIGRvbWluYW50LWJhc2VsaW5lPSJ0ZXh0LWJlZm9yZS1lZGdlIj43MjA8L3RleHQ+PC9nPjxnIHN0cm9rZS1saW5lY2FwPSJyb3VuZCI+PGcgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoMTUxLjk5MjE4NzUgMTYuNjgzNTkzNzUpIHJvdGF0ZSgwIDE0Mi4wNzYyMTU0Njc3NjcwNCAxMzMuNDkwMjM0Mzc1KSI+PHBhdGggZD0iTTAgMCBDNjAuMTMgMjAuOTMsIDM3My41OCA4MS4wNywgMzYwLjc1IDEyNS41NyBDMzQ3LjkyIDE3MC4wNiwgLTQuMDMgMjQzLjQxLCAtNzYuOTggMjY2Ljk4IE0wIDAgQzYwLjEzIDIwLjkzLCAzNzMuNTggODEuMDcsIDM2MC43NSAxMjUuNTcgQzM0Ny45MiAxNzAuMDYsIC00LjAzIDI0My40MSwgLTc2Ljk4IDI2Ni45OCIgc3Ryb2tlPSIjZTAzMTMxIiBzdHJva2Utd2lkdGg9IjIiIGZpbGw9Im5vbmUiPjwvcGF0aD48L2c+PGcgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoMTUxLjk5MjE4NzUgMTYuNjgzNTkzNzUpIHJvdGF0ZSgwIDE0Mi4wNzYyMTU0Njc3NjcwNCAxMzMuNDkwMjM0Mzc1KSI+PHBhdGggZD0iTS03Ni45OCAyNjYuOTggTC02NS40MyAyNTcuNDEgTC02Mi4yMiAyNjkuNjcgTC03Ni45OCAyNjYuOTgiIHN0cm9rZT0ibm9uZSIgc3Ryb2tlLXdpZHRoPSIwIiBmaWxsPSIjZTAzMTMxIiBmaWxsLXJ1bGU9ImV2ZW5vZGQiPjwvcGF0aD48cGF0aCBkPSJNLTc2Ljk4IDI2Ni45OCBDLTc0LjEyIDI2NC42MSwgLTcxLjI3IDI2Mi4yNCwgLTY1LjQzIDI1Ny40MSBNLTc2Ljk4IDI2Ni45OCBDLTczLjk1IDI2NC40NywgLTcwLjkyIDI2MS45NiwgLTY1LjQzIDI1Ny40MSBNLTY1LjQzIDI1Ny40MSBDLTY0LjcgMjYwLjIsIC02My45NyAyNjMsIC02Mi4yMiAyNjkuNjcgTS02NS40MyAyNTcuNDEgQy02NC41OCAyNjAuNjcsIC02My43MyAyNjMuOTMsIC02Mi4yMiAyNjkuNjcgTS02Mi4yMiAyNjkuNjcgQy02Ny41NCAyNjguNywgLTcyLjg1IDI2Ny43MywgLTc2Ljk4IDI2Ni45OCBNLTYyLjIyIDI2OS42NyBDLTY3LjkzIDI2OC42MywgLTczLjYzIDI2Ny41OSwgLTc2Ljk4IDI2Ni45OCBNLTc2Ljk4IDI2Ni45OCBDLTc2Ljk4IDI2Ni45OCwgLTc2Ljk4IDI2Ni45OCwgLTc2Ljk4IDI2Ni45OCBNLTc2Ljk4IDI2Ni45OCBDLTc2Ljk4IDI2Ni45OCwgLTc2Ljk4IDI2Ni45OCwgLTc2Ljk4IDI2Ni45OCIgc3Ryb2tlPSIjZTAzMTMxIiBzdHJva2Utd2lkdGg9IjIiIGZpbGw9Im5vbmUiPjwvcGF0aD48L2c+PC9nPjxtYXNrPjwvbWFzaz48L3N2Zz4=\" /></p>\n<p>Note that, in the iterative function, the arrow shape is linear and we can see the state of each variable at each step. In addition, at each iteration of our loop, a calculation is performed and the variables stored in memory are updated. In the recursive function, the arrow shape is exponential and we cannot see the state of all variables in the first half of the processing. In addition, each time the function is executed, more memory needs to be used to store the resulting values of each execution.</p>\n<p>But what does this mean? In order for JavaScript to calculate the factorial of 6 using the iterative function, the <code>while</code> condition is added to the stack, where its calculation is performed, the <code>result</code> variable is updated, and then the executed code block of the <code>while</code> is removed from the stack. This is done until the while condition is false, that is, until the value of <code>n</code> is less than or equal to 1.</p>\n<p>In the recursive function, each call to the <code>factorial</code> function is added to the stack as many times as necessary until the if condition is false, that is, until the value of <code>n</code> is less than or equal to 1. This means that, to calculate the factorial of 6, the <code>factorial</code> function is added to the stack 6 times before being executed. And that’s why, when we try to calculate the factorial of a large number (100,000, for example), we encounter the error <code>RangeError: Maximum call stack size exceeded</code>: there is not enough space in the stack to store all the calls to the <code>factorial</code> function.</p>\n<h2>Introducing Tail Call Optimization</h2>\n<p>As defined by <a href=\"https://dr-axel.de/\">Dr. Axel Rauschmayer</a>:</p>\n<blockquote>\n<p>[…] whenever the last thing a function does is call another function, then this last function does not need to return to its caller. As a consequence, no information needs to be stored on the call stack and the function call is more like a goto (a jump). This type of call is called a <em>tail call</em>; not increasing the stack is called tail call optimization (TCO).</p>\n</blockquote>\n<p>Now, we have discovered that our factorial calculation function is not tail recursive. But how can we make it tail recursive? With the help of another function:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-javascript\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> factorial</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">n</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> factorialHelper</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(n, </span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">1</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> factorialHelper</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">x</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">accumulator</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (x </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">&#x3C;=</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 1</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> accumulator</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> factorialHelper</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(x </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">-</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 1</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, x </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">*</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> accumulator)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<p>Now, our function is tail recursive: the last thing it does is call a function (and not calculate an expression, as in the first implementation). Now, let’s see the substitution model for calculating the factorial of 6 with our new <code>factorial</code> function:</p>\n<div class=\"flex align-center justify-center\"><svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 321.31640625 228.421875\" style=\"max-width: 300px;\">\n  <rect x=\"0\" y=\"0\" width=\"321.31640625\" height=\"228.421875\" fill=\"#ffffff\"></rect><g transform=\"translate(10 26.421875) rotate(0 134.765625 96)\"><text x=\"0\" y=\"0\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">factorial(6)</text><text x=\"0\" y=\"24\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">factorialHelper(6, 1)</text><text x=\"0\" y=\"48\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">factorialHelper(5, 6)</text><text x=\"0\" y=\"72\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">factorialHelper(4, 30)</text><text x=\"0\" y=\"96\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">factorialHelper(3, 120)</text><text x=\"0\" y=\"120\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">factorialHelper(2, 360)</text><text x=\"0\" y=\"144\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">factorialHelper(1, 720)</text><text x=\"0\" y=\"168\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">720</text></g><g stroke-linecap=\"round\"><g transform=\"translate(319.91015625 10) rotate(0 -24.41015625 99.6640625)\"><path d=\"M-8.59 0 C-8.77 77.75, -8.95 155.51, -9.05 199.33 M-8.59 0 C-8.72 57.11, -8.86 114.22, -9.05 199.33 M-9.05 199.33 C-17.24 199.22, -25.44 199.11, -40.23 198.91 M-9.05 199.33 C-20.96 199.17, -32.87 199.01, -40.23 198.91\" stroke=\"#e03131\" stroke-width=\"2\" fill=\"none\"></path></g><g transform=\"translate(319.91015625 10) rotate(0 -24.41015625 99.6640625)\"><path d=\"M-40.23 198.91 L-26.55 192.75 L-26.72 205.43 L-40.23 198.91\" stroke=\"none\" stroke-width=\"0\" fill=\"#e03131\" fill-rule=\"evenodd\"></path><path d=\"M-40.23 198.91 C-34.89 196.51, -29.56 194.11, -26.55 192.75 M-40.23 198.91 C-36.31 197.15, -32.39 195.38, -26.55 192.75 M-26.55 192.75 C-26.59 196.09, -26.64 199.42, -26.72 205.43 M-26.55 192.75 C-26.61 197.6, -26.68 202.44, -26.72 205.43 M-26.72 205.43 C-29.5 204.09, -32.27 202.75, -40.23 198.91 M-26.72 205.43 C-30.27 203.72, -33.81 202.01, -40.23 198.91 M-40.23 198.91 C-40.23 198.91, -40.23 198.91, -40.23 198.91 M-40.23 198.91 C-40.23 198.91, -40.23 198.91, -40.23 198.91\" stroke=\"#e03131\" stroke-width=\"2\" fill=\"none\"></path></g></g><mask></mask></svg></div><p><a href=\"https://jsben.ch/vOf9P\">The performance is superior</a> to our first implementation, although it still doesn’t beat the performance of the iterative function. However, we still encounter the error <code>RangeError: Maximum call stack size exceeded</code>. But why does this happen? Because, despite our function being tail recursive, current versions of Node.js and browsers (<a href=\"https://webkit.org/blog/6240/ecmascript-6-proper-tail-calls-in-webkit/\">with the exception of Safari</a>) do not implement Tail Call Optimization (despite its inclusion in the <a href=\"https://262.ecma-international.org/6.0/#sec-tail-position-calls\">EcmaScript</a> specification since 2015).</p>\n<p>But how will we solve this problem? With the help of another function, of course! For that, we will rely on the <a href=\"https://en.wikipedia.org/wiki/Trampoline_(computing)\">Trampoline</a> pattern:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-javascript\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> trampoline</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">fn</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  while</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">typeof</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> fn </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">===</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">function</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    fn </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> fn</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">()</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> result</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<p>Our trampoline function consists of a loop that invokes a function that wraps another function (what we call a <a href=\"https://en.wikipedia.org/wiki/Thunk\">thunk</a>) until there are no more functions to execute. Let’s see how the implementation of our factorial function would look like with the Trampoline pattern:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-javascript\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> trampoline</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">fn</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  while</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">typeof</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> fn </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">===</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">function</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    fn </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> fn</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">()</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> fn</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> factorialHelper</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">x</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">accumulator</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (x </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">&#x3C;=</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 1</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> accumulator</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  // Now, a function returns another function</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> () </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> factorialHelper</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(x </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">-</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 1</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, x </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">*</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> accumulator)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> factorial</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">n</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> trampoline</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">factorialHelper</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(n, </span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">1</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">))</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<p>And now, we can call our factorial function with a large number, without encountering the error <code>RangeError: Maximum call stack size exceeded</code>. Of course, depending on the factorial we want to calculate, we will encounter an Infinity, as it is a very large number (a number greater than Number.MAX_SAFE_INTEGER: 253 - <sup>1</sup>). In this case, we can use <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt\">BigInt</a>:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-javascript\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> trampoline</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">fn</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  while</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">typeof</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> fn </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">===</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">function</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    fn </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> fn</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">()</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> fn</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> factorialHelper</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">x</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">accumulator</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (x </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">&#x3C;=</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 1</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> accumulator</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> () </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> factorialHelper</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(x </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">-</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 1</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">n</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, x </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">*</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> accumulator)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> factorial</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">n</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  // Converting values to BigInt</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  //-------------------------------\\/----------\\/</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> trampoline</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">factorialHelper</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">BigInt</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(n), </span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">1</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">n</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">))</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<h2>Typing our function</h2>\n<p>And finally, let’s add the necessary types to our factorial function:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-typescript\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">type</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Thunk</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> bigint</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> |</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (() </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Thunk</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> trampoline</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">fn</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Thunk</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  while</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">typeof</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> fn </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">===</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">function</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    fn </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> fn</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">()</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> fn</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> factorialHelper</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">x</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> bigint</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">accumulator</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> bigint</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Thunk</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (x </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">&#x3C;=</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 1</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> accumulator</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> () </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> factorialHelper</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(x </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">-</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 1</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">n</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, x </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">*</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> accumulator)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> factorial</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">n</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> trampoline</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">factorialHelper</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">BigInt</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(n), </span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">1</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">n</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">))</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<h2>References</h2>\n<ul>\n<li><a href=\"https://www.mgmarlow.com/words/2021-03-27-proper-tail-calls-js/\">What happened to proper tail calls in JavaScript?</a></li>\n<li><a href=\"https://exploringjs.com/es6/ch_tail-calls.html\">Tail Call Optmization</a></li>\n<li><a href=\"http://cangaceirojavascript.com.br/limites-recursao-javascript-tco-e-pattern-trampoline/\">Limites da recursão em JavaScript, TCO e o pattern Trampoline</a></li>\n<li><a href=\"https://softwareengineering.stackexchange.com/a/189973/383960\">What is an Activation object in JavaScript?</a></li>\n<li><a href=\"https://mathworld.wolfram.com/Factorial.html\">Factorial</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=_JtPhF8MshA\">Tail Recursion Explained - Computerphile</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=-PX0BV9hGZY\">Tail Call Optimization: The Musical!!</a></li>\n</ul>\n",
    "tags": [
      "algorithms",
      "javascript",
      "mathematic",
      "Node.js"
    ],
    "translates": "rc3oq9fakzdn3ad"
  },
  "how-to-push-an-empty-commit-on-git": {
    "id": "l63ql849ju0fg4l",
    "title": "How to push an empty commit on Git?",
    "slug": "how-to-push-an-empty-commit-on-git",
    "locale": "en-US",
    "created": "2023-01-13T21:03:48.079Z",
    "updated": "2023-01-13T21:03:48.079Z",
    "content": "<p>Have you ever had to run a <a href=\"https://www.redhat.com/pt-br/topics/devops/what-cicd-pipeline\">CI/CD pipeline</a> that is triggered by a commit, when\nthere is no code changes to be commited?</p>\n<p>Well, just use the command below:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">git</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> commit</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> --allow-empty</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> -m</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">ci: trigger pipeline with an empty commit</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span></span></code></pre>\n<p>And then, just push the commit to the remote repository:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">git</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> push</span></span></code></pre>\n<p>That’s it!</p>\n",
    "tags": [
      "Git"
    ],
    "translates": "e62l4z2ckms6roz"
  },
  "use-github-actions-to-publish-your-package-on-npm": {
    "id": "fccw7a1zbkshukm",
    "title": "Use GitHub actions to publish your package on NPM",
    "slug": "use-github-actions-to-publish-your-package-on-npm",
    "locale": "en-US",
    "created": "2022-10-04T15:00:00.000Z",
    "updated": "2022-12-29T14:51:36.616Z",
    "content": "<p>Recently, I created a package with the <a href=\"https://eslint.org\">ESLint</a> settings I like to use in my React projects, as I was tired of always having to configure it when I start new React projects. Publishing a NPM package is just a matter of running <code>npm publish</code> on the directory of your package (considering, of course, that you already have an NPM account and is authenticated on your terminal). But I wanted to automatize this publishing everytime I created a new release.</p>\n<p>In order to do that, I used the following GitHub Action:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-yaml\"><span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\"># File: .github/workflows/npm-publish.yml</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\"># This workflow will publish a package to NPM when a release is created</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\"># For more information see: https://help.github.com/actions/language-and-framework-guides/publishing-nodejs-packages</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">name</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> Publish Package to npmjs</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">on</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">  release</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">    types</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> [</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">created</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">]</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">jobs</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">  build</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">    runs-on</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> ubuntu-latest</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">    steps</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">      -</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\"> uses</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> actions/checkout@v3</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">      -</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\"> uses</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> actions/setup-node@v3</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">        with</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">          node-version</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 16</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">          registry-url</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> https://registry.npmjs.org/</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">      -</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\"> run</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> npm publish</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">        env</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">          NODE_AUTH_TOKEN</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> ${{secrets.NODE_AUTH_TOKEN}}</span></span></code></pre>\n<p>If you read the YAML file above (that you should put on the <code>.github/workflows/npm-publish.yml</code> directory of your git repository), you should have noted that the environment variable <code>NODE_AUTH_TOKEN</code> should be defined. Create a new automation access token on the control panel of NPM:</p>\n<ol>\n<li>\n<p>Access your NPM account and click in “Access tokens”:\n<img src=\"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hddbdiev3xhhrl0s09km.png\" alt=\"Access tokens on NPM\"></p>\n</li>\n<li>\n<p>Name your new access token and select the “Automation” type for it:</p>\n</li>\n</ol>\n<p><img src=\"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4oect8iqd17igcbnrrg1.png\" alt=\"Creating access token on NPM\"></p>\n<ol start=\"3\">\n<li>Go to your GitHub repository, click in “Settings &gt; Secrets &gt; Actions &gt; New repository secret”, name it as NODE_AUTH_TOKEN and paste the access token you just got from NPM:</li>\n</ol>\n<p><img src=\"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wv7pw3j8elyjeoaeehif.png\" alt=\"Create a new secret on the GitHub repository\"></p>\n<ol start=\"4\">\n<li>Create a new release for your package. This should trigger our GitHub Action and publish to NPM.</li>\n</ol>\n<p><img src=\"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/31fsgle783ujl75stld1.png\" alt=\"Creating a new release on GitHub\"></p>\n",
    "tags": [
      "javascript",
      "typescript",
      "npm"
    ],
    "translates": null
  },
  "create-beautiful-placeholders-for-your-images": {
    "id": "x09m6ctgj8r7ebz",
    "title": "Create beautiful placeholders for your images ",
    "slug": "create-beautiful-placeholders-for-your-images",
    "locale": "en-US",
    "created": "2022-09-29T15:00:00.000Z",
    "updated": "2023-08-12T13:33:26.541Z",
    "content": "<p>Have you ever faced the situation where the layout of your beautifully crafted interface “breaks” if the image (depeding on the quality of your user’s connections) takes some time to load? Something like the example below:</p>\n<p><a href=\"https://media.giphy.com/media/Q7B0kOHlC7akJmwTCW/giphy.gif\"><img src=\"https://media.giphy.com/media/Q7B0kOHlC7akJmwTCW/giphy.gif\" /></a></p>\n<p>This happens because the browser has no clue about the dimensions of the image you want to display on your content beforehand.</p>\n<p>The easiest way to solve this issue is using the <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/aspect-ratio\"><code>aspect-ratio</code></a> property to tell the browser how much space (based on the user’s size display) it should reserve before the image is loaded. Check the difference:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-css\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">img</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">/* Makes all images responsive */</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">  width</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 100</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">%</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">  height</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> auto</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">/*</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  Here, I'm using the image's width and height,</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  but you can come up with diference aspect ratios.</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">*/</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  aspect-ratio</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 760</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> / </span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">235</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<p><a href=\"https://media.giphy.com/media/X4dBoFehuhSrpUIdIA/giphy.gif\"><img src=\"https://media.giphy.com/media/X4dBoFehuhSrpUIdIA/giphy.gif\" width=\"100%\" /></a></p>\n<p>So, it solves the sudden layout change, but we can do even better do better adding an animated background.</p>\n<h2>Displaying an animated background</h2>\n<p>You can give a hint for the user that the blank space on your app should be filled with something by adding a background color or animating the transition between two o more colors, like in the example below:</p>\n<iframe height=\"300\" style={{width:'100%'}} scrolling=\"no\" title=\"Animated placeholder\" src=\"https://codepen.io/douglasdemoura/embed/RwyWzEr?default-tab=\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href=\"https://codepen.io/douglasdemoura/pen/RwyWzEr\">\n  Animated placeholder</a> by Douglas Moura (<a href=\"https://codepen.io/douglasdemoura\">@douglasdemoura</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.\n</iframe>\n<p>And our code will look like this:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-css\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6;font-style:italic;--shiki-dark-font-style:italic\">:</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B;font-style:italic;--shiki-dark-font-style:italic\">root</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  /*</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  Set the default aspect ratio. You can change</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  this CSS variable per class/id or event</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  creating diferente classes.</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  */</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  --aspect-ratio</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 16</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">/</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">9</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">img</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">/* Makes all images responsive */</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">  width</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 100</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">%</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">  height</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> auto</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">/* Put all your images inside this container */</span></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B;font-style:italic;--shiki-dark-font-style:italic\">.image-container</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {  </span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  aspect-ratio</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\"> var</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(--aspect-ratio);</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">  position</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> relative</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">  animation</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> background-loading </span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">.8</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">s</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> linear</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> infinite</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> alternate</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B;font-style:italic;--shiki-dark-font-style:italic\">.image-container</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> img</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">  position</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> absolute</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">  top</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 0</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">  left</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 0</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">/* The placeholder animation */</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">@keyframes</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\"> background-loading</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  0% {</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">    background-color</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> #f9fafb</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  100% {</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">    background-color</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> #d1d5db</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<p>And this is the result (check the code on <a href=\"https://codepen.io/douglasdemoura/pen/RwyWBOR\">CodePen</a>):</p>\n<img src=\"https://media.giphy.com/media/9yYPBL1X9wnAKzhVfE/giphy.gif\" />\n<p>Yet, this can be even better by displaying a colorful background that matches the image colors.</p>\n<h2>Displaying colorful image placeholders</h2>\n<p><a href=\"https://github.com/woltapp/blurhash\">BlurHash</a> is a compact representation of a placeholder for a image. You use it to process your image before sending it to the browser and you’ll get a string of 20-30 characters that the algorithm can turn into a blurred image that you can show to your user before the actual image is downloaded. Check how it looks like:</p>\n<img src=\"https://media.giphy.com/media/1RSpYFokgWI2tKRKHk/giphy.gif\" />\n<p>I have implemented that last effect in React for the sake of simplicity and time, but you can re-implement it in whatever framework you like. Just pay attention to the <code>onLoad</code> event that changes the opacity of the image.</p>\n<iframe src=\"https://stackblitz.com/edit/vitejs-vite-enczef?embed=1&file=src/Image.module.css\" height=\"500\" style={{width: '100%'}} scrolling=\"no\" title=\"Animated placeholder\"  frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\"></iframe>\n",
    "tags": [
      "javascript",
      "typescript",
      "react",
      "tutorial"
    ],
    "translates": null
  },
  "using-typescript-in-node-js-projects": {
    "id": "8cxztl6gvjs26in",
    "title": "Using TypeScript in Node.js projects",
    "slug": "using-typescript-in-node-js-projects",
    "locale": "en-US",
    "created": "2024-07-01T12:24:04.381Z",
    "updated": "2024-07-08T09:51:36.801Z",
    "content": "<p><a href=\"https://www.typescriptlang.org/\">TypeScript</a> is tremendously helpful while developing Node.js applications. Let’s see how to configure it for a seamless development experience.</p>\n<h2>Setting up TypeScript</h2>\n<p>First, we need to install TypeScript. We can do this by running the following command:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">npm</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> i</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> -D</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> typescript</span></span></code></pre>\n<p>Next, we need to create a <code>tsconfig.json</code> file in the root of our project. This file will contain the TypeScript configuration for our project. Here is an example of a <code>tsconfig.json</code> file that I picked from <a href=\"https://www.totaltypescript.com/tsconfig-cheat-sheet\">Total TypeScript</a> and added a few more things (read the code and pay attention to the comments):</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-json\"><span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">  \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">compilerOptions</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">    /* Base Options: */</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">esModuleInterop</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">skipLibCheck</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">target</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">es2022</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">allowJs</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">resolveJsonModule</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">moduleDetection</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">force</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">isolatedModules</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">verbatimModuleSyntax</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">    /* Setting ~ as the alias for the src/ directory */</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">baseUrl</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">.</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">paths</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">      \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">~/*</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> [</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">src/*</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">]</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    },</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">    /* Strictness */</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">strict</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">noUncheckedIndexedAccess</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">noImplicitOverride</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">    /* If transpiling with TypeScript: */</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">module</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">NodeNext</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">outDir</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">dist</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">sourceMap</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">    /* AND if you're building for a library: */</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">declaration</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">    /* AND if you're building for a library in a monorepo: */</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">composite</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">declarationMap</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">    /* If NOT transpiling with TypeScript: */</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">module</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">preserve</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">noEmit</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">    /* If your code runs in the DOM: */</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">lib</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> [</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">es2022</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">dom</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">dom.iterable</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">],</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">    /* If your code doesn't run in the DOM: */</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">lib</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> [</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">es2022</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">],</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  },</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  /* I'm considering all your code is in src/ */</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">  \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">include</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> [</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">src/**/*.ts</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">]</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<h2>Setting up the build script</h2>\n<p>Next, we need to set up a build script that will compile our TypeScript code to JavaScript. First, install <a href=\"https://www.npmjs.com/package/tsc-alias\"><code>tsc-alias</code></a> to handle the aliases we defined in the <code>tsconfig.json</code> file:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">npm</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> i</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> -D</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> tsc-alias</span></span></code></pre>\n<p>Then, you can add the <code>build</code> script by adding the following script to our <code>package.json</code> file:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-json\"><span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">  \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">scripts</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">build</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">tsc &#x26;&#x26; tsc-alias</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<h2>Setting up the development script</h2>\n<p>Next, we need to set up a development script that will watch for changes in our TypeScript files and recompile them. Personally, I like to use <a href=\"https://tsx.is/\"><code>tsx</code></a>, as it provides a much faster development experience compared to the built-in <a href=\"https://www.typescriptlang.org/docs/handbook/configuring-watch.html\">TypeScript watcher</a> or <a href=\"https://typestrong.org/ts-node/\">ts-node</a>. First, install <code>tsx</code>:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">npm</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> i</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> -D</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> tsx</span></span></code></pre>\n<p>Then, you can add the <code>dev</code> script (in order to start the project in development mode) by adding the following script to your <code>package.json</code> file:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-json\"><span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">  \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">scripts</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">build</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">tsc &#x26;&#x26; tsc-alias</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">dev</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">node --import=tsx --watch ./src/index.ts</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<p>Yes, you won’t get typechecks while developing using <code>tsx</code>, but you can run <code>npm run build</code> for that or add a new <code>typecheck</code> scripts to your <code>package.json</code>, and run it whenever you want to check for type errors:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-json\"><span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">  \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">scripts</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">build</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">tsc &#x26;&#x26; tsc-alias</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">dev</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">node --import=tsx --watch ./src/index.ts</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">typecheck</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">tsc --noEmit</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n",
    "tags": [
      "typescript",
      "Node.js",
      "javascript"
    ],
    "translates": "5xfzc0v2gy17ywy"
  },
  "rendering-jsx-on-the-server-with-fastify": {
    "id": "91sox12o3ozzl5n",
    "title": "Rendering JSX on the Server with Fastify",
    "slug": "rendering-jsx-on-the-server-with-fastify",
    "locale": "en-US",
    "created": "2024-01-25T00:35:37.056Z",
    "updated": "2024-01-25T00:42:06.600Z",
    "content": "<p><a href=\"https://facebook.github.io/jsx/\">JSX</a> is an excellent abstraction for building web interfaces. Introduced by Facebook and popularized by React, it’s an extension of JavaScript designed to abstract nested function calls. It’s expected that JSX code will be pre-processed (transpiled) into valid JavaScript before being executed in browsers or environments like Node.js.</p>\n<h2>Project Setup</h2>\n<p>First of all, let’s start our project and install the necessary dependencies:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-text\"><span class=\"line\"><span>npm init -y</span></span>\n<span class=\"line\"><span>npm i fastify react react-dom</span></span>\n<span class=\"line\"><span>npm i -D @types/node @types/react @types/react-dom tsx typescript</span></span></code></pre>\n<p>Now, we set up the scripts for our project. The <code>package.json</code> should look like this:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-json\"><span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">  \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">type</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">module</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">  \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">name</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">fastify-react</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">  \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">version</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">1.0.0</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">  \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">author</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Douglas Moura &#x3C;douglas.ademoura@gmail.com></span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">  \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">description</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">POC on rendering React components from Fastify</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">  \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">main</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">dist/main.js</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">  \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">scripts</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">start</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">tsc &#x26;&#x26; node dist/main.js</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">dev</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">tsx --watch src/main.tsx</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">build</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">tsc</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  },</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">  \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">license</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">ISC</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">  \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">dependencies</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">fastify</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">^4.25.2</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">react</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">^18.2.0</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">react-dom</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">^18.2.0</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  },</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">  \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">devDependencies</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">@types/node</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">^20.11.6</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">@types/react</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">^18.2.48</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">@types/react-dom</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">^18.2.18</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">tsx</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">^4.7.0</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">typescript</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">^5.3.3</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<p>And this is the <code>tsconfig.json</code> that we will use:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-json\"><span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">  \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">compilerOptions</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">target</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">ESNext</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">module</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">ESNext</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">lib</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> [</span></span>\n<span class=\"line\"><span style=\"color:#E9F284;--shiki-dark:#E9F284\">      \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">dom</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#E9F284;--shiki-dark:#E9F284\">      \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">es6</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#E9F284;--shiki-dark:#E9F284\">      \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">es2017</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#E9F284;--shiki-dark:#E9F284\">      \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">esnext.asynciterable</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    ],</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">skipLibCheck</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">  true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">sourceMap</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">  false</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">outDir</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">./dist</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">moduleResolution</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">node</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">removeComments</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">  true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">noImplicitAny</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">  true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">strictNullChecks</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">  true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">strictFunctionTypes</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">  true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">noImplicitThis</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">  true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">noUnusedLocals</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">  true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">noUnusedParameters</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">  true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">noImplicitReturns</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">  true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">noFallthroughCasesInSwitch</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">  true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">allowSyntheticDefaultImports</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">  true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">esModuleInterop</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">  true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">emitDecoratorMetadata</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">  true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">experimentalDecorators</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">  true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">resolveJsonModule</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">  true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">baseUrl</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">.</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">jsx</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">react-jsx</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  },</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">  \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">exclude</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> [</span></span>\n<span class=\"line\"><span style=\"color:#E9F284;--shiki-dark:#E9F284\">    \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">node_modules</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  ],</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">  \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">include</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> [</span></span>\n<span class=\"line\"><span style=\"color:#E9F284;--shiki-dark:#E9F284\">    \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">./src/**/*.ts</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#E9F284;--shiki-dark:#E9F284\">    \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">./src/**/*.tsx</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  ]</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<h2>Creating our components</h2>\n<p>The React ecosystem already provides the necessary tools for rendering our components to HTML and sending them directly from the server to our client. So, first, let’s create the root component:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-ts\"><span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// src/components/root.tsx</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">type</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">  RootProps</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  children</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">  React</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">.</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">ReactNode</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  title</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">  string</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">export</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  function</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">  Root</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">({ </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">children</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">title</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> }</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">  RootProps</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    &#x3C;</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">html  lang</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">en</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">></span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      &#x3C;</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">head</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">></span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">        &#x3C;</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">meta  charSet</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">utf-8</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  /></span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">        &#x3C;</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">meta  name</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">viewport</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  content</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">width=device-width, initial-scale=1</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  /></span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">        &#x3C;</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">title</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">>{title}</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">&#x3C;/</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">title</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">></span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">      &#x3C;/</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">head</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">></span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      &#x3C;</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">body</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">>{children}</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">&#x3C;/</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">body</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">></span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    &#x3C;/</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">html</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">></span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  )</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<p>And our home page:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-ts\"><span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// src/components/index.tsx</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">export</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  function</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">  App</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">() {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    &#x3C;</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">h1</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">></span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">Hello</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, World</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">!&#x3C;/</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">h1</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">></span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  )</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<h2>Configuring Fastify to Render Our React Component</h2>\n<p>As we don’t intend to load React to hydrate our HTML on the client side, we can use the <code>renderToStaticMarkup</code> function exported from <code>react-dom/server</code>. Our server initialization file will look like this:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-ts\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">import</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> Fastify </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">from</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">fastify</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">import</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> { renderToStaticMarkup } </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">from</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">react-dom/server</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">import</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> { App } </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">from</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">./components/index.js</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">import</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> { Root } </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">from</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">./components/root.js</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">type</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">  RenderArgs</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  children</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">  React</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">.</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">ReactNode</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  title</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">  string</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">  render</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> ({ </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">title</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">children</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> }</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">  RenderArgs</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> `&#x3C;!DOCTYPE html></span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">${</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">renderToStaticMarkup</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    &#x3C;</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">Root</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  title</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">{</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">title</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">}</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">></span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">{</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">children</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">}</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">&#x3C;/</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">Root</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">></span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  )</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">}</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">`</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> fastify </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">  Fastify</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">({</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  logger</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">  true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">})</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">fastify.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">get</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">/</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">async</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  function</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">  handler</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">_request</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">reply</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  reply.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">type</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">text/html</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">  render</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">({ children</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  &#x3C;</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">App</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  />, title</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Hello, World!</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> })</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">})</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">try</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  await</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> fastify.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">listen</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">({ port</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">  3000</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> })</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">} </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">catch</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (err) {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  fastify.log.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">error</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  process.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">exit</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">1</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<p>If you start the project now (<code>npm run dev</code>), you should see the page at <a href=\"http://localhost:3000/\">http://localhost:3000</a>. Of course, we can enhance our implementation by using the new streaming API, introduced in React 18 (<a href=\"https://github.com/reactwg/react-18/discussions/106#discussion-3611411\">which is the recommended method</a>). To do that, we will make the following changes to our code:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-ts\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">import</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> Fastify </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">from</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">fastify</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">import</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> { renderToStaticNodeStream } </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">from</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">react-dom/server</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">import</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> { Transform } </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">from</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">node:stream</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">import</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> { App } </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">from</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">./components/index.js</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">import</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> { Root } </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">from</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">./components/root.js</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">type</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">  RenderArgs</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  children</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">  React</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">.</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">ReactNode</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  title</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">  string</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">  render</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> ({ </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">title</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">children</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> }</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">  RenderArgs</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  let</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  isFirstChunk  </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">  true</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  prepend  </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6;font-weight:bold;--shiki-dark-font-weight:bold\">  new</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">  Transform</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">({</span></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">    transform</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">chunk</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">_encoding</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">callback</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">      if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (isFirstChunk) {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">        isFirstChunk  </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">  false</span></span>\n<span class=\"line\"><span style=\"color:#BD93F9;--shiki-dark:#BD93F9;font-style:italic;--shiki-dark-font-style:italic\">        this</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">push</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">&#x3C;!DOCTYPE html></span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      }</span></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">      callback</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">null</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, chunk)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    },</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  })</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">  renderToStaticNodeStream</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    &#x3C;</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">Root  title</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">{title}</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">{children}</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">&#x3C;/</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">Root</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">></span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  ).</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">pipe</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(prepend)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  fastify  </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">  Fastify</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">({</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  logger</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">  true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">})</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">fastify.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">get</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">/</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">async</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  function</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">  handler</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">_request</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">reply</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  stream  </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">  render</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">({ children</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  &#x3C;</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">App</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  />, title</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Hello, World!</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> })</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  reply.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">type</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">text/html</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  reply.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">send</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(stream)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">})</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">try</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  await</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  fastify.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">listen</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">({ port</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">  3000</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> })</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">} </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">catch</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (err) {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  fastify.log.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">error</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  process.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">exit</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">1</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<p>And with that, we are able to render our React components on the server side and stream them to our client. Here is the <a href=\"https://github.com/DouglasdeMoura/react-fastify\">link</a> to the repository.</p>\n",
    "tags": [
      "Fastify",
      "Tips",
      "javascript",
      "Node.js"
    ],
    "translates": "p7310widh7o7h9e"
  },
  "como-calcular-o-raio-da-borda-border-radius-de-elementos-aninhados": {
    "id": "jyetft1jka7szdn",
    "title": "Como calcular o raio da borda (border-radius) de elementos aninhados",
    "slug": "como-calcular-o-raio-da-borda-border-radius-de-elementos-aninhados",
    "locale": "pt-BR",
    "created": "2023-08-22T20:05:26.070Z",
    "updated": "2023-08-30T18:47:29.128Z",
    "content": "<p>A propriedade <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/border-radius\"><code>border-radius</code></a> permite arredondar as bordas de um elemento. Dar o mesmo valor de <code>border-radius</code> para o elemento pai e elemento filho não resulta na melhor aparência, então como calcular o raio da borda de elementos aninhados?</p>\n<p>Observe a demonstração abaixo:</p>\n<iframe loading=\"lazy\" allowtransparency allowfullscreen height=\"380px\" width=\"100%\" title=\"Styled Dialog\" src=\"https://codepen.io/douglasdemoura/embed/ExGaRJY\n?default-tab=result&embed-version=2\"></iframe><p>No exemplo acima, os dois círculos possuem o mesmo raio e estão inscritos nos quadrados com bordas arredondas. Note que o raio da borda é o mesmo raio do círculo. Nós queremos que o fim do arco do círculo de cada borda comece seja coincidente com ambos os quadrados. Isso pode ser feito de duas formas:</p>\n<ol>\n<li>Raio da borda do quadrado interno (R<sub>i</sub>) + espaçamento entre os quadrados (E) = raio da borda do quadrado externo (R<sub>e</sub>);</li>\n<li>Raio da borda do quadrado externo (R<sub>e</sub>) - espaçamento entre os quadrados (E) = raio da borda do quadrado interno R<sub>i</sub>.</li>\n</ol>\n<p>Observe que o centro dos círculos inscritos nos quadrados não coincidem, assim como o fim do arco da borda. Ainda assim, o resultado é satisfatório.</p>\n<h2>Bônus</h2>\n<p>Neste exemplo interativo, feito por <a href=\"https://jhey.dev/\">Jhey Tompkins</a>, você pode ver como essa regra se aplica na prática:</p>\n<CodePen user=\"jh3y\" id=\"KKrYaxx\n?default-tab=result&embed-version=2\"></iframe><h2>Referências</h2>\n<ul>\n<li><a href=\"https://twitter.com/jh3yy/status/1688542283602231296\">@jh3yy</a></li>\n<li><a href=\"https://www.30secondsofcode.org/css/s/nested-border-radius/\">Tip: Perfect nested border radius in CSS</a></li>\n<li><a href=\"https://www.w3schools.com/cssref/css3_pr_border-radius.asp\">CSS3 border-radius Property</a></li>\n<li><a href=\"https://www.w3.org/TR/css-backgrounds-3/#corners\">CSS Backgrounds and Borders Module Level 3</a></li>\n</ul>\n",
    "tags": [
      "CSS",
      "HTML",
      "Dicas"
    ],
    "translates": "afekje3ez7b2byc"
  },
  "desenvolvendo-apis-fortemente-tipadas-de-ponta-a-ponta-com-trpc": {
    "id": "7wlztbazb3q2ovr",
    "title": "Desenvolvendo APIs fortemente tipadas de ponta a ponta com tRPC",
    "slug": "desenvolvendo-apis-fortemente-tipadas-de-ponta-a-ponta-com-trpc",
    "locale": "pt-BR",
    "created": "2023-10-10T17:44:09.835Z",
    "updated": "2023-10-10T17:46:27.097Z",
    "content": "<p>O desenvolvimento de <abbr title=\"Application Programming Interface\">API</abbr>s consiste em boa parte do trabalho feito por profissionais de tecnologia (pelo menos daqueles que trabalham com a web) e, ao longo do tempo, surgiram diversos padrões para ajudar a lidar com a complexidade de se desenvolver tais APIs, como <abbr title=\"Representational State Transfer Application Programming Interface\">REST</abbr>, GraphQL e o <abbr title=\"Remote Procedure Call\">RPC</abbr>. Neste artigo, irei tratar do último, usando o <a href=\"https://trpc.io/\">tRPC</a>.</p>\n<h2>Mas o que é <abbr title=\"Remote Procedure Call\">RPC</abbr>?</h2>\n<p>RPC (<em>Remote Procedure Call</em> - em português: chamada de função remota) é um mecanismo de comunicação entre dois computadores, onde um pode ser identificado como <em>cliente</em> e o outro por ser identificado como <em>servidor</em>. Do ponto de vista do cliente, chamar uma RPC é apenas uma questão de chamar uma função com seus devidos argumentos e aguardar uma resposta, a fim de continuar a execução do programa.</p>\n<p><img src=\"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hzx0azc3l9qcathciv8o.png\" alt=\"Diagrama de uma chamada de função remota (RPC)\"></p>\n<p>E por que alguém faria isso? Ora, para distribuir seu sistema em servidores distintos, no momento que essa distribuição fizer sentido para o desenvolvimento do sistema.</p>\n<h2>Criando uma API com JavaScript e o padrão RPC</h2>\n<p>Agora que já sabemos o que é RPC, vamos criar uma API simples que tira proveito deste padrão, usando o <a href=\"https://fastify.dev/\">Fastify</a>). Desse modo poderemos entender melhor o padrão RPC com um exemplo prático e, de quebra, entender como o tRPC funciona.</p>\n<p>Vamos criar uma API que irá criar, ler, atualizar e excluir itens em uma lista de tarefa. Vamos começar com o código básico do nosso servidor. Atente-se aos comentários do código abaixo:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-javascript\"><span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// server/src/index.js</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">import</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> Fastify </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">from</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">fastify</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// Neste arquivo, definiremos todas as procedures disponíveis</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// na nossa API.</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">import</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> *</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> as</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> procedures </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">from</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">./procedures.js</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> fastify </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> Fastify</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">()</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// Nossa API terá um único endpoint: /rpc e</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// só aceita requisições do tipo POST.</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">fastify.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">post</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">/rpc</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">async</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">req</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">res</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  // Toda requisição para /rpc deverá informar</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  // qual procedure deseja chamar no corpo da requisição.</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">!</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">req.body?.procedure) {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    res.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">status</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">400</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">).</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">send</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">({</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      title</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Faltam parâmetros obrigatórios</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      details</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">O parâmetro \"procedure\" é obrigatório.</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    })</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> procedure </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> procedures[req.body.procedure]</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  </span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  // Se a procedure não estiver definida, retorna um erro</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">!</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">procedure </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">||</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> typeof</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> procedure </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">!==</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">function</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> res.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">status</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">404</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">).</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">send</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">({</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      title</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Procedure não encontrada</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      details</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> `A procedure </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">${</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">req.body.procedure</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">}</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> não foi encontrada.`</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    })</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  try</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">    // Chama a procedure com os argumentos, também</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">    // passados no corpo da requisição</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> response </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> procedure</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">?.(req.body.args)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">    // Eu espero que toda procedure retorne um objeto</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">    // com _status_ e _data_.</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> res.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">status</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(response?.status </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">||</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 200</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">).</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">send</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(response?.data)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  } </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">catch</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (error) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> res.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">status</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(error?.code </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">||</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 500</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">).</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">send</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">({</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      title</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> error?.title </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">||</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Erro</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      details</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> error?.message </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">||</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Ocorreu um erro.</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    })</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">})</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// Inicia o servidor</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">try</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  await</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> fastify.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">listen</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">({ port</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 3000</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> })</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">} </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">catch</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (err) {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  fastify.log.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">error</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  process.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">exit</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">1</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span></code></pre>\n<p>Adicionamos as nossas <em>procedures</em>:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-javascript\"><span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// server/src/procedures.js</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// Criamos um classe de erro personalizada</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// só para as nossas procedures.</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">class</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\"> ProcedureError</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> extends</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Error</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  constructor</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">message</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">code</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">title</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#BD93F9;--shiki-dark:#BD93F9;font-style:italic;--shiki-dark-font-style:italic\">    super</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(message)</span></span>\n<span class=\"line\"><span style=\"color:#BD93F9;--shiki-dark:#BD93F9;font-style:italic;--shiki-dark-font-style:italic\">    this</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">.title </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> title</span></span>\n<span class=\"line\"><span style=\"color:#BD93F9;--shiki-dark:#BD93F9;font-style:italic;--shiki-dark-font-style:italic\">    this</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">.code </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> code</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// \"Banco de dados\"</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">export</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> let</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> tarefas </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> [</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    id</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 1</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    title</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Tarefa 1</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  },</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    id</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 2</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    title</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Tarefa 2</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  },</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    id</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 3</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    title</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Tarefa 3</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  },</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">]</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// Funções de CRUD</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">export</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> getTarefas</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> () </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    status</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 200</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    data</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> tarefas,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">export</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> getTarefa</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">id</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">!</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">id) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    throw</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6;font-weight:bold;--shiki-dark-font-weight:bold\"> new</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> ProcedureError</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">O id é obrigatório</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">400</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Faltam parâmetros obrigatórios</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> tarefa </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> tarefas.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">find</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">((</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">todo</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> todo.id </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">===</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> id)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">!</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">tarefa) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    throw</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6;font-weight:bold;--shiki-dark-font-weight:bold\"> new</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> ProcedureError</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">`Tarefa </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">${</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">id</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">}</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> não encontrada`</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">404</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    status</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 200</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    data</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> tarefa,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">export</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> addTarefa</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">title</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">!</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">title) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    throw</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6;font-weight:bold;--shiki-dark-font-weight:bold\"> new</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> ProcedureError</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">O título é obrigatório</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">400</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Faltam parâmetros obrigatórios</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> id </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> tarefas.length </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">+</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 1</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> tarefa </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    id,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    title,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  tarefas.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">push</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(tarefa)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    status</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 201</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    data</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> { id },</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">export</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> updateTarefa</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> ({ </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">id</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">title</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> }) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">!</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">id </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">||</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> !</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">title) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    throw</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6;font-weight:bold;--shiki-dark-font-weight:bold\"> new</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> ProcedureError</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">O id e o título são obrigatórios</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">400</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Faltam parâmetros obrigatórios</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> index </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> tarefas.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">findIndex</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">((</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">todo</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> todo.id </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">===</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> id)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (index </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">===</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> -</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">1</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    throw</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6;font-weight:bold;--shiki-dark-font-weight:bold\"> new</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> ProcedureError</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">`Tarefa </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">${</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">id</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">}</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> não encontrada`</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">404</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  tarefas[index].title </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> title</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    status</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 200</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">export</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> deleteTarefa</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">id</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">!</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">id) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    throw</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6;font-weight:bold;--shiki-dark-font-weight:bold\"> new</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> ProcedureError</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">O id é obrigatório</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">400</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Faltam parâmetros obrigatórios</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> index </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> tarefas.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">findIndex</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">((</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">todo</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> todo.id </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">===</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> id)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (index </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">===</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> -</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">1</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    throw</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6;font-weight:bold;--shiki-dark-font-weight:bold\"> new</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> ProcedureError</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">`Tarefa </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">${</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">id</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">}</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> não encontrada`</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">404</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  tarefas </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> tarefas.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">filter</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">((</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">todo</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> todo.id </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">!==</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> id)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    status</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 204</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<p>Vamos iniciar a nossa API com <code>node src/index.js</code> e testar a chamada às nossas procedures. Vou usar o <a href=\"url\"><code>curl</code></a> neste exemplo pois já que estamos usando um emulador de terminal, mas fique a vontade para usar a ferramenta que preferir. Ah, não se esqueça que todas as nossas requisições são do tipo <code>POST</code>:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">curl</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> --json</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">{\"procedure\": \"getTarefas\"}</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> http://localhost:3000/rpc</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">curl</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> --json</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">{\"procedure\": \"getTarefa\", \"args\": 1}</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> http://localhost:3000/rpc</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">curl</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> --json</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">{\"procedure\": \"updateTarefa\", \"args\": {\"id\": 1, \"title\": \"Novo título\"}}</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> http://localhost:3000/rpc</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">curl</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> --json</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">{\"procedure\": \"addTarefa\", \"args\": \"Nova tarefa\"}</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> http://localhost:3000/rpc</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">curl</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> --json</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">{\"procedure\": \"deleteTarefa\", \"args\": 4}</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> http://localhost:3000/rpc</span></span></code></pre>\n<h2>Adicionando TypeScript</h2>\n<p>Como queremos uma API cujos tipos possam ser compartilhados do servidor para o cliente, vamos converter o nosso código JavaScript para TypeScript, da seguinte forma (e adicionar algumas melhorias ao mesmo tempo):</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-typescript\"><span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// server/src/errors.ts</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// Vamos separar a nossa classe ProcedureError</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// em seu próprio arquivo:</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">export</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> class</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\"> ProcedureError</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> extends</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Error</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  code</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  title</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> string</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> |</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> undefined</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  constructor</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">message</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> string</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">code</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">title</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">?:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> string</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#BD93F9;--shiki-dark:#BD93F9;font-style:italic;--shiki-dark-font-style:italic\">    super</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(message)</span></span>\n<span class=\"line\"><span style=\"color:#BD93F9;--shiki-dark:#BD93F9;font-style:italic;--shiki-dark-font-style:italic\">    this</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">.title </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> title</span></span>\n<span class=\"line\"><span style=\"color:#BD93F9;--shiki-dark:#BD93F9;font-style:italic;--shiki-dark-font-style:italic\">    this</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">.code </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> code</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<p>Agora, criamos o arquivo <code>app.ts</code> para colocar o código de configuração do servidor, excluindo a parte que inicia o servidor. Novamente, leia os comentários com atenção:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-typescript\"><span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// server/src/app.ts</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">import</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> Fastify </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">from</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">fastify</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">import</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> *</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> as</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> procedures </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">from</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">./procedures</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">import</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> { ProcedureError } </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">from</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">./errors</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">export</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> app</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> () </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> fastify </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> Fastify</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">()</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">   </span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  // Adiciona os tipos esperados no Body da requisição.</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  fastify.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">post</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">&#x3C;{</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    Body</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      procedure</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> string</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      args</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">?:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> any</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    }</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }>(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">/rpc</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">async</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">req</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">res</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">!</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">req.body?.procedure) {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      res.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">status</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">400</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">).</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">send</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">({</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">        title</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Faltam parâmetros obrigatórios</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">        details</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">O parâmetro \"procedure\" é obrigatório.</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      })</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    }</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    </span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">    // Fazemos coerção do tipo das procedures.</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> procedure </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> procedures?.[req.body?.procedure </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">as</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> keyof</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> typeof</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> procedures]</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">!</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">procedure </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">||</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> typeof</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> procedure </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">!==</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">function</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">      return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> res.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">status</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">404</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">).</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">send</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">({</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">        title</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Procedure não encontrada</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">        details</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> `A procedure </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">${</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">req.body.procedure</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">}</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> não foi encontrada.`</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      })</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    try</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">      const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> response </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> procedure</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(req.body.args)</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">      return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> res.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">status</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(response?.status </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">||</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 200</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">).</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">send</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(response?.data)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    } </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">catch</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (error) {</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">     // Definimos o tipo de erro esperado.</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">      const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> { code, title, message } </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> error </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">as</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> ProcedureError</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">      return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> res.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">status</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(code</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">||</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 500</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">).</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">send</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">({</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">        title</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> title </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">||</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Erro</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">        details</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> message </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">||</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Ocorreu um erro.</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      })</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    }</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  })</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> fastify</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<p>O arquivo que inicializa o servidor:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-typescript\"><span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// server/src/server.ts</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">import</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> { app } </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">from</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">./app</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> server </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> app</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">()</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">try</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  server.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">listen</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">({ port</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 3000</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> })</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">} </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">catch</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (err) {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  server.log.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">error</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  process.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">exit</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">1</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<p>E por fim, adicionaremos os tipos às nossas procedures:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-typescript\"><span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// server/src/procedures.ts</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">import</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> { ProcedureError } </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">from</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">./errors</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// O tipo de estrutura de dados do nosso CRUD.</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">type</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Tarefa</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  id</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  title</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> string</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">export</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> let</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> tarefas</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Tarefa</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">[] </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> [</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    id</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 1</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    title</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Tarefa 1</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  },</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    id</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 2</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    title</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Tarefa 2</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  },</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    id</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 3</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    title</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Tarefa 3</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  },</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">]</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// Tipo que define os argumentos e os retornos</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// esperados de cada procedure.</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// - TData é o tipo genérico que define o retorno dos dados.</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// - TArgs é o tipo genérico que define os argumentos que a procedure recebe.</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">type</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Procedure</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">&#x3C;</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">TData</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> unknown</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">TArgs</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> undefined</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">> </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">args</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">?:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> TArgs</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  status</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  data</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">?:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> TData</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">export</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> getTarefas</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Procedure</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">&#x3C;</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">Tarefa</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">[]> </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> () </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    status</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 200</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    data</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> tarefas,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">export</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> getTarefa</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Procedure</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">&#x3C;</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">Tarefa</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">Tarefa</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">[</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">id</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">]> </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">id</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">!</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">id) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    throw</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6;font-weight:bold;--shiki-dark-font-weight:bold\"> new</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> ProcedureError</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span></span>\n<span class=\"line\"><span style=\"color:#E9F284;--shiki-dark:#E9F284\">      '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">O id é obrigatório</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">      400</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#E9F284;--shiki-dark:#E9F284\">      '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Faltam parâmetros obrigatórios</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    )</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> tarefa </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> tarefas.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">find</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">((</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">todo</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> todo.id </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">===</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> id)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">!</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">tarefa) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    throw</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6;font-weight:bold;--shiki-dark-font-weight:bold\"> new</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> ProcedureError</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">`Tarefa </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">${</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">id</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">}</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> não encontrada`</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">404</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    status</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 200</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    data</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> tarefa,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">export</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> addTarefa</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Procedure</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">&#x3C;{ id</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\"> Tarefa</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">[</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">id</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">] }, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">Tarefa</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">[</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">title</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">]> </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">title</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">!</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">title) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    throw</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6;font-weight:bold;--shiki-dark-font-weight:bold\"> new</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> ProcedureError</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span></span>\n<span class=\"line\"><span style=\"color:#E9F284;--shiki-dark:#E9F284\">      '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">O título é obrigatório</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">      400</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#E9F284;--shiki-dark:#E9F284\">      '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Faltam parâmetros obrigatórios</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    )</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> id </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> tarefas.length </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">+</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 1</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> tarefa </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    id,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    title,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  tarefas.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">push</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(tarefa)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    status</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 201</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    data</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> { id },</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">export</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> updateTarefa</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Procedure</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">&#x3C;</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">undefined</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">Tarefa</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">> </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">args</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">!</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">args?.id </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">||</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> !</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">args?.title) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    throw</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6;font-weight:bold;--shiki-dark-font-weight:bold\"> new</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> ProcedureError</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span></span>\n<span class=\"line\"><span style=\"color:#E9F284;--shiki-dark:#E9F284\">      '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">O id e o título são obrigatórios</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">      400</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#E9F284;--shiki-dark:#E9F284\">      '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Faltam parâmetros obrigatórios</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    )</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> index </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> tarefas.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">findIndex</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">((</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">todo</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> todo.id </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">===</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> args.id)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (index </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">===</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> -</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">1</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    throw</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6;font-weight:bold;--shiki-dark-font-weight:bold\"> new</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> ProcedureError</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">`Tarefa </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">${</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">args.id</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">}</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> não encontrada`</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">404</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  tarefas[index].title </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> args.title</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    status</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 200</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">export</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> deleteTarefa</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Procedure</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">&#x3C;</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">undefined</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">Tarefa</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">[</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">id</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">]> </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">id</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">!</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">id) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    throw</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6;font-weight:bold;--shiki-dark-font-weight:bold\"> new</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> ProcedureError</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span></span>\n<span class=\"line\"><span style=\"color:#E9F284;--shiki-dark:#E9F284\">      '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">O id é obrigatório</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">      400</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#E9F284;--shiki-dark:#E9F284\">      '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Faltam parâmetros obrigatórios</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    )</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> index </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> tarefas.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">findIndex</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">((</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">todo</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> todo.id </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">===</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> id)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (index </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">===</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> -</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">1</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    throw</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6;font-weight:bold;--shiki-dark-font-weight:bold\"> new</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> ProcedureError</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">`Tarefa </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">${</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">id</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">}</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> não encontrada`</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">404</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  tarefas </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> tarefas.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">filter</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">((</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">todo</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> todo.id </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">!==</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> id)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    status</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 204</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// Exportamos os tipos da nossa API</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// para serem usados do lado  do cliente.</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">export</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> type</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> API</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  getTarefas</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> typeof</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> getTarefas</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  getTarefa</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> typeof</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> getTarefa</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  addTarefa</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> typeof</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> addTarefa</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  updateTarefa</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> typeof</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> updateTarefa</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  deleteTarefa</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> typeof</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> deleteTarefa</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<p>Com tudo pronto, agora podemos criar o código do nosso cliente e a única coisa que irei usar do código do servidor é o tipo <code>API</code> (que definimos no arquivo <code>src/procedures.ts</code>). Claro, para fazer isso, o código do cliente ou do servidor devem estar no mesmo <a href=\"https://monorepo.tools/\">monorepo</a> ou serem compartilhados via <a href=\"https://git-scm.com/book/en/v2/Git-Tools-Submodules\">git submodules</a>:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-typescript\"><span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// client/src/index.ts</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// Este é o caminho do código servidor, que pode estar no mesmo </span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// monorepo ou pasta, a depender da sua preferência.</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">import</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> type</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> { API } </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">from</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">../../server/src/procedures</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// A função query é tudo que você precisará para</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// interagir com as procedures do servidor.</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> query</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> &#x3C;</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">Procedure</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> extends</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> keyof</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\"> API</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">>(</span></span>\n<span class=\"line\"><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">  procedure</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Procedure</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  ...</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">args</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Parameters</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">&#x3C;</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">API</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">[</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">Procedure</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">]></span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Promise</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">&#x3C;</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">ReturnType</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">&#x3C;</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">API</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">[</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">Procedure</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">]>> </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> fetch</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">http://localhost:3000/rpc</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    method</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">POST</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    headers</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> { </span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Content-Type</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">application/json</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> },</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    body</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> JSON</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">stringify</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">({ procedure, args</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> args[</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">0</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">] }),</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }).</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">then</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">((</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">response</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> response.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">json</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">()) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">as</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> any</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<p>E agora, temos uma função que documenta todas as funções disponíveis no nosso servidor (e seus respectivos argumentos) apenas com seus tipos:</p>\n<p><img src=\"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ujxxpvxxqaxxizgo6dvh.png\" alt=\"Mostrando o autocomplete das funções do servidor\"></p>\n<p>É importante notar que estamos utilizando <code>import type { API } from '../../server/src/procedures'</code> (ênfase no <code>type</code>), pois, depois de compilar o nosso código para JavaScript, não queremos nenhum código do servidor disponível no cliente.</p>\n<p>Agora que entendemos o que é RPC e construímos nossa própria API com este padrão, vamos ver como o <a href=\"https://trpc.io/\">tRPC</a> pode nos ajudar.</p>\n<h2>Introduzindo o tRPC</h2>\n<p>O tRPC pega o conceito de uma API RPC que acabamos de implementar (e que foi inicialmente apresentado pelo Colin McDonell em seu <a href=\"https://colinhacks.com/essays/painless-typesafety\">blog</a>) e adiciona uma experiência de desenvolvimento ainda melhor, com validação dos dados de entrada e saída com <a href=\"https://github.com/colinhacks/zod\">Zod</a> (ou outra biblioteca de validação que você prefira) e até a geração do código do cliente com <a href=\"https://tanstack.com/query/latest\">@tanstack/query</a> e subscrições para envio de dados em tempo real via WebSockets. Dito isto, vamos refazer a API que construímos acima usando <a href=\"https://trpc.io/\">tRPC</a> e Fastify:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-typescript\"><span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// server/src/app.ts</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">import</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> Fastify </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">from</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">fastify</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">import</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> { fastifyTRPCPlugin } </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">from</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">@trpc/server/adapters/fastify</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">import</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> { appRouter } </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">from</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">./router</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">export</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> app</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> () </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> fastify </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> Fastify</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">({ maxParamLength</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 5000</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> })</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  fastify.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">register</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(fastifyTRPCPlugin, {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    prefix</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">/trpc</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    trpcOptions</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> { router</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> appRouter},</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  });</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> fastify</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-typescript\"><span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// server/src/router.ts</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">import</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> { initTRPC } </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">from</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">@trpc/server</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">import</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> { z } </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">from</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">zod</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">type</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Tarefa</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  id</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  title</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> string</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">export</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> let</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> tarefas</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Tarefa</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">[] </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> [</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    id</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 1</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    title</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Tarefa 1</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  },</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    id</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 2</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    title</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Tarefa 2</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  },</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    id</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 3</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    title</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Tarefa 3</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  },</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">]</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">export</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> t </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> initTRPC.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">create</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">()</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">export</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> appRouter </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> t.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">router</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">({</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  // Toda operação de busca de dados é uma query</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  // ---------------------\\/</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  getTarefas</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> t.procedure.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">query</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(() </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> tarefas),</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  // Podemos tipar a entrada (e a saída de dados)</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  // usando a excelente biblioteca Zod.</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  getTarefa</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> t.procedure.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">input</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(z.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">number</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">()).</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">query</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(({ input: </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">id</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> }) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> tarefa </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> tarefas.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">find</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">((</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">todo</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> todo.id </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">===</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> id)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">!</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">tarefa) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">      throw</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6;font-weight:bold;--shiki-dark-font-weight:bold\"> new</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> Error</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Tarefa não encontrada</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> tarefa</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }),</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  // Toda operação de alteração de dados é uma mutation</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  // --------------------------------------\\/</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  addTarefa</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> t.procedure.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">input</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(z.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">string</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">()).</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">mutation</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(({ input: </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">title</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> }) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> id </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> tarefas.length </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">+</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 1</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    tarefas.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">push</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">({ id, title })</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> id</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }),</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  updateTarefa</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> t.procedure</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    .</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">input</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(z.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">object</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">({ id</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> z.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">number</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(), title</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> z.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">string</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">() }))</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    .</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">mutation</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(({ input: { </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">id</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">title</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> } }) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">      const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> tarefa </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> tarefas.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">find</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">((</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">todo</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> todo.id </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">===</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> id)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">      if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">!</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">tarefa) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">        throw</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6;font-weight:bold;--shiki-dark-font-weight:bold\"> new</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> Error</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Tarefa não encontrada</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      tarefa.title </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> title</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">      return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> id</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    }),</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  deleteTarefa</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> t.procedure.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">input</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(z.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">number</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">()).</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">mutation</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(({ input: </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">id</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> }) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> tarefa </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> tarefas.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">find</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">((</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">todo</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> todo.id </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">===</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> id)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">!</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">tarefa) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">      throw</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6;font-weight:bold;--shiki-dark-font-weight:bold\"> new</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> Error</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Tarefa não encontrada</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    tarefas </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> tarefas.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">filter</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">((</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">todo</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> todo.id </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">!==</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> id)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> id</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }),</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">})</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// Exporta a definição de tipos do router</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">export</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> type</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> AppRouter</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> typeof</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> appRouter</span></span></code></pre>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-typescript\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">import</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> { app } </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">from</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">./app</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> server </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> app</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">()</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">try</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  server.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">listen</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">({ port</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 3000</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> })</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">} </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">catch</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (err) {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  server.log.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">error</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  process.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">exit</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">1</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<p>Se você leu os comentários do arquivo <code>server/src/router.ts</code> verá que o tRPC utiliza o mesmo modelo mental de operações do GraphQL, chamando as operações de busca de dados de <em>query</em> e as operações de alteração de dados de <em>mutation</em> (inclusive, pode-se dizer que o GraphQL é uma implementação de RPC que adiciona uma linguagem de busca e a documentação das entidades que são disponibilizadas pela API).</p>\n<p>No cliente, podemos utilizar o serviço básico do tRPC (similar ao que fizemos em nossa função <code>query</code> no exemplo anterior:</p>\n<p><img src=\"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gagmnv6duxkuzbu4lthj.png\" alt=\"Tipagem dos endpoint do cliente do tRPC\"></p>\n<p>Ou, caso nosso frontend seja feito em React ou Next.js, podemos usar o cliente que se aproveita das facilidades do <a href=\"https://tanstack.com/query/latest\">@tanstack/query</a>.</p>\n<p>Se você leu até e quer mexer no código utilizado neste artigo, acesse <a href=\"https://github.com/DouglasdeMoura/rpc-typesafe-api\">este repositório</a> no GitHub. Você também pode ver a <a href=\"https://www.youtube.com/watch?v=tVMmVDELuLE\">minha palestra no NodeBR #61</a> onde faço uma introdução ao tRPC.</p>\n<h3>Referências</h3>\n<ul>\n<li><a href=\"https://www.youtube.com/watch?v=tVMmVDELuLE\">Desenvolvendo APIs fortemente tipadas de ponta a ponta com tRPC - NodeBR #61</a>;</li>\n<li><a href=\"https://colinhacks.com/essays/painless-typesafety\">Building an end-to-end typesafe API — without GraphQL</a></li>\n</ul>\n",
    "tags": [
      "typescript",
      "API",
      "rpc"
    ],
    "translates": null
  },
  "aliases-do-git-que-uso-diariamente": {
    "id": "ii9colsinjxkx1s",
    "title": "Aliases do Git que uso diariamente",
    "slug": "aliases-do-git-que-uso-diariamente",
    "locale": "pt-BR",
    "created": "2024-07-31T17:24:35.964Z",
    "updated": "2024-07-31T17:38:59.555Z",
    "content": "<p>Eu gosto de sempre ter um terminal aberto enquanto estou trabalhando e, por conta disso, acabo interagindo com o Git no terminal com muito mais frequência do que através da GUI da IDE. Por conta disso, sempre configuro os seguintes aliases para facilitar o uso dos comandos que mais utilizo:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">alias</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> g</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">git</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">alias</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> ga</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">git add</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">alias</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> gaa</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">git add --all</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">alias</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> gb</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">git branch</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">alias</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> gc</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">git commit</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">alias</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> gac</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">git commit -ac</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">alias</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> gca</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">git commit --amend</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">alias</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> gca!=</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">git commit --amend --no-verify</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">alias</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> gcm</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">git commit -m</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">alias</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> gco</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">git checkout</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">alias</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> gcb</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">git checkout -b</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">alias</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> gp</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">git pull -p</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">alias</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> gpo</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">git push origin</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">alias</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> gpo!=</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">git push origin --force-with-lease</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span></code></pre>\n<p>Se você usa o Linux, MacOS ou WSL, basta copiar os <em>aliases</em> acima para o arquivo de configuração do seu shell (<code>~/.bashrc</code> para <a href=\"https://www.gnu.org/software/bash/\">Bash</a>, <code>~/.zshrc</code> para <a href=\"https://www.zsh.org/\">ZSH</a>, <code>~/config/fish/config.fish</code> para <a href=\"https://fishshell.com/\">Fish</a>). Caso você utilize o PoweShell, adicione as seguintes funções ao seu arquivo <code>Microsoft.PowerShell_profile.ps1</code> (para editar com o VS Code, execute <code>code $PROFILE</code> no PowerShell):</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-sh\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">function</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> ga</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> { </span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">git</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> add</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> $args</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> }</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">function</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> gaa</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> { </span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">git</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> add</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> --all</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> $args</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> }</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">function</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> gb</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> { </span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">git</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> branch</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> $args</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> }</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">function</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> gc</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> { </span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">git</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> commit</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> $args</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> }</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">function</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> gac</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">git</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> commit</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> -a</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> -c</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> $args</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> }</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">function</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> gca</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> { </span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">git</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> commit</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> --amend</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> $args</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> }</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">function</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> gca!</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> { </span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">git</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> commit</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> --amend</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> --no-verify</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> $args</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> }</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">function</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> gcm</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> { </span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">git</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> commit</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> -m</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> $args</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> }</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">function</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> gco</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> { </span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">git</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> checkout</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> $args</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> }</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">function</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> gcb</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> { </span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">git</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> checkout</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> -b</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> $args</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> }</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">function</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> gp</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> { </span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">git</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> pull</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> -p</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> $args</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> }</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">function</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> gpo</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> { </span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">git</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> push</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> origin</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> $args</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> }</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">function</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> gpo!</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> { </span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">git</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> push</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> origin</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> --force-with-lease</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> $args</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> }</span></span></code></pre>\n",
    "tags": [
      "Linux",
      "Terminal"
    ],
    "translates": null
  },
  "entendendo-o-que-e-tail-call-optimization-com-javascript": {
    "id": "rc3oq9fakzdn3ad",
    "title": "Entendendo o que é Tail Call Optimization com JavaScript",
    "slug": "entendendo-o-que-e-tail-call-optimization-com-javascript",
    "locale": "pt-BR",
    "created": "2023-09-03T02:40:27.535Z",
    "updated": "2023-10-24T15:13:47.577Z",
    "content": "<p>Considere a seguinte função que calcula o fatorial de um número:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-javascript\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> factorial</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">n</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  let</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> result </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 1</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  while</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (n </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">></span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 1</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    result </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">*=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> n</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    n</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">--</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> result</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<Alert title=\"Fatorial\" mb=\"md\" color=\"blue\">\nEm matemática, o fatorial de um inteiro n não negativo (n!), é o produto de todos os inteiros positivos menores ou iguais a n.\n</Alert>\n<p>A função acima foi implementada de forma iterativa, ou seja, ela utiliza um laço de repetição para calcular o fatorial de um número. Porém, é possível implementar a mesma função de forma recursiva (ou seja: uma função que referencia a si mesma):</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-javascript\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> factorial</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">n</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (n </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">===</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 0</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">return</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 1</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> n </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">*</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> factorial</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(n </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">-</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 1</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<p>O resultado de ambas às funções é o mesmo, porém, a função iterativa é <a href=\"https://jsben.ch/1qyl8\">muito mais eficiente</a> (no JavaScript) que a função recursiva. Além disso, se tentarmos calcular o fatorial de um número muito grande, nós deparamos com o erro RangeError: Maximum call stack size exceeded. Vamos entender o porquê disso e como podemos melhorar a função recursiva.</p>\n<h2>Pilha de execução</h2>\n<p>Uma <a href=\"https://developer.mozilla.org/en-US/docs/Glossary/Call_stack\">pilha de execução (call stack)</a> é uma estrutura de dados que armazena informações sobre as funções de um programa. Quando uma função é chamada, ela é adicionada à pilha de execução, assim como todas as funções que ela chamar. Quando uma função retorna, ela é removida da pilha de execução. Cada função adicionada à pilha é chamada de <em>stack frame</em>.</p>\n<p>Para entendermos o que está acontecendo, vamos tentar representar, graficamente, como o cálculo do fatorial de 6 é feito com a função iterativa:</p>\n<div class=\"flex align-center justify-center\"><svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 265.90625 838.4765625\" style=\"max-width: 250px;\">\n  <rect x=\"0\" y=\"0\" width=\"265.90625\" height=\"838.4765625\" fill=\"#ffffff\"></rect><g transform=\"translate(23.453125 21.1630859375) rotate(0 82.03125 396)\"><text x=\"0\" y=\"0\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">factorial(6)</text><text x=\"0\" y=\"24\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\"></text><text x=\"0\" y=\"48\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">result = 1</text><text x=\"0\" y=\"72\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">while(6 &gt; 1) {</text><text x=\"0\" y=\"96\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">  result *= 6</text><text x=\"0\" y=\"120\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">  6--</text><text x=\"0\" y=\"144\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">}</text><text x=\"0\" y=\"168\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\"></text><text x=\"0\" y=\"192\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">result = 6</text><text x=\"0\" y=\"216\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">while(5 &gt; 1) {</text><text x=\"0\" y=\"240\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">  result *= 5</text><text x=\"0\" y=\"264\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">  5--</text><text x=\"0\" y=\"288\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">}</text><text x=\"0\" y=\"312\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\"></text><text x=\"0\" y=\"336\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">result = 30</text><text x=\"0\" y=\"360\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">while(4 &gt; 1) {</text><text x=\"0\" y=\"384\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">  result *= 4</text><text x=\"0\" y=\"408\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">  4--</text><text x=\"0\" y=\"432\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">}</text><text x=\"0\" y=\"456\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\"></text><text x=\"0\" y=\"480\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">result = 120</text><text x=\"0\" y=\"504\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">while(3 &gt; 1) {</text><text x=\"0\" y=\"528\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">  result *= 3</text><text x=\"0\" y=\"552\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">  3--</text><text x=\"0\" y=\"576\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">}</text><text x=\"0\" y=\"600\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\"></text><text x=\"0\" y=\"624\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">result = 360</text><text x=\"0\" y=\"648\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">while(2 &gt; 1) {</text><text x=\"0\" y=\"672\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">  result *= 2</text><text x=\"0\" y=\"696\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">  2--</text><text x=\"0\" y=\"720\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">}</text><text x=\"0\" y=\"744\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\"></text><text x=\"0\" y=\"768\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">result = 720</text></g><g stroke-linecap=\"round\" transform=\"translate(10.6328125 10) rotate(0 91.837890625 409.23828125)\"><path d=\"M0 0 C48.5 0, 97 0, 183.68 0 M0 0 C38.1 0, 76.21 0, 183.68 0 M183.68 0 C183.68 322.39, 183.68 644.78, 183.68 818.48 M183.68 0 C183.68 209.12, 183.68 418.24, 183.68 818.48 M183.68 818.48 C136.65 818.48, 89.63 818.48, 0 818.48 M183.68 818.48 C139.2 818.48, 94.72 818.48, 0 818.48 M0 818.48 C0 520.36, 0 222.25, 0 0 M0 818.48 C0 552.95, 0 287.41, 0 0\" stroke=\"#1e1e1e\" stroke-width=\"2\" fill=\"none\"></path></g><g stroke-linecap=\"round\"><g transform=\"translate(10.42578125 59.25) rotate(0 91.15625 -0.71875)\"><path d=\"M0 0 C72.12 -0.57, 144.24 -1.14, 182.31 -1.44 M0 0 C71.69 -0.57, 143.39 -1.13, 182.31 -1.44\" stroke=\"#1e1e1e\" stroke-width=\"2\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(12.23046875 202.26953125) rotate(0 91.15625 -0.71875)\"><path d=\"M0 0 C36.59 -0.29, 73.19 -0.58, 182.31 -1.44\" stroke=\"#1e1e1e\" stroke-width=\"2.5\" fill=\"none\" stroke-dasharray=\"8 10\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(10.625 347.87109375) rotate(0 91.15625 -0.71875)\"><path d=\"M0 0 C51.33 -0.4, 102.66 -0.81, 182.31 -1.44\" stroke=\"#1e1e1e\" stroke-width=\"2.5\" fill=\"none\" stroke-dasharray=\"8 10\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(11.01953125 492.28125) rotate(0 91.15625 -0.71875)\"><path d=\"M0 0 C57.44 -0.45, 114.88 -0.91, 182.31 -1.44\" stroke=\"#1e1e1e\" stroke-width=\"2.5\" fill=\"none\" stroke-dasharray=\"8 10\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(10 638.734375) rotate(0 91.15625 -0.71875)\"><path d=\"M0 0 C69.77 -0.55, 139.54 -1.1, 182.31 -1.44\" stroke=\"#1e1e1e\" stroke-width=\"2.5\" fill=\"none\" stroke-dasharray=\"8 10\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(10.375 779.0859375) rotate(0 91.716796875 -0.111328125)\"><path d=\"M0 0 C60.87 -0.07, 121.75 -0.15, 183.43 -0.22 M0 0 C42.98 -0.05, 85.97 -0.1, 183.43 -0.22\" stroke=\"#1e1e1e\" stroke-width=\"2\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(253.8515625 18.4609375) rotate(0 -21.484375 392.23828125)\"><path d=\"M0 0 C0.51 193.83, 1.02 387.65, 2.05 783.86 M0 0 C0.77 295.38, 1.55 590.76, 2.05 783.86 M2.05 783.86 C-13.35 784.06, -28.75 784.26, -45.02 784.48 M2.05 783.86 C-8.14 783.99, -18.33 784.12, -45.02 784.48\" stroke=\"#e03131\" stroke-width=\"2\" fill=\"none\"></path></g><g transform=\"translate(253.8515625 18.4609375) rotate(0 -21.484375 392.23828125)\"><path d=\"M-45.02 784.48 L-31.51 777.96 L-31.35 790.64 L-45.02 784.48\" stroke=\"none\" stroke-width=\"0\" fill=\"#e03131\" fill-rule=\"evenodd\"></path><path d=\"M-45.02 784.48 C-41.68 782.86, -38.34 781.25, -31.51 777.96 M-45.02 784.48 C-39.93 782.02, -34.84 779.56, -31.51 777.96 M-31.51 777.96 C-31.46 782.11, -31.4 786.25, -31.35 790.64 M-31.51 777.96 C-31.48 780.7, -31.44 783.45, -31.35 790.64 M-31.35 790.64 C-34.7 789.13, -38.05 787.62, -45.02 784.48 M-31.35 790.64 C-35.52 788.76, -39.69 786.88, -45.02 784.48 M-45.02 784.48 C-45.02 784.48, -45.02 784.48, -45.02 784.48 M-45.02 784.48 C-45.02 784.48, -45.02 784.48, -45.02 784.48\" stroke=\"#e03131\" stroke-width=\"2\" fill=\"none\"></path></g></g><mask></mask></svg></div><p>Agora, compare com o modelo de substituição para o cálculo do fatorial de 6 com a função recursiva:</p>\n<div class=\"flex align-center justify-center\"><svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 523.1250871855339 308\" style=\"max-width: 500px;\">\n  <rect x=\"0\" y=\"0\" width=\"523.1250871855339\" height=\"308\" fill=\"#ffffff\"></rect><g transform=\"translate(10 10) rotate(0 234.375 144)\"><text x=\"0\" y=\"0\" font-family=\"Cascadia, Segoe UI Emoji,monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">factorial(6)</text><text x=\"0\" y=\"24\" font-family=\"Cascadia, Segoe UI Emoji,monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">6 * factorial(5)</text><text x=\"0\" y=\"48\" font-family=\"Cascadia, Segoe UI Emoji,monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">6 * (5 * factorial(4))</text><text x=\"0\" y=\"72\" font-family=\"Cascadia, Segoe UI Emoji,monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">6 * (5 * (4 * factorial(3)))</text><text x=\"0\" y=\"96\" font-family=\"Cascadia, Segoe UI Emoji,monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">6 * (5 * (4 * (3 * factorial(2))))</text><text x=\"0\" y=\"120\" font-family=\"Cascadia, Segoe UI Emoji,monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">6 * (5 * (4 * (3 * (2 * factorial(1)))))</text><text x=\"0\" y=\"144\" font-family=\"Cascadia, Segoe UI Emoji,monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">6 * (5 * (4 * (3 * (2 * 1))))</text><text x=\"0\" y=\"168\" font-family=\"Cascadia, Segoe UI Emoji,monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">6 * (5 * (4 * (3 * 2)))</text><text x=\"0\" y=\"192\" font-family=\"Cascadia, Segoe UI Emoji,monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">6 * (5 * (4 * 6))</text><text x=\"0\" y=\"216\" font-family=\"Cascadia, Segoe UI Emoji,monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">6 * (5 * 24)</text><text x=\"0\" y=\"240\" font-family=\"Cascadia, Segoe UI Emoji,monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">6 * 120</text><text x=\"0\" y=\"264\" font-family=\"Cascadia, Segoe UI Emoji,monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">720</text></g><g stroke-linecap=\"round\"><g transform=\"translate(151.9921875 16.68359375) rotate(0 142.07621546776704 133.490234375)\"><path d=\"M0 0 C60.13 20.93, 373.58 81.07, 360.75 125.57 C347.92 170.06, -4.03 243.41, -76.98 266.98 M0 0 C60.13 20.93, 373.58 81.07, 360.75 125.57 C347.92 170.06, -4.03 243.41, -76.98 266.98\" stroke=\"#e03131\" stroke-width=\"2\" fill=\"none\"></path></g><g transform=\"translate(151.9921875 16.68359375) rotate(0 142.07621546776704 133.490234375)\"><path d=\"M-76.98 266.98 L-65.43 257.41 L-62.22 269.67 L-76.98 266.98\" stroke=\"none\" stroke-width=\"0\" fill=\"#e03131\" fill-rule=\"evenodd\"></path><path d=\"M-76.98 266.98 C-74.12 264.61, -71.27 262.24, -65.43 257.41 M-76.98 266.98 C-73.95 264.47, -70.92 261.96, -65.43 257.41 M-65.43 257.41 C-64.7 260.2, -63.97 263, -62.22 269.67 M-65.43 257.41 C-64.58 260.67, -63.73 263.93, -62.22 269.67 M-62.22 269.67 C-67.54 268.7, -72.85 267.73, -76.98 266.98 M-62.22 269.67 C-67.93 268.63, -73.63 267.59, -76.98 266.98 M-76.98 266.98 C-76.98 266.98, -76.98 266.98, -76.98 266.98 M-76.98 266.98 C-76.98 266.98, -76.98 266.98, -76.98 266.98\" stroke=\"#e03131\" stroke-width=\"2\" fill=\"none\"></path></g></g><mask></mask></svg></div><p>Observe, que, na função iterativa, a forma da seta é linear e podemos ver o estado de cada variável em cada passo. Além disso, a cada iteração do nosso laço de repetição, um cálculo e efetuado e as variáveis armazenadas na memória são atualizadas. Na função recursiva, a forma da seta é exponencial e não podemos ver o estado de todas as variáveis na primeira metade do processamento. Além disso, a cada vez que a função é executada, mais memória precisa ser utilizada para armazenar os valores resultantes de cada execução.</p>\n<p>Mas, o que isso significa? Para que o JavaScript possa calcular o fatorial de 6, com a função iterativa, a condição <code>while</code> é adicionada à pilha, onde seu cálculo é efetuado, a variável result é atualizada e, em seguida, o bloco de código executado do <code>while</code> é retirado da pilha. Isso é feito até que a condição while seja falsa, ou seja, até que o valor de <code>n</code> seja menor ou igual a 1.</p>\n<p>Já, na função recursiva, cada chamada da função <code>factorial</code> é adicionada à pilha quantas vezes forem necessárias até que a condição if seja falsa, ou seja, até que o valor de <code>n</code> seja menor ou igual a 1. Isso significa que, para calcular o fatorial de 6, a função factorial é adicionada à pilha 6 vezes, para, então ser executada. E é por isso que, quando tentamos calcular o fatorial de um número grande (100.000, por exemplo), nos deparamos com o erro <code>RangeError: Maximum call stack size exceeded</code>: não há espaço suficiente na pilha para armazenar todas as chamadas da função factorial.</p>\n<h2>Introduzindo Tail Call Optimization</h2>\n<p>Como bem definido pelo <a href=\"https://dr-axel.de/\">Dr. Axel Rauschmayer</a> (grifo meu):</p>\n<blockquote>\n<p>[…] sempre que a última coisa que uma função faz é chamar outra função, então esta última não precisa retornar para sua chamadora. Como consequência, nenhuma informação precisa ser armazenada na pilha de chamadas e a chamada de função é mais como um goto (um salto). Esse tipo de chamada é chamado de <em>tail call</em>; não aumentar a pilha é chamado de tail call optmization (TCO).</p>\n</blockquote>\n<p>Ora, descobrimos que nossa função para calcular fatorial não é <em>tail recursive</em>. Mas, como podemos torná-la tail recursiva? Com a ajuda de outra função:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-javascript\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> factorial</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">n</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> factorialHelper</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(n, </span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">1</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> factorialHelper</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">x</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">accumulator</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (x </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">&#x3C;=</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 1</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> accumulator</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> factorialHelper</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(x </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">-</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 1</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, x </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">*</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> accumulator)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<p>Agora, sim, nossa função é <em>tail recursive</em>: a última coisa que ela faz é chamar uma função (e não calcular uma expressão, como na primeira implementação).Agora, vamos ver o modelo de substituição para o cálculo do fatorial de 6 com a nossa nova função <code>factorial</code>:</p>\n<div class=\"flex align-center justify-center\"><svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 321.31640625 228.421875\" style=\"max-width: 300px;\">\n  <rect x=\"0\" y=\"0\" width=\"321.31640625\" height=\"228.421875\" fill=\"#ffffff\"></rect><g transform=\"translate(10 26.421875) rotate(0 134.765625 96)\"><text x=\"0\" y=\"0\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">factorial(6)</text><text x=\"0\" y=\"24\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">factorialHelper(6, 1)</text><text x=\"0\" y=\"48\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">factorialHelper(5, 6)</text><text x=\"0\" y=\"72\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">factorialHelper(4, 30)</text><text x=\"0\" y=\"96\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">factorialHelper(3, 120)</text><text x=\"0\" y=\"120\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">factorialHelper(2, 360)</text><text x=\"0\" y=\"144\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">factorialHelper(1, 720)</text><text x=\"0\" y=\"168\" font-family=\"Cascadia, Segoe UI Emoji, monospace\" font-size=\"20px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">720</text></g><g stroke-linecap=\"round\"><g transform=\"translate(319.91015625 10) rotate(0 -24.41015625 99.6640625)\"><path d=\"M-8.59 0 C-8.77 77.75, -8.95 155.51, -9.05 199.33 M-8.59 0 C-8.72 57.11, -8.86 114.22, -9.05 199.33 M-9.05 199.33 C-17.24 199.22, -25.44 199.11, -40.23 198.91 M-9.05 199.33 C-20.96 199.17, -32.87 199.01, -40.23 198.91\" stroke=\"#e03131\" stroke-width=\"2\" fill=\"none\"></path></g><g transform=\"translate(319.91015625 10) rotate(0 -24.41015625 99.6640625)\"><path d=\"M-40.23 198.91 L-26.55 192.75 L-26.72 205.43 L-40.23 198.91\" stroke=\"none\" stroke-width=\"0\" fill=\"#e03131\" fill-rule=\"evenodd\"></path><path d=\"M-40.23 198.91 C-34.89 196.51, -29.56 194.11, -26.55 192.75 M-40.23 198.91 C-36.31 197.15, -32.39 195.38, -26.55 192.75 M-26.55 192.75 C-26.59 196.09, -26.64 199.42, -26.72 205.43 M-26.55 192.75 C-26.61 197.6, -26.68 202.44, -26.72 205.43 M-26.72 205.43 C-29.5 204.09, -32.27 202.75, -40.23 198.91 M-26.72 205.43 C-30.27 203.72, -33.81 202.01, -40.23 198.91 M-40.23 198.91 C-40.23 198.91, -40.23 198.91, -40.23 198.91 M-40.23 198.91 C-40.23 198.91, -40.23 198.91, -40.23 198.91\" stroke=\"#e03131\" stroke-width=\"2\" fill=\"none\"></path></g></g><mask></mask></svg></div><p><a href=\"https://jsben.ch/vOf9P\">O desempenho é superior</a> ao da nossa primeira implementação, apesar de ainda não bater o desempenho da função iterativa. Porém, ainda nos deparamos com o erro <code>RangeError: Maximum call stack size exceeded</code>. Mas, por que isso acontece? Porque, apesar de nossa função ser <em>tail recursive</em>, as atuais versões do Node.js e os navegadores (<a href=\"https://webkit.org/blog/6240/ecmascript-6-proper-tail-calls-in-webkit/\">com exceção do Safari</a>) não implementa Tail Call Optimization (apesar de sua inclusão na especificação do <a href=\"https://262.ecma-international.org/6.0/#sec-tail-position-calls\">EcmaScript</a> desde 2015).</p>\n<p>Mas, como resolveremos este problema? Com a ajuda de outra função, claro! Para isso, vamos contar com a ajuda do padrão <a href=\"https://en.wikipedia.org/wiki/Trampoline_(computing)\">Trampoline</a>:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-javascript\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> trampoline</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">fn</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  while</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">typeof</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> fn </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">===</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">function</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    fn </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> fn</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">()</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> result</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<p>Nossas função trampoline consiste em um laço de repetição que invoca uma função que envolve outra função (o que chamamos de <a href=\"https://en.wikipedia.org/wiki/Thunk\">thunk</a>) até que não haja mais funções para executar. Vamos ver como ficaria a implementação da nossa função factorial com o padrão Trampoline:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-javascript\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> trampoline</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">fn</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  while</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">typeof</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> fn </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">===</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">function</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    fn </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> fn</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">()</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> fn</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> factorialHelper</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">x</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">accumulator</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (x </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">&#x3C;=</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 1</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> accumulator</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  // Note que, agora, a função retorna uma função</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> () </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> factorialHelper</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(x </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">-</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 1</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, x </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">*</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> accumulator)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> factorial</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">n</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> trampoline</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">factorialHelper</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(n, </span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">1</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">))</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<p>E agora sim, podemos chamar a nossa função factorial com um número grande, sem nos depararmos com o erro RangeError: Maximum call stack size exceeded. Claro, dependendo do fatorial que quisermos calcular, nos depararemos com um Infinity, por se tratar de um número muito grande (um número maior que o Number.MAX_SAFE_INTEGER: 253 - <sup>1</sup>). Neste caso, podemos usar o <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt\">BigInt</a>:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-javascript\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> trampoline</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">fn</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  while</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">typeof</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> fn </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">===</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">function</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    fn </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> fn</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">()</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> fn</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> factorialHelper</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">x</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">accumulator</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (x </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">&#x3C;=</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 1</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> accumulator</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> () </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> factorialHelper</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(x </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">-</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 1</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">n</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, x </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">*</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> accumulator)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> factorial</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">n</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  // Convertendo os valores para BigInt</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  //-------------------------------\\/----------\\/</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> trampoline</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">factorialHelper</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">BigInt</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(n), </span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">1</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">n</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">))</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<h2>Tipando a nossa função</h2>\n<p>E, para finalizar, vamos adicionar os tipos necessários para a nossa função factorial:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-typescript\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">type</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Thunk</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> bigint</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> |</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (() </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Thunk</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> trampoline</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">fn</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Thunk</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  while</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">typeof</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> fn </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">===</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">function</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    fn </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> fn</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">()</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> fn</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> factorialHelper</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">x</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> bigint</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">accumulator</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> bigint</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Thunk</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (x </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">&#x3C;=</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 1</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> accumulator</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> () </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> factorialHelper</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(x </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">-</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 1</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">n</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, x </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">*</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> accumulator)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> factorial</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">n</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> trampoline</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">factorialHelper</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">BigInt</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(n), </span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">1</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">n</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">))</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<h2>Referências</h2>\n<ul>\n<li><a href=\"https://www.mgmarlow.com/words/2021-03-27-proper-tail-calls-js/\">What happened to proper tail calls in JavaScript?</a></li>\n<li><a href=\"https://exploringjs.com/es6/ch_tail-calls.html\">Tail Call Optmization</a></li>\n<li><a href=\"http://cangaceirojavascript.com.br/limites-recursao-javascript-tco-e-pattern-trampoline/\">Limites da recursão em JavaScript, TCO e o pattern Trampoline</a></li>\n<li><a href=\"https://softwareengineering.stackexchange.com/a/189973/383960\">What is an Activation object in JavaScript?</a></li>\n<li><a href=\"https://mathworld.wolfram.com/Factorial.html\">Factorial</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=_JtPhF8MshA\">Tail Recursion Explained - Computerphile</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=-PX0BV9hGZY\">Tail Call Optimization: The Musical!!</a></li>\n</ul>\n",
    "tags": [
      "javascript",
      "algorithms",
      "mathematic",
      "Node.js"
    ],
    "translates": "8mgwfzzig2t1wd9"
  },
  "the-powerful-programmer": {
    "id": "wxuu4bshveoe7ld",
    "title": "The Powerful Programmer",
    "slug": "the-powerful-programmer",
    "locale": "en-US",
    "created": "2024-01-23T13:26:41.726Z",
    "updated": "2024-01-25T17:03:59.369Z",
    "content": "<p>Estimating, implementing, and deploying software rapidly is a characteristic of powerful programmers, as <a href=\"https://www.kentbeck.com/\">Kent Beck</a> mentions in his book <a href=\"https://www.oreilly.com/library/view/extreme-programming-explained/0201616416/\">Extreme Programming Explained</a>. In this article, I will explore these three points, inserting my own opinions on each one.</p>\n<h2>Estimation</h2>\n<p>Estimating a software project is <a href=\"https://jacobian.org/2021/may/20/estimation/\">difficult</a>, and there are various different techniques on how to estimate a software project. You can create a method, through your own experience, learn the method used by other companies but, you must pay attention that the central point is that you have a good idea of how much time the project will take. Projects have a beginning, middle, and end. Learn to estimate your work.</p>\n<h2>Implementation</h2>\n<p>For me, particularly, implementing is the most fun part of the project. And as with any job, we have to be pragmatic in the choice of language and tools. Being pragmatic in the choice does not necessarily mean using the same as everyone else, because, often, some tools continue to be strong in the market due to pure inertia. <a href=\"https://expressjs.com/\">Express</a> is a good example of this. Besides there being many better options with better support (like <a href=\"https://fastify.dev/\">Fastify</a>), many teams still start new projects with Express, even if it is not being maintained regularly, does not handle Promise rejections, etc.</p>\n<p>Besides the issue of tool choice, it is necessary that you <strong>master</strong> the technology stack of your project, being able to implement the best solutions in the shortest possible time. At the tip of your tongue, you have to know a good pattern to apply in the project, a good backend framework, a good frontend framework or even a good full-stack framework. And the experience of development cannot be left out. For the implementation to be fast, the understanding of the project must be easy, its documentation adequate, and its tests need to validate the <strong>intention</strong> flows of the user who will use the system.</p>\n<h2>Deployment</h2>\n<p>Today, can you build an entire project and put it into production, by yourself? And I’m not talking about uploading your project to a completely managed platform, like Vercel, but rather, about taking a Linux machine, installing the necessary tools, and exposing your application to the web. And no, this is not any kind of purism. If you are not a startup that can burn a few million reais per year, without worrying about the cost of your infrastructure, you should, at least, know how to start your application and keep it active between server restarts (preferably using containers), put it behind a reverse proxy (like <a href=\"https://www.nginx.com/\">NGINX</a> or <a href=\"https://caddyserver.com/\">Caddy</a>), configure a firewall, and make a backup of the database in three different places. You can still bring up multiple instances of your application and use the same proxy tool as a load balancer to distribute your application’s access to the different instances that are running.</p>\n",
    "tags": [
      "Software Engineering",
      "Patterns",
      "Carreer"
    ],
    "translates": "jbn0kg24q86k7vn"
  },
  "mastering-insertion-sort-a-detailed-guide": {
    "id": "0mdfakkgsmugaex",
    "title": "Mastering Insertion Sort: A Detailed Guide",
    "slug": "mastering-insertion-sort-a-detailed-guide",
    "locale": "en-US",
    "created": "2024-01-26T23:06:53.913Z",
    "updated": "2024-01-26T23:06:53.913Z",
    "content": "<p>Sorting is a fundamental operation in the field of computer science, and because of this, there are various algorithms available to solve this problem. Each one is chosen based on factors such as the number of items to sort, the degree of order already present, the computer architecture where the algorithm will be executed, the type of storage device, among others. In this article, we will explore the insertion sort algorithm, understanding its nuances, strengths, and limitations.</p>\n<h2>What is insertion sort?</h2>\n<p>Insertion sort is a comparison-based algorithm that constructs its output one element at a time. It works similarly to the method we use to sort a deck of cards: we take one card at a time, compare it with the ones we already have in our hand, place the card in the correct position, and repeat this action until we finish our deck.</p>\n<p>It is an adaptive algorithm, meaning it is efficient for small data sets, as well as other quadratic complexity algorithms ($O(n^2)$). It is simple to implement, requires a constant amount of memory, as changes in the list are made in the list itself (without the need to create a new list, which would double the use of memory), and is capable of sorting the list as it receives it.</p>\n<h2>How does insertion sort work?</h2>\n<p><strong>Initialization:</strong> We assume that the first element of our list is already sorted. We proceed to the next element, consider it as our key, and insert it in the correct position in the sorted part of the list;</p>\n<p><strong>Iteration:</strong> For each item in the list (starting from the second element), we store the current item (key) and its position. Then we compare the key with the elements in the sorted part of the list (elements before the key);</p>\n<p><strong>Insertion:</strong> If the current element in the sorted part is greater than the key, we move that element one position up. This creates space for the new key to be inserted;</p>\n<p><strong>Repositioning the Key:</strong> We continue moving elements one position up until we find the correct position for the key. This position is found when we encounter an element that is less than or equal to the key or when we reach the beginning of the list;</p>\n<p><strong>Repeat:</strong> The process is repeated for all the elements in the list.</p>\n<h2>Implementation in JavaScript</h2>\n<p>To better understand the algorithm, let’s implement it in JavaScript:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-js\"><span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">/**</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">* Sorts an array of numbers using the insertion sort algorithm.</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">* </span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">* </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">@param</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">  {number[]}</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">  numbers</span><span style=\"color:#6272A4;--shiki-dark:#6272A4\"> - The list of numbers to be sorted.</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">* </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">@returns</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">  {number[]}</span><span style=\"color:#6272A4;--shiki-dark:#6272A4\"> - The sorted list of numbers.</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">*/</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">function</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> insertionSort</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">numbers</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  for</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">let</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> i </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 1</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">; i </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">&#x3C;</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> numbers.length; i</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">++</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> key </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> numbers[i]</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    let</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> j </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> i </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">-</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 1</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    </span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    while</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (j </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">>=</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 0</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> &#x26;&#x26;</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> numbers[j] </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> key) {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      numbers[j  </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">+</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">  1</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">] </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  numbers[j]</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      j</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">--</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    numbers[j  </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">+</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">  1</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">] </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> key</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<h2>Complexity Analysis</h2>\n<h3>Time Complexity</h3>\n<p><strong>Best Case (Array is already sorted):</strong> $O(n)$. This is because the inner loop (while) is not executed at all;\n<strong>Average Case and Worst Case (Array is sorted in reverse order):</strong> $O(n^2)$. In the worst case, each iteration will cause an element to be moved. This makes the algorithm inefficient for large data sets.</p>\n<h2>Space Complexity</h2>\n<p><strong>Space Complexity:</strong>  $O(1)$. Insertion sort is an in-place algorithm; it requires a constant amount of memory space.</p>\n",
    "tags": [
      "algorithms",
      "computerscience",
      "tutorial"
    ],
    "translates": "y9hhvn3ra53p0qj"
  },
  "should-i-commit-node-modules-directory-to-git": {
    "id": "46trc5wkbpbc97s",
    "title": "Should I commit node_modules directory to git?",
    "slug": "should-i-commit-node-modules-directory-to-git",
    "locale": "en-US",
    "created": "2024-06-04T17:45:35.356Z",
    "updated": "2024-06-04T17:49:44.038Z",
    "content": "<p>TL; DR: No. Please add <code>node_modules</code> to your <code>.gitignore</code> file:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-text\"><span class=\"line\"><span>node_modules</span></span></code></pre>\n<h2>But, why?</h2>\n<p>The <code>node_modules</code> directory is where your package manager (that can be <a href=\"https://www.npmjs.com/\">npm</a>, <a href=\"https://classic.yarnpkg.com/\">yarn</a> or <a href=\"https://pnpm.io/\">pnpm</a>) will install all the project dependencies listed on your <code>package.json</code>. Regardless of the package manager you choose, a lockfile (<code>package-lock.json</code>,  <code>yarn.lock</code> or <code>pnpm-lock.yaml</code>, respectelly) will be generated in the first time you install your project dependencies, describing the entire dependency tree. This way, every time you need to reinstall your project dependencies, you shall get the exact same files.</p>\n<p>The lockfile should be commited to <code>git</code>, enabling the re-installation of the tree of dependencies in any other ambient, what makes unecessary to commit the <code>node_modules</code> directory to <code>git</code> (also, it cuts the size of your repository by a lot, as <code>node_modules</code> can consumes gigabytes of space).</p>\n",
    "tags": [
      "Node.js",
      "javascript",
      "npm"
    ],
    "translates": "bjdnvqai9ykbt6v"
  },
  "aprenda-sobre-bancos-de-dados-e-como-escolher-o-melhor-para-sua-aplicacao-com-este-guia": {
    "id": "58wjrq3hiqgs1kq",
    "title": "Aprenda sobre bancos de dados (e como escolher o melhor para sua aplicação) com este guia",
    "slug": "aprenda-sobre-bancos-de-dados-e-como-escolher-o-melhor-para-sua-aplicacao-com-este-guia",
    "locale": "pt-BR",
    "created": "2023-08-27T19:47:23.536Z",
    "updated": "2023-08-27T19:47:23.536Z",
    "content": "<p>Se você trabalha com Node.js, já deve conhever o <a href=\"https://www.prisma.io/\">Prisma</a>, um <abbr title=\"Object Relational Mapping, ou Mapeamento Objeto Relacional em português\">ORM</abbr> para TypeScript muito popular. Pois, esta mesma empresa mantém o <a href=\"https://www.prisma.io/dataguide\">Prisma’s Data Guide</a>, um guia que introduz o leitor a:</p>\n<ul>\n<li>Bancos de dados;</li>\n<li>Como escolher o melhor banco de dados para o seu caso de uso;</li>\n<li>Instalação e uso de diferente tipos de bancos de dados:</li>\n<li>Como modelar a estrutura dos dados da sua aplicação;</li>\n<li>Quando (e porquê) utilizar soluções <em>serverless</em>.</li>\n</ul>\n<p>Eu mesmo, acabei de ler este guia e acho que ele é muito útil, principalmente para quem está começando a se aventurar nesta área.</p>\n<p>Acesse:</p>\n<ul>\n<li><a href=\"https://www.prisma.io/dataguide\">Prisma’s Data Guide</a></li>\n</ul>\n",
    "tags": [
      "Banco de dados",
      "Serverless",
      "ORM",
      "Prisma"
    ],
    "translates": null
  },
  "o-que-sao-padroes-de-projeto-na-engenharia-de-software": {
    "id": "o5per7i8c1wiyp5",
    "title": "O que são padrões de projeto na engenharia de software?",
    "slug": "o-que-sao-padroes-de-projeto-na-engenharia-de-software",
    "locale": "pt-BR",
    "created": "2023-09-04T20:00:07.730Z",
    "updated": "2023-09-11T19:50:55.358Z",
    "content": "<p>No livro <a href=\"https://en.wikipedia.org/wiki/A_Pattern_Language\"><em>A Pattern Language</em></a>, Christopher Alexander e seus colegas definem um padrão como:</p>\n<blockquote>\n<p>Cada padrão descreve um problema que ocorre repetidamente em nosso ambiente e, em seguida, descreve o núcleo da solução para esse problema, de tal forma que você pode usar essa solução um milhão de vezes, sem nunca fazê-lo da mesma maneira duas vezes.</p>\n</blockquote>\n<div hidden>\nEach pattern describes a problem which occurs over and over again in our environment, and then describes the core of the solution to that problem, in such a way that you can use this solution a million times over, without ever doing it the same way twice\n</div>\n<p>Cristopher e os outros autores estavam se referindo a padrões de arquitetura de construção, mas, desde muito tempo, a disciplina de engenharia de software adotou este mesmo conceito para o desenvolvimento de software, que foi cristalizado pelo famoso livro <a href=\"https://engsoftmoderna.info/cap6.html#padr%C3%B5es-de-projeto\"><em>Design Patterns: Elements of Reusable Object-Oriented Software</em></a> de Erich Gamma, Richard Helm, Ralph Johnson e John Vlissides (conhecidos como <em>Gang of Four</em> ou <em>GoF</em>). No livro, eles definem padrões de projeto como:</p>\n<blockquote>\n<p>Padrões de projeto descrevem objetos e classes que se relacionam para resolver um problema de projeto genérico em um contexto particular.</p>\n</blockquote>\n<p>É preciso entender que os padrões de projeto descritos nestes livros não são soluções que <strong>devem</strong> ser aplicadas em toda e qualquer situação, mas sim, descrições gerais de soluções para problemas comuns de projetos de software. Desse modo, as soluções propostas podem ser entendidas como um catálogo, a partir do qual pode-se estabelecer um vocabulário comum entre todas as pessoas envolvidas no desenvolvimento de um software, facilitando a comunicação e a compreensão do código.</p>\n<p>Para ilustrar o que foi dito até aqui, vamos considerar um exemplo. Suponha que você está construindo um sistema de gerenciamento de uma biblioteca pessoal e, no seu banco de dados relacional, há uma tabela para armazenar os dados de um livro. A tabela pode ser criada com o seguinte comando SQL, em um banco de dados SQLite:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-sql\"><span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">-- SQLite</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">CREATE</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> TABLE</span></span>\n<span class=\"line\"><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  `</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">books</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">`</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E9F284;--shiki-dark:#E9F284\">    `</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">id</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">`</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> INTEGER</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> NOT NULL</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> PRIMARY KEY</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> autoincrement,</span></span>\n<span class=\"line\"><span style=\"color:#E9F284;--shiki-dark:#E9F284\">    `</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">author</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">`</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> TEXT</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> NOT NULL</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#E9F284;--shiki-dark:#E9F284\">    `</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">title</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">`</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> TEXT</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> NOT NULL</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#E9F284;--shiki-dark:#E9F284\">    `</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">isbn</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">`</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> TEXT</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> NOT NULL</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#E9F284;--shiki-dark:#E9F284\">    `</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">updated_at</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">`</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> DATETIME</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> NULL</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#E9F284;--shiki-dark:#E9F284\">    `</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">created_at</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">`</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> DATETIME</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> NOT NULL</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> DEFAULT</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> CURRENT_TIMESTAMP</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  );</span></span></code></pre>\n<p>Vamos escolher o padrão <a href=\"https://www.martinfowler.com/eaaCatalog/activeRecord.html\"><em>Active Record</em></a> para representar os dados de um livro no nosso sistema. Para isso, vamos criar uma classe em JavaScript conforme o diagrama abaixo:</p>\n<p><SVG64 \nwidth={250}\ncontent=\"PHN2ZyB2ZXJzaW9uPSIxLjEiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgdmlld0JveD0iMCAwIDE5MS43NTUwNzA0OTM4NjYyNCAyMzUuMTQ1MjI2OTU1Mjc3NTYiIHdpZHRoPSI1NzUuMjY1MjExNDgxNTk4NyIgaGVpZ2h0PSI3MDUuNDM1NjgwODY1ODMyNiI+CiAgPCEtLSBzdmctc291cmNlOmV4Y2FsaWRyYXcgLS0+CiAgCiAgPGRlZnM+CiAgICA8c3R5bGUgY2xhc3M9InN0eWxlLWZvbnRzIj4KICAgICAgQGZvbnQtZmFjZSB7CiAgICAgICAgZm9udC1mYW1pbHk6ICJWaXJnaWwiOwogICAgICAgIHNyYzogdXJsKCJodHRwczovL2V4Y2FsaWRyYXcuY29tL1ZpcmdpbC53b2ZmMiIpOwogICAgICB9CiAgICAgIEBmb250LWZhY2UgewogICAgICAgIGZvbnQtZmFtaWx5OiAiQ2FzY2FkaWEiOwogICAgICAgIHNyYzogdXJsKCJodHRwczovL2V4Y2FsaWRyYXcuY29tL0Nhc2NhZGlhLndvZmYyIik7CiAgICAgIH0KICAgIDwvc3R5bGU+CiAgICAKICA8L2RlZnM+CiAgPHJlY3QgeD0iMCIgeT0iMCIgd2lkdGg9IjE5MS43NTUwNzA0OTM4NjYyNCIgaGVpZ2h0PSIyMzUuMTQ1MjI2OTU1Mjc3NTYiIGZpbGw9IiNmZmZmZmYiPjwvcmVjdD48ZyBzdHJva2UtbGluZWNhcD0icm91bmQiIHRyYW5zZm9ybT0idHJhbnNsYXRlKDEwIDEwKSByb3RhdGUoMCA4NS44Nzc1MzUyNDY5MzMxMiAxMDcuNTcyNjEzNDc3NjM4NzgpIj48cGF0aCBkPSJNMCAwIEM0MS42MSAwLCA4My4yMiAwLCAxNzEuNzYgMCBNMCAwIEM0MC40OSAwLCA4MC45OSAwLCAxNzEuNzYgMCBNMTcxLjc2IDAgQzE3MS43NiA2Ni42NiwgMTcxLjc2IDEzMy4zMSwgMTcxLjc2IDIxNS4xNSBNMTcxLjc2IDAgQzE3MS43NiA2Mi4zOCwgMTcxLjc2IDEyNC43NiwgMTcxLjc2IDIxNS4xNSBNMTcxLjc2IDIxNS4xNSBDMTE5LjM2IDIxNS4xNSwgNjYuOTYgMjE1LjE1LCAwIDIxNS4xNSBNMTcxLjc2IDIxNS4xNSBDMTI4LjQ4IDIxNS4xNSwgODUuMiAyMTUuMTUsIDAgMjE1LjE1IE0wIDIxNS4xNSBDMCAxNDEuNTYsIDAgNjcuOTcsIDAgMCBNMCAyMTUuMTUgQzAgMTU4LjA2LCAwIDEwMC45NywgMCAwIiBzdHJva2U9IiMxZTFlMWUiIHN0cm9rZS13aWR0aD0iMiIgZmlsbD0ibm9uZSI+PC9wYXRoPjwvZz48ZyB0cmFuc2Zvcm09InRyYW5zbGF0ZSg1Ny4yMTA2NjExNjUyNzAwNCAxNy40NDg1Mzc5NDkyNTAyMzcpIHJvdGF0ZSgwIDM0Ljg4OTAxMjQyMzQyODU0IDE4Ljc4MTc4NTYyNjQ3ODQ2NykiPjx0ZXh0IHg9IjAiIHk9IjAiIGZvbnQtZmFtaWx5PSJWaXJnaWwsIFNlZ29lIFVJIEVtb2ppIiBmb250LXNpemU9IjMwLjA1MDg1NzAwMjM2NTU2OHB4IiBmaWxsPSIjMWUxZTFlIiB0ZXh0LWFuY2hvcj0ic3RhcnQiIHN0eWxlPSJ3aGl0ZS1zcGFjZTogcHJlOyIgZGlyZWN0aW9uPSJsdHIiIGRvbWluYW50LWJhc2VsaW5lPSJ0ZXh0LWJlZm9yZS1lZGdlIj5Cb29rPC90ZXh0PjwvZz48ZyB0cmFuc2Zvcm09InRyYW5zbGF0ZSgyMi43MzUwNTM2MTI3MDcxMzQgNzYuNjEyOTk0NTM3NjQxMzgpIHJvdGF0ZSgwIDQwLjUwOTk2Mzk4OTI1NzgxIDYyLjUpIj48dGV4dCB4PSIwIiB5PSIwIiBmb250LWZhbWlseT0iVmlyZ2lsLCBTZWdvZSBVSSBFbW9qaSIgZm9udC1zaXplPSIyMHB4IiBmaWxsPSIjMWUxZTFlIiB0ZXh0LWFuY2hvcj0ic3RhcnQiIHN0eWxlPSJ3aGl0ZS1zcGFjZTogcHJlOyIgZGlyZWN0aW9uPSJsdHIiIGRvbWluYW50LWJhc2VsaW5lPSJ0ZXh0LWJlZm9yZS1lZGdlIj5jcmVhdGU8L3RleHQ+PHRleHQgeD0iMCIgeT0iMjUiIGZvbnQtZmFtaWx5PSJWaXJnaWwsIFNlZ29lIFVJIEVtb2ppIiBmb250LXNpemU9IjIwcHgiIGZpbGw9IiMxZTFlMWUiIHRleHQtYW5jaG9yPSJzdGFydCIgc3R5bGU9IndoaXRlLXNwYWNlOiBwcmU7IiBkaXJlY3Rpb249Imx0ciIgZG9taW5hbnQtYmFzZWxpbmU9InRleHQtYmVmb3JlLWVkZ2UiPnVwZGF0ZTwvdGV4dD48dGV4dCB4PSIwIiB5PSI1MCIgZm9udC1mYW1pbHk9IlZpcmdpbCwgU2Vnb2UgVUkgRW1vamkiIGZvbnQtc2l6ZT0iMjBweCIgZmlsbD0iIzFlMWUxZSIgdGV4dC1hbmNob3I9InN0YXJ0IiBzdHlsZT0id2hpdGUtc3BhY2U6IHByZTsiIGRpcmVjdGlvbj0ibHRyIiBkb21pbmFudC1iYXNlbGluZT0idGV4dC1iZWZvcmUtZWRnZSI+ZGVsZXRlPC90ZXh0Pjx0ZXh0IHg9IjAiIHk9Ijc1IiBmb250LWZhbWlseT0iVmlyZ2lsLCBTZWdvZSBVSSBFbW9qaSIgZm9udC1zaXplPSIyMHB4IiBmaWxsPSIjMWUxZTFlIiB0ZXh0LWFuY2hvcj0ic3RhcnQiIHN0eWxlPSJ3aGl0ZS1zcGFjZTogcHJlOyIgZGlyZWN0aW9uPSJsdHIiIGRvbWluYW50LWJhc2VsaW5lPSJ0ZXh0LWJlZm9yZS1lZGdlIj5maW5kQnlJZDwvdGV4dD48dGV4dCB4PSIwIiB5PSIxMDAiIGZvbnQtZmFtaWx5PSJWaXJnaWwsIFNlZ29lIFVJIEVtb2ppIiBmb250LXNpemU9IjIwcHgiIGZpbGw9IiMxZTFlMWUiIHRleHQtYW5jaG9yPSJzdGFydCIgc3R5bGU9IndoaXRlLXNwYWNlOiBwcmU7IiBkaXJlY3Rpb249Imx0ciIgZG9taW5hbnQtYmFzZWxpbmU9InRleHQtYmVmb3JlLWVkZ2UiPmFsbDwvdGV4dD48L2c+PGcgc3Ryb2tlLWxpbmVjYXA9InJvdW5kIj48ZyB0cmFuc2Zvcm09InRyYW5zbGF0ZSgxMC44MDgzODI2MTc0Njc0ODcgNjEuMzgyNzE3NDY4NTg3MTQ2KSByb3RhdGUoMCA4NS4yNDUzMTg4Njg2NjgxNiAtMC4xOTAyOTE4MTQ2NTcyMjkpIj48cGF0aCBkPSJNMCAwIEMyOC40MiAtMC4wNiwgMTQyLjA4IC0wLjMyLCAxNzAuNDkgLTAuMzggTTAgMCBDMjguNDIgLTAuMDYsIDE0Mi4wOCAtMC4zMiwgMTcwLjQ5IC0wLjM4IiBzdHJva2U9IiMxZTFlMWUiIHN0cm9rZS13aWR0aD0iMiIgZmlsbD0ibm9uZSI+PC9wYXRoPjwvZz48L2c+PG1hc2s+PC9tYXNrPjwvc3ZnPg==\" /></p>\n<p>E este é o código:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-javascript\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">import</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> { AsyncDatabase } </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">from</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">promised-sqlite3</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> db </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> await</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> AsyncDatabase.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">open</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  // caminho para o arquivo do banco de dados SQLite</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  process.env.</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">DATABASE_URL</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">export</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> class</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\"> ActiveRecord</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  constructor</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">({ </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">database</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> db, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">tableName</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> }) {</span></span>\n<span class=\"line\"><span style=\"color:#BD93F9;--shiki-dark:#BD93F9;font-style:italic;--shiki-dark-font-style:italic\">    this</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">.database </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> database</span></span>\n<span class=\"line\"><span style=\"color:#BD93F9;--shiki-dark:#BD93F9;font-style:italic;--shiki-dark-font-style:italic\">    this</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">.tableName </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> tableName</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">  all</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">columns</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">*</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> cols </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> Array.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">isArray</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(columns) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">?</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> columns.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">join</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">, </span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> columns</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    return</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9;font-style:italic;--shiki-dark-font-style:italic\"> this</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">.database.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">all</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">`SELECT </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">${</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">cols</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">}</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> FROM </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">${</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9;font-style:italic;--shiki-dark-font-style:italic\">this</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">.tableName</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">}</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">`</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  async</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> findById</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">id</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">columns</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">*</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> cols </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> Array.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">isArray</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(columns) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">?</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> columns.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">join</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">, </span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> columns</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> statement </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> await</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9;font-style:italic;--shiki-dark-font-style:italic\"> this</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">.database.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">prepare</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span></span>\n<span class=\"line\"><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">      `SELECT </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">${</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">cols</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">}</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> FROM </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">${</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9;font-style:italic;--shiki-dark-font-style:italic\">this</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">.tableName</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">}</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> WHERE id = $id`</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, { $id</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> id },</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    )</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> statement.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">get</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">()</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  async</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> create</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">data</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> columns </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> Object.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">keys</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(data)</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> values </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> Object.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">values</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(data)</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> statement </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> await</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9;font-style:italic;--shiki-dark-font-style:italic\"> this</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">.database.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">prepare</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span></span>\n<span class=\"line\"><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">      `INSERT INTO </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">${</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9;font-style:italic;--shiki-dark-font-style:italic\">this</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">.tableName</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">}</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> (</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">${</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">columns.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">join</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">, </span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">}</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">) VALUES (</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">${</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">columns.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">map</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">() </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">?</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">).</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">join</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">, </span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">}</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">)`</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      values,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    )</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> statement.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">run</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">()</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  async</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> update</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">id</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">data</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> columns </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> Object.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">keys</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(data)</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> values </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> Object.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">values</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(data)</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> statement </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> await</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9;font-style:italic;--shiki-dark-font-style:italic\"> this</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">.database.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">prepare</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span></span>\n<span class=\"line\"><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">      `UPDATE </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">${</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9;font-style:italic;--shiki-dark-font-style:italic\">this</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">.tableName</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">}</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> SET </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">${</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">columns.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">map</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">column</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =></span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> `</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">${</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">column</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">}</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> = ?`</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">).</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">join</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">, </span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">}</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> WHERE id = $id`</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      [</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">...</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">values, id],</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    )</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> statement.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">run</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">()</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  async</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> delete</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">id</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> statement </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> await</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9;font-style:italic;--shiki-dark-font-style:italic\"> this</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">.database.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">prepare</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span></span>\n<span class=\"line\"><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">      `DELETE FROM </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">${</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9;font-style:italic;--shiki-dark-font-style:italic\">this</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">.tableName</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">}</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> WHERE id = $id`</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      { $id</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> id },</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    )</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> statement.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">run</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">()</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">export</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> class</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\"> Book</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> extends</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> ActiveRecord</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  constructor</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">() {</span></span>\n<span class=\"line\"><span style=\"color:#BD93F9;--shiki-dark:#BD93F9;font-style:italic;--shiki-dark-font-style:italic\">    super</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">({ tableName</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">books</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> })</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<Alert title=\"Atenção\" mb=\"md\" color=\"yellow\">\nA implementação acima é apenas um exemplo didático. Não há preocupações com segurança ou validação de dados antes de inseri-los ou atualizar os dados no banco de dados.\n</Alert>\n<p>Note que todo o SQL necessário para manipular os dados no nosso banco SQLite está encapsulado na classe <code>ActiveRecord</code>. Além disso, a classe <code>Book</code> herda todos os métodos da classe <code>ActiveRecord</code> e, portanto, não é necessário escrever o mesmo código para cada tabela do banco de dados. Desse modo, é possível criar várias entidades distintas no nosso sistema, como <code>Author</code>, <code>Publisher</code>, <code>Category</code>, <code>BookCategory</code>, <code>BookAuthor</code>, <code>BookPublisher</code>, etc. Todas elas herdam os métodos da classe <code>ActiveRecord</code> e, portanto, não é necessário escrever o mesmo código para cada tabela do banco de dados.</p>\n<p>Mais que isso, podemos reimplementar os métodos da classe pai na classe filha, caso haja algum requisito especial para alguma entidade, como transformar o <code>delete</code> em um <em>soft delete</em>. Por exemplo:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-javascript\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">export</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> class</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\"> Book</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> extends</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> ActiveRecord</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  constructor</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">() {</span></span>\n<span class=\"line\"><span style=\"color:#BD93F9;--shiki-dark:#BD93F9;font-style:italic;--shiki-dark-font-style:italic\">    super</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">({ tableName</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">books</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> })</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  async</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> delete</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">id</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> statement </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> await</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9;font-style:italic;--shiki-dark-font-style:italic\"> this</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">.database.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">prepare</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">      // Não se esqueça de adicionar a coluna `deleted` na tabela `books`</span></span>\n<span class=\"line\"><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">      `UPDATE </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">${</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9;font-style:italic;--shiki-dark-font-style:italic\">this</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">.tableName</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">}</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> SET deleted = true WHERE id = $id`</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      { $id</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> id },</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    )</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> statement.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">run</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">()</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<p>Este padrão pode resolver o nosso caso de uso, porém, como próprio Martin Fowler alerta, este padrão pode não ser o mais adequado para se aplicar em uma entidade que precisa se relacionar com um repositório (ou repositórios) de dados mais complexos (apesar de que Ruby on Rails <a href=\"https://guides.rubyonrails.org/active_record_basics.html\">utiliza este padrão</a> extensamente).</p>\n<p>Se tiver alguma dúvida, comentário ou sugestão, deixe um comentário abaixo ou entre em contato comigo pelo <a href=\"https://twitter.com/douglasdemoura\">Twitter</a>.</p>\n<h2>Referências</h2>\n<ul>\n<li><a href=\"https://engsoftmoderna.info/cap6.html#padr%C3%B5es-de-projeto\">Padrões de Projeto</a></li>\n<li><a href=\"https://dl.acm.org/doi/book/10.5555/186897\">Design patterns: elements of reusable object-oriented software</a></li>\n<li><a href=\"https://martinfowler.com/books/eaa.html\">Patterns of Enterprise Application Architecture, by Martin Fowler</a></li>\n</ul>\n",
    "tags": [
      "Engenharia de Software",
      "Padrões de Projeto"
    ],
    "translates": null
  },
  "introducao-a-algoritmos": {
    "id": "q56goy3mqfdb3hu",
    "title": "Introdução à algoritmos",
    "slug": "introducao-a-algoritmos",
    "locale": "pt-BR",
    "created": "2024-01-25T16:53:40.103Z",
    "updated": "2024-01-25T17:00:20.007Z",
    "content": "<h2>O que é um algoritmo?</h2>\n<p>Um <em>algoritmo</em> é uma especificação precisa e sem ambiguidades de uma sequência de passos computacionais que podem ser realizados mecanicamente<sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1\">[1]</a></sup>. A partir disso, podemos pensar em uma função que recebe um valor ou um conjunto de valores de <strong>entrada</strong> e retorna um valor ou conjunto de valores em sua <strong>saída</strong>.</p>\n<p>Um algoritmo pode ser <strong>correto</strong> e <strong>incorreto</strong>. Ele é correto quando, dados seus parâmetros de entrada, sua saída for correta e, portanto, <strong>resolve</strong> o problema computacional para qual foi desenvolvido. Um algoritmo incorreto, por sua vez, pode parar com uma saída incorreta ou mesmo não parar para algumas instâncias de entrada. Ainda assim, alguns algoritmos incorretos ainda podem ter aplicações úteis.</p>\n<p>Podem haver diferentes algoritmos que resolvem um mesmo problema, alguns mais eficientes, isto é, mais velozes do que outros. Mas, nem todo problema possui uma solução eficiente. Tais problemas são conhecidos como <abbr title=\"Tempo polinomial não-determinístico\">NP</abbr>-completos.</p>\n<p>Problemas <abbr title=\"Tempo polinomial não-determinístico\">NP</abbr>-completos são muito interessantes:  mesmo que nenhum algoritmo eficiente tenha sido encontrado para esta classe de problemas, não se provou que que não é possível encontrar um algoritmo eficiente (da classe P, que pode ser resolvido em tempo polinomial) para tal problema. Além disso, se houver um algoritmo eficiente para resolver um problema NP-completo, significa que existe um algoritmo eficiente para todos os problemas <abbr title=\"tempo polinomial não-determinístico\">NP</abbr>-completos.</p>\n<Alert title=\"P vs. NP\">\nP vs. NP é uma questão fundamental em ciência da computação, especificamente no campo da teoria da complexidade computacional. Ela diz respeito à relação entre duas classes de problemas. A classe P consiste em problemas de decisão (problemas com resposta sim ou não) que podem ser resolvidos rapidamente (em tempo polinomial) por um computador determinístico, o que significa que o tempo necessário para resolver o problema cresce a uma taxa gerenciável à medida que o tamanho da entrada aumenta. Por outro lado, a classe NP consiste em problemas de decisão para os quais, se uma solução for fornecida, ela pode ser verificada rapidamente (também em tempo polinomial) por um computador determinístico.\n<p>A questão crucial, “P é igual a NP?”, pergunta se todo problema cuja solução pode ser verificada rapidamente (NP) também pode ser resolvido rapidamente (P). Isso é profundo porque, se P fosse igual a NP, significaria que todos os problemas que podemos verificar rapidamente também podem ser resolvidos rapidamente. Isso tem implicações vastas para vários campos, incluindo criptografia, otimização e design de algoritmos.\n</Alert></p>\n<h2>Complexidade de algoritmos</h2>\n<p>Quando falamos de algoritmos, na maior parte do tempo estamos interessados na taxa de crescimento de tempo e espaço requeridos para resolver instâncias cada vez maiores de determinados problemas. Se estamos interessados no tempo que determinado algoritmo leva para executar sua função, estamos interessados um sua <em>complexidade temporal</em>. E o comportamento do limite da complexidade temporal do nosso algoritmo em relação ao aumento das instâncias do problema é chamado de <em>complexidade assintótica temporal</em>. E é esse complexidade assintótica que que determina o tamanho do problema que pode ser resolvido por algoritmos<sup class=\"footnote-ref\"><a href=\"#fn2\" id=\"fnref2\">[2]</a></sup>.</p>\n<p>Se um algoritmo leva um tempo $cn^2$ para uma constante $c$ para processar um entrada de tamanho $n$, dizemos que a complexidade do algoritmo é da <em>ordem de $n^2$</em>, ou, em notação Bachmann–Landau (também chamada de notação assintótica e notação <strong>Big O</strong>), o algoritmo tem a complexidade $O(n^2)$.</p>\n<p>Para termos uma melhor ideia do que isso significa em relação ao tempo de execução do nosso algoritmo, considere que uma unidade de tempo no computador em que executamos o nosso algoritmo é de 1 milissegundo. Agora, queremos saber qual o tamanho máximo da entrada que o nosso algoritmo pode processar dentro de um determinado limite de tempo (um segundo, um hora e um dia). Observe, na tabela abaixo, o quanto a complexidade do algoritmo interfere no tamanho máximo da entrada que ele pode tratar, dado o limite de tempo:</p>\n<table>\n<thead>\n<tr>\n<th>Complexidade de tempo</th>\n<th>1 segundo</th>\n<th>1 minuto</th>\n<th>1 hora</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>$n$</td>\n<td>1000</td>\n<td>60000</td>\n<td>360000</td>\n</tr>\n<tr>\n<td>$n \\log_2 n$</td>\n<td>140</td>\n<td>4895</td>\n<td>204095</td>\n</tr>\n<tr>\n<td>$n^2$</td>\n<td>31</td>\n<td>244</td>\n<td>1897</td>\n</tr>\n<tr>\n<td>$n^3$</td>\n<td>10</td>\n<td>39</td>\n<td>153</td>\n</tr>\n<tr>\n<td>$2^n$</td>\n<td>9</td>\n<td>15</td>\n<td>21</td>\n</tr>\n</tbody>\n</table>\n<p>Ainda que possamos construir computadores mais rápidos, o aumento na velocidade de execução dos algoritmos menos eficientes não seria tão significativo, de modo que que devemos buscar sempre o algoritmo de melhor eficiência para tratar determinado problema.</p>\n<hr class=\"footnotes-sep\">\n<section class=\"footnotes\">\n<ol class=\"footnotes-list\">\n<li id=\"fn1\" class=\"footnote-item\"><p>AHO, Alfred V.; ULLMAN, Jeffrey D. <em>Foundations of Computer Science</em>. Stanford, 1994. <a href=\"#fnref1\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn2\" class=\"footnote-item\"><p>AHO, Alfred V.; HOPCROFT, John E.; ULLMAN, Jeffrey D. <em>The Design and Analysis of Computer Algorithms</em>. Addison-Wesley, 1974. <a href=\"#fnref2\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n</ol>\n</section>\n",
    "tags": [
      "Iniciantes",
      "Algoritmos",
      "Ciência da Computação"
    ],
    "translates": "fk4euqpea154kb9"
  },
  "dominando-o-algoritmo-de-ordenacao-por-insercao-um-guia-detalhado": {
    "id": "y9hhvn3ra53p0qj",
    "title": "Dominando o algoritmo de ordenação por inserção: um guia detalhado",
    "slug": "dominando-o-algoritmo-de-ordenacao-por-insercao-um-guia-detalhado",
    "locale": "pt-BR",
    "created": "2024-01-26T23:00:25.261Z",
    "updated": "2024-01-26T23:07:02.602Z",
    "content": "<p>Ordenação é uma operação fundamental no campo da ciência da computação e, por conta disso, existem vários algoritmos disponíveis para resolver este problema, cada um com sua aplicação determinada pela quantidade de itens a ordenar, o grau de ordenação já presente, a arquitetura do computador onde o algoritmo será executado, tipo de dispositivo de armazenamento, entre outros fatores. Neste artigo, exploraremos o algoritmo de ordenação por inserção, entendendo suas nuances, forças e limitações.</p>\n<h2>O que é ordenação por inserção?</h2>\n<p>Ordenação por inserção é um algoritmo baseado em comparação que constrói a sua saída um elemento por vez. Ele funciona de maneira análoga ao método que utilizamos para ordenar as cartas de um baralho: pegamos uma carta de cada vez, comparamos com os anteriores que já estão na nossa mão, colocamos a carta na posição correta e, repetimos esta ação até o fim do nosso baralho.</p>\n<p>É um algoritmo adaptativo, o que significa que é eficiente para pequenos conjuntos de dados, assim como outros algoritmos de complexidade quadrática ($O(n^2)$). É simples de implementar, requer um valor constante de memória, pois as alterações na lista são feitas na própria lista (sem a necessidade de criar uma nova lista, o que dobraria o uso da memória) e é capaz de ordenar a lista enquanto a recebe.</p>\n<h2>Como a ordenação por inserção funciona?</h2>\n<ol>\n<li>\n<p><strong>Inicialização</strong>: Assumimos que o primeiro elemento da nossa lista já está ordenado. Prosseguimos para o próximo elemento, consideramos ele como nossa chave e o inserimos na posição correta na parte ordenada da lista;</p>\n</li>\n<li>\n<p><strong>Iteração</strong>: Para cada item da lista (começando do segundo elemento), armazenamos o item atual (chave) e sua posição. Comparamos então a chave com os elementos na parte ordenada da lista (elementos antes da chave);</p>\n</li>\n<li>\n<p><strong>Inserção</strong>: Se o elemento atual na parte ordenada for maior que a chave, movemos esse elemento uma posição acima. Isso cria espaço para a nova chave ser inserida;</p>\n</li>\n<li>\n<p><strong>Reposicionamento da Chave</strong>: Continuamos movendo elementos uma posição acima até encontrarmos a posição correta para a chave. Esta posição é encontrada quando batemos em um elemento menor ou igual à chave ou alcançamos o início da lista.</p>\n</li>\n<li>\n<p><strong>Repetir</strong>: O processo é repetido para todos os elementos da lista.</p>\n</li>\n</ol>\n<h2>Implementação em JavaScript</h2>\n<p>Para melhor entendermos o algoritmo, vamos implementá-lo em JavaScript:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-js\"><span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">/**</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">* Ordena um array de números usando o algoritmo de ordenação por inserção.</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">* </span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">* </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">@param</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">  {number[]}</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">  numbers</span><span style=\"color:#6272A4;--shiki-dark:#6272A4\"> - A lista de números que deve ser ordenada.</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">* </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">@returns</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">  {number[]}</span><span style=\"color:#6272A4;--shiki-dark:#6272A4\"> - A lista de números ordenada.</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">*/</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">function</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> insertionSort</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">numbers</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  for</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">let</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> i </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 1</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">; i </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">&#x3C;</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> numbers.length; i</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">++</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> key </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> numbers[i]</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    let</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> j </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> i </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">-</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 1</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    </span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    while</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (j </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">>=</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 0</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> &#x26;&#x26;</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> numbers[j] </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> key) {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      numbers[j  </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">+</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">  1</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">] </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  numbers[j]</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      j</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">--</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    numbers[j  </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">+</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">  1</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">] </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> key</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<h2>Análise da complexidade</h2>\n<h3>Complexidade de tempo</h3>\n<ul>\n<li><strong>Melhor caso (Array já está ordenado)</strong>:  $O(n)$. Isso porque o laço interno (<code>while</code>) não é executado nenhuma vez;</li>\n<li><strong>Caso médio e pior caso (Array está ordenado de maneira reversa)</strong>: $O(n^2)$. No pior caso, cada iteração fará com que um elemento seja movido. Isso faz este algoritmo ser ineficiente para conjuntos grandes de dados.</li>\n</ul>\n<h3>Complexidade de espaço</h3>\n<ul>\n<li><strong>Complexidade de espaço</strong>: $O(1)$. ordenação por inserção é um algoritmo <em>in-place</em>; requer um valor constante de espaço na memória.</li>\n</ul>\n",
    "tags": [
      "Algoritmos",
      "Ciência da Computação",
      "tutorial"
    ],
    "translates": "0mdfakkgsmugaex"
  },
  "how-to-extend-html-elements-with-react": {
    "id": "7p8vdcau7gg894b",
    "title": " How to extend HTML elements with React",
    "slug": "how-to-extend-html-elements-with-react",
    "locale": "en-US",
    "created": "2022-09-26T00:00:00.000Z",
    "updated": "2022-12-29T14:51:44.872Z",
    "content": "<p>Most of the work needed to create custom HTML elements that fit the design system of your company resides styling and adding your own props. So, let’s say you have to create a custom <code>Button</code>, that should receive a <code>children</code> prop and should have DOM access via <a href=\"https://reactjs.org/docs/refs-and-the-dom.html\">ref</a>. That’s how you can do it:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-typescript\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">import</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> { forwardRef } </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">from</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">react</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">type</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> ButtonProps</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  loading</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">?:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> boolean</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">; </span><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// custom prop</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">} </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">&#x26;</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> React</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">.</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">PropsWithChildren</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">&#x3C;</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">React</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">.</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">ComponentPropsWithRef</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">&#x3C;</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">button</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">>>;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> Button</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> React</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">.</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">FC</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">&#x3C;</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">ButtonProps</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">> </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> forwardRef</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  ({ </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">loading</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">children</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">...</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">props</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> }, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">ref</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">      &#x3C;</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">button data</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">-</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">loading</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">{loading} {</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">...</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">props</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">} ref</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">{ref}</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">></span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">        {</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">children</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">      &#x3C;/</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">button</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">></span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    );</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">export</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> default</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> Button;</span></span></code></pre>\n<p>We use the <a href=\"https://github.com/DefinitelyTyped/DefinitelyTyped/blob/d076add9f29db350a19bd94c37b197729cc02f87/types/react/index.d.ts#L822\"><code>PropsWithChildren</code></a> generic interface that gives the <code>children</code> prop and receive <code>React.ComponentPropsWithRef&lt;'button'&gt;</code>, that passes all props that a <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button\"><code>button</code></a> can receive.</p>\n<p>Of course, you can change the interface <a href=\"https://github.com/DefinitelyTyped/DefinitelyTyped/blob/d076add9f29db350a19bd94c37b197729cc02f87/types/react/index.d.ts#L834\"><code>ComponentPropsWithRef</code></a> for <a href=\"https://github.com/DefinitelyTyped/DefinitelyTyped/blob/d076add9f29db350a19bd94c37b197729cc02f87/types/react/index.d.ts#L838\"><code>ComponentPropsWithoutRef</code></a> and drop the <a href=\"https://reactjs.org/docs/forwarding-refs.html\"><code>forwardRef</code></a> function on the definition of your component (although, I do not recomend it - <em>refs</em> may be useful later on your application):</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-typescript\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">type</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> ButtonProps</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  loading</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">?:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> boolean</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">; </span><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// custom prop</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">} </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">&#x26;</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> React</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">.</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">PropsWithChildren</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">&#x3C;</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">React</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">.</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">ComponentPropsWithoutRef</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">&#x3C;</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">button</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">>>;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> Button</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> React</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">.</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">FC</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">&#x3C;</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">ButtonProps</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">> </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> ({ </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">loading</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">children</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">...</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">props</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> }) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    &#x3C;</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">button data</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">-</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">loading</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">{loading} {</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">...</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">props</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">} ref</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">{ref}</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">></span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      {</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">children</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    &#x3C;/</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">button</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">></span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  );</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">export</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> default</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> Button;</span></span></code></pre>\n<p>You may, even, drop the interface <code>PropsWithChildren</code>, but on doing that, you’d have to implement the <code>children</code> prop by yourself:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-typescript\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">type</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> ButtonProps</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  loading</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">?:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> boolean</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">; </span><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// custom prop</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  children</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">?:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> React</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">.</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">ReactNode</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">} </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">&#x26;</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> React</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">.</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">ComponentPropsWithoutRef</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">&#x3C;</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">button</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">>;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> Button</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> React</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">.</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">FC</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">&#x3C;</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">ButtonProps</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">> </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> ({ </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">loading</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">children</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">...</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">props</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> }) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    &#x3C;</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">button data</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">-</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">loading</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">{loading} {</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">...</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">props</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">} ref</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">{ref}</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">></span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      {</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">children</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    &#x3C;/</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">button</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">></span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  );</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">export</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> default</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> Button;</span></span></code></pre>\n<p>Want more? Check the live implementation on <a href=\"https://stackblitz.com/edit/vitejs-vite-warc15?file=src%2Fcomponents%2Fbutton.tsx&amp;terminal=dev\">StackBlitz</a></p>\n",
    "tags": [
      "javascript",
      "typescript",
      "react"
    ],
    "translates": null
  },
  "validate-your-environment-variables-with-zod": {
    "id": "j58woxctz6b7mpo",
    "title": "Validate your environment variables with Zod",
    "slug": "validate-your-environment-variables-with-zod",
    "locale": "en-US",
    "created": "2024-08-15T14:14:26.654Z",
    "updated": "2024-08-15T14:17:19.617Z",
    "content": "<p><a href=\"https://github.com/colinhacks/zod\">Zod</a> is the most famous validation library in the TypeScript ecosystem. With Zod, you create a <em>schema</em> and validate your data according to the schema. Observe the schema below:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-ts\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">import</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> { z } </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">from</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">zod</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> UserSchema </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> z.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">object</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">({</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  name</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> z.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">string</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">().</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">min</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">1</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">),</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  age</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> z.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">number</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">({ coerce</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> }).</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">min</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">18</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">),</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  email</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> z.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">string</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">().</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">email</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(),</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">})</span></span></code></pre>\n<p>This schema can be used to validate an object as follows:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-ts\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> data </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  name</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">John Doe</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  age</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 18</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  email</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">john@example.com</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// If there is a validation error, it throws an error</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> validatedData </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> UserSchema.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">parse</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(data)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// If there is a validation error, it returns an error object for you to handle later</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> safeValidatedData </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> UserSchema.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">safeParse</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(data)</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// => { success: false; error: ZodError }</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// => { success: true; data: 'billie' }</span></span></code></pre>\n<p>Zod is capable of performing various types of validations on your data, so be sure to read the <a href=\"https://github.com/colinhacks/zod\">documentation</a> for more details.</p>\n<h2>Validating Environment Variables</h2>\n<p>We can use Zod to validate the values present in <a href=\"https://nodejs.org/api/process.html#processenv\"><code>process.env</code></a> and even process them before using the environment variables in our application. Usually, I like to create an <code>environment.ts</code> file, as in the example below:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-ts\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">import</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> { z } </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">from</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">zod</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> environmentSchema </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> z.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">object</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">({</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  // Define the possible values for NODE_ENV, always leaving a default value:</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  NODE_ENV</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> z.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">enum</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">([</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">test</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">development</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">production</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">]).</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">default</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">production</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">),</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  // Environment variables are always defined as strings. Here, convert the string to a number and set a default value:</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  PORT</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> z.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">number</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">({ coerce</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> }).</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">default</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">3000</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">),</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">})</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">export</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> env </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> environmentSchema.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">parse</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(process.env)</span></span></code></pre>\n<p>Then, just import the variable and use it throughout my application:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-ts\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">import</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> Fastify </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">from</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">fastify</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">import</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> { env } </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">from</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">./environment.js</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> app </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> Fastify</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">({ logger</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> })</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">app.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">listen</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">({ port</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> env.</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">PORT</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> }, (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">err</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (err) {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    app.log.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">error</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    process.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">exit</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">1</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">})</span></span></code></pre>\n",
    "tags": [
      "Zod",
      "TypeScript",
      "Tips"
    ],
    "translates": "uybmrtdz9y7iuzk"
  },
  "introduction-to-graphql": {
    "id": "i9fkingsi8pcbqk",
    "title": " Introduction to GraphQL",
    "slug": "introduction-to-graphql",
    "locale": "en-US",
    "created": "2022-11-17T15:00:00.000Z",
    "updated": "2022-12-29T14:51:23.352Z",
    "content": "<p><a href=\"https://graphql.org/\">GraphQL</a> is a query language for APIs and a runtime for fulfilling those queries with your existing data, developed by Facebook in 2012 and open sourced in 2015. The goal was to create a query language that allowed fine-grained control over the needed data a client can request to an API server.</p>\n<p>A GraphQL service is created by defining <strong>types</strong> and <strong>fields</strong> to those types in a <strong>schema</strong>. A commom way to defining the schema of your GraphQL service is through the GraphQL Schema Definition Language (SDL).</p>\n<p>In this article, I’ll show how to create a GraphQL schema compliant with the <a href=\"https://relay.dev/docs/guides/graphql-server-specification/\">Relay GraphQL Server</a> specification.</p>\n<h2>Defining your schema in GraphQL</h2>\n<p>A GraphQL schema should informe the users about all the types and objects that can be queried and mutated on the graph. GraphQL even provides a feature to query metadata about those types and objects, which can be used to document the GraphQL.</p>\n<p>Let’s define a simple schema using GraphQL SDL (Schema Definition Language):</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-graphql\"><span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">\"\"\"</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">Serialize and validate JavaScript dates.</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">\"\"\"</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">scalar</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> Date</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">\"\"\"</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">Node interface</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">\"\"\"</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">interface</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Node</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  id</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> ID</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">!</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">\"\"\"</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">Priority level</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">\"\"\"</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">enum</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Priority</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">  LOW</span></span>\n<span class=\"line\"><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">  MEDIUM</span></span>\n<span class=\"line\"><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">  HIGH</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">\"\"\"</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">A task that the user should complete</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">\"\"\"</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">type</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Task</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> implements</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Node</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  \"Task ID\"</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  id ID!</span><span style=\"color:#6272A4;--shiki-dark:#6272A4\"> # ID is a GraphQL special type for IDs.</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  \"Task title\"</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  title String!</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  \"Task creation date\"</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  created</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Date</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">!</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  \"Task modification date\"</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  modified</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Date</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  priority</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Priority</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">!</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">\"\"\"</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">Needed input data to add a new task.</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">\"\"\"</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">input</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> AddTaskInput</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  title</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> String</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">!</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  priority</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Priority</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">type</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Query</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  \"Get a task by ID\"</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  task(</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">id</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> ID</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">!</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Task</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">type</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Mutation</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  addTask(</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">input</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> AddTaskInput</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Task</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<ol>\n<li>First we define a <a href=\"https://graphql.org/learn/schema/#scalar-types\">custom Date scalar</a> that should validate and serialize Date objects;</li>\n<li>We define a <code>Node</code> interface. I’ll explain more on why I’m defining this interface the next topic;</li>\n<li>We define an <a href=\"https://graphql.org/learn/schema/#enumeration-types\">enumeration type</a> to define the valid priority status of a task;</li>\n<li>We create our <code>Task</code> type with all the field it should contain. Notice that all field with the exclamation mark at the end are obligatory;</li>\n<li>We add an input called <code>AddTaskInput</code> that defines the obligatory data to add a new <code>Task</code>;</li>\n<li>In the Query type (which is a GraphQL reserved type), we define what queries are available from our root object;</li>\n<li>In the Mutation type (which is a GraphQL reserved type), we define which operations to alter our data are available. Such operations are called <a href=\"https://graphql.org/learn/queries/#mutations\">mutations</a>.</li>\n</ol>\n<p>Notice that, in GraphQL, comments between quotes serve as documentation (it’ll be parsed and displayed in your GraphiQL web documentation interface), while the comments that start with <code>#</code> are ignored.</p>\n<h2>Querying your data in GraphQL</h2>\n<p>Tipically, you’d query a GraphQL server like this:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-graphql\"><span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">  task</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">id</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">2</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">    title</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<p>Which would return the following, in JSON format:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-json\"><span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">  \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">data</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">task</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">      \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">title</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Write GraphQL tutorial</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    }</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<p>In the query above, we started with a special “root” object, from where we select the <code>task</code> field with the id equals to <code>2</code> Then, we select the <code>title</code> field from the <code>task</code> object. But, if no task has an id equals to 2? In this case, our response would be:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-json\"><span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">  \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">data</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">task</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> null</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<p>Or, in case of a error, we would receive this response:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-json\"><span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">  \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">data</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">task</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> null</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  },</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">  \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">errors</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> [</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    {</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">      \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">message</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Internal server error.</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    }</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  ]</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<p>You may want rename a field before using your data. Well, you can create your <a href=\"https://graphql.org/learn/queries/#aliases\">aliases</a> just like this:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-graphql\"><span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">  todo</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> task</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">id</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">2</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">    name</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> title</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<p>And that would be the return:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-json\"><span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">  \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">data</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">todo</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">      \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">name</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Write GraphQL tutorial</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    }</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<p>GraphQL also provides the feature of create <a href=\"https://graphql.org/learn/queries/#fragments\">query fragments</a> and setting up  <a href=\"https://graphql.org/learn/queries/#directives\">directives</a> to query your data. I’ll need to add more complexity to our current schema in order to explain that, so, for while, let’s move to the next topic.</p>\n<h2>The Relay GraphQL Server specification</h2>\n<p>Despite you may not want to use <a href=\"https://relay.dev/\">Relay</a> (or even React) to consume your GraphQL data, their specification is very useful and provides a common ground of what developers should expect from a GraphQL server.</p>\n<p>Remember that <code>Node</code> interface we defined above? Its purpose is to provide a <a href=\"https://graphql.org/learn/global-object-identification/\">global object identification</a> for all the GraphQL nodes in our server. Therefore, a GraphQL client can handle re-fetching and caching in a more standardized way. Notice that each ID must be globally unique on your application.</p>\n<p>As the <code>Node</code> interface will be used for all objects in our server, GraphQL provides a reusable unit called <a href=\"https://graphql.org/learn/queries/#fragments\">fragment</a>. Now, let’s add a new way the query nodes on our schema:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-graphql\"><span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\"># ...</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">type</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Query</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  \"Get a node by ID\"</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  node(</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">id</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> ID</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">!</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Node</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\"># ...</span></span></code></pre>\n<p>Notice that the <code>task</code> query was removed, as it is no more needed. And now, we will re-do our query using a fragment:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-graphql\"><span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\"># We name the query and pass a variable</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\"># to improve the development experience.</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">query</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> getTask</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">id</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> ID</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">!</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">  node</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">id</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> $id</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    ...</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">taskFields</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">fragment</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\"> taskFields</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> on</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Task</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">  title</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<p>And now, we will change our schema to comply with the Relay GraphQL Server specification. Take some time to read the comments in order to understand what is being done here.</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-graphql\"><span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">\"\"\"</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">Serialize and validate JavaScript dates.</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">\"\"\"</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">scalar</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> Date</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">\"\"\"</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">Node interface</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">\"\"\"</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">interface</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Node</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  id</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> ID</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">!</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">\"\"\"</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">Priority level</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">\"\"\"</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">enum</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Priority</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">  LOW</span></span>\n<span class=\"line\"><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">  MEDIUM</span></span>\n<span class=\"line\"><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">  HIGH</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">\"\"\"</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">A task that the user should complete</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">\"\"\"</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">type</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Task</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> implements</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Node</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  \"Task ID\"</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  id ID!</span><span style=\"color:#6272A4;--shiki-dark:#6272A4\"> # ID is a GraphQL special type for IDs.</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  \"Task title\"</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  title String!</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  \"Task creation date\"</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  created</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Date</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">!</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  \"Task modification date\"</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  modified</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Date</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  priority</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Priority</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">!</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">\"\"\"</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">Define an edge of the task,</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">containing a node and a pagination cursor.</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">\"\"\"</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">type</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> TaskEdge</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  cursor</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> String</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">!</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  node</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Task</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">\"\"\"</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">Define a connection between the</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">task edges, including the PageInfo</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">object for pagination info.</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">\"\"\"</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">type</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> TaskConnection</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  edges</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> [</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">TaskEdge</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">]</span><span style=\"color:#6272A4;--shiki-dark:#6272A4\"> # Yes, we use brackets to define arrays in GraphQL</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  pageInfo</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> PageInfo</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">!</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">\"\"\"</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">Provides pagination info</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">for a cursor-based pagination</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">\"\"\"</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">type</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> PageInfo</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  hasNextPage</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Boolean</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">!</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  hasPreviousPage</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Boolean</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">!</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  startCursor</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> String</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  endCursor</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> String</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">\"\"\"</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">Needed input data to add a new task.</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">\"\"\"</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">input</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> AddTaskInput</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  title</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> String</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">!</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  priority</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Priority</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">type</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Query</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  node(</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">id</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> ID</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">!</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Node</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  tasks(</span></span>\n<span class=\"line\"><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">    first</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Int</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span><span style=\"color:#6272A4;--shiki-dark:#6272A4\"> # The amount of tasks requested</span></span>\n<span class=\"line\"><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">    after</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> String</span><span style=\"color:#6272A4;--shiki-dark:#6272A4\"> # Cursor to mark the point</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  )</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> TaskConnection</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">type</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Mutation</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  addTask(</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">input</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> AddTaskInput</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Task</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<p>At this point, the metaphor of <a href=\"https://en.wikipedia.org/wiki/Graph_(discrete_mathematics)\">graphs</a> used here should be very clear. Each <strong>edge</strong> of your graph has a node and a <strong>connection</strong> of edges has a collection of nodes that can be paginated. Note that, in this specification, is expected that you implement a <a href=\"https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination\">cursor based pagination</a>, rather than a <a href=\"https://www.prisma.io/docs/concepts/components/prisma-client/pagination#offset-pagination\">offset pagination</a> (follow the previous link to have more information about their differences.</p>\n<p>And that’s all we need to comply with the <a href=\"https://relay.dev/docs/guides/graphql-server-specification/\">Relay GraphQL Server Specification</a>.</p>\n<p>In the next article, I’ll implement a GraphQL server using all the concepts that we learned here.</p>\n<p>Source:</p>\n<p><a href=\"https://graphql.org/\">GraphQL</a></p>\n",
    "tags": [
      "graphql",
      "webdev"
    ],
    "translates": null
  },
  "ano-novo-blog-novo-ou-como-eu-criei-este-blog-para-2023": {
    "id": "6cotdaubg05n32i",
    "title": "Ano novo, blog novo (ou como eu criei este blog para 2023)",
    "slug": "ano-novo-blog-novo-ou-como-eu-criei-este-blog-para-2023",
    "locale": "pt-BR",
    "created": "2023-01-01T16:34:44.490Z",
    "updated": "2023-08-12T13:34:51.667Z",
    "content": "<p>Ano novo, blog novo! Depois de adiar por um tempão a publicação do meu blog,\nfinalmente terminei de desenvolvê-lo, usando <a href=\"https://nextjs.org/\">Next.js</a>,\n<a href=\"https://pocketbase.io/\">PocketBase</a> e <a href=\"https://mantine.dev/\">Mantine</a>.\nQuer saber o porquê eu escolhi estas ferramentas? Então, continue a leitura aqui comigo.</p>\n<p>Eu crio blogs há muito tempo (desde 2007). Comecei com o <a href=\"https://www.blogger.com\">Blogger</a>,\nmas depois migrei para o <a href=\"https://wordpress.org/\">WordPress</a>. E foi aí que\ncomecei a me interessar por Linux e programação. Eu passava um bocado de tempo\ncriando temas, customizando plugins, lendo a documentação e traduzindo temas e\nplugins do WordPress. E, apesar do WordPress ser um CMS excelente para quem quer\napenas publicar um site da maneira mais rápida possível, dessa vez eu queria algo\nmais personalizado, contendo todos os recursos que eu gostaria de ter e nada mais.\nA partir daí, comecei a pesquisar.</p>\n<p>Experimentei vários CMSs (<a href=\"https://directus.io/\">Directus</a>, <a href=\"https://keystonejs.com/\">KeystoneJS</a>,\n<a href=\"https://strapi.io/\">Strapi</a> e <a href=\"https://getcockpit.com/\">Cockpit</a>), mas o que eu achei mais simples para atender a minha necessidade foi o <a href=\"https://pocketbase.io/\">PocketBase</a>, principalmente porquê eu tinha\nintenção de auto-hospedar a minha solução. Os outros CMSs são ótimos, mas quando\nvocê é uma equipe de um homem só, deve escolher as ferramentas adequadas.\nE o que é mais fácil de uma pessoa só gerenciar do que um banco de dados SQLite?\nO Pocketbase já expõe as atualizações do banco de dados em tempo real com SSE,\nprovê autenticação e gerenciamento de arquivos (com integração ao S3), SDK para\nJavaScript e Flutter e ainda pode ser usado como um framework. Tudo isso dentro\nde um pequeno binário escrito em <a href=\"https://go.dev/\">Go</a> (se você quer saber mais sobre o PocketBase,\nleia a <a href=\"https://pocketbase.io/docs/\">documentação</a> e veja este <a href=\"https://www.youtube.com/watch?v=Wqy3PBEglXQ\">vídeo do FireShip</a>, onde\nele mostra como criar um sistema de chat em tempo real com o PocketBase). E por fim,\na fim de ter backups em tempo real do meu banco de dados SQLite e mandá-los para o S3, utilizo o\n<a href=\"https://litestream.io/\">Litestream</a>. Bom, feita a escolha no backend, vamos ao frontend.</p>\n<p>Experimentei o <a href=\"https://astro.build/\">Astro</a> (que é excelente!) e o <a href=\"https://remix.run/\">Remix</a>,\nmas acabei optando pelo <a href=\"https://nextjs.org/\">Next.js</a>, pricipalmente por conta\nda biblioteca de geração de imagens da <a href=\"https://vercel.com/\">Vercel</a>, que eu uso para gerar as imagens do post,\ncomo essa aqui:</p>\n<img src=\"https://douglasmoura.dev/api/v1/og?ok\" alt=\"O trabalho que nunca começou é o que leva mais tempo para terminar\" />\n<p>E aqui chegamos à escolha do que eu utilizaria para criar os estilos do blog.\nNos últimos anos, estilizei aplicações em React com <a href=\"https://github.com/css-modules/css-modules\">CSS Modules</a>,\n<a href=\"https://styled-components.com/\">Styled Components</a>, <a href=\"https://stitches.dev/\">Stitches</a>,\n<a href=\"https://tailwindcss.com/\">Tailwind</a> e <a href=\"https://chakra-ui.com/\">Chakra UI</a>.\nEu até comecei a criar um design system com Stitches e Tailwind, mas\ncriar um design system sozinho levaria muito tempo, decidi optar por uma caminho mais fácil.\nExperimentei vários DS até encontrar o <a href=\"https://mantine.dev/\">Mantine</a>, que é uma\nbiblioteca excelente que tem tudo o que eu já tinha em mente e gostaria de usar.\nA partir daí, o trabalho consistiu em implementar o blog com as features iniciais básicas:</p>\n<ul>\n<li><a href=\"https://nextjs.org/docs/basic-features/data-fetching/incremental-static-regeneration\">ISR</a> dos posts;</li>\n<li>Validação de formulários com <a href=\"https://github.com/colinhacks/zod\">Zod</a>;</li>\n<li>Sistema de comentários aninhados com verificação anti-spam provida pelo <a href=\"https://akismet.com/\">Akismet</a>;</li>\n<li>Exibição de avatares dos comentaristas com o <a href=\"http://pt.gravatar.com/\">Gravatar</a>;</li>\n<li>Favicon em SVG com modo claro/escuro;</li>\n<li>Multilinguagem (português e inglês).</li>\n</ul>\n<p>Com tudo isso pronto, alterei as URLs canônicas dos meus artigos no <a href=\"https://dev.to/douglasdemoura\">Dev.to</a>\npara apontarem para as novas URLs e finalmente, publiquei meu blog.</p>\n<p>Claro, se você está lendo isso no meu blog agora, vai ver que ainda falta uma feature importante:\na pesquisa. Vou estudar possíveis soluções para isso nos próximos dias, mas já\nadianto que você pode ter uma prévia da funcionalidade apertando a tecla <kbd>/</kbd> em\nqualquer página.</p>\n<p>E, para finalizar, no dia 21 de janeiro eu vou mostrar como criar um design system\ncom React e Tailwind na <a href=\"https://conferenciacssbrasil.com.br/\">Conferência CSS Brasil</a>.\nEntão, se você estiver por lá, te convido a tomar uma cerveja comigo depois do evento :)</p>\n<p>Feliz 2023 a todos 🎉.</p>\n",
    "tags": [
      "webdev",
      "programming",
      "designsystem"
    ],
    "translates": null
  },
  "usando-fetch-com-typescript": {
    "id": "k9f6b2e2nioulc6",
    "title": "Usando fetch com TypeScript",
    "slug": "usando-fetch-com-typescript",
    "locale": "pt-BR",
    "created": "2023-06-02T16:47:38.794Z",
    "updated": "2023-06-04T19:57:59.762Z",
    "content": "<p>Como <a href=\"https://developer.mozilla.org/pt-BR/docs/Web/API/Fetch_API\"><code>fetch</code></a> é praticamente <a href=\"https://caniuse.com/?search=fetch\">universalmente suportado</a> nos navegadores web mais utilizados, podemos descartar, com segurança, o uso do <a href=\"https://axios-http.com/\">Axios</a> e outras bibliotecas similares em favor do <code>fetch</code>. Neste artigo, vou criar uma pequena abstração para o <code>fetch</code> que adiciona algumas conveniências para melhorar a experiência do desenvolvedor.</p>\n<h2>O código</h2>\n<p>Primeiro, vou criar uma função base a partir da qual todas as outras serão derivadas:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-typescript\"><span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// Estende a classe de erro para gerar erros de HTTP (qualquer resposta com status > 299)</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">class</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\"> HTTPError</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> extends</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Error</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">//            Um tipo genérico para \"tipar\" a resposta</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// -----------\\/</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> query</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> &#x3C;</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">T</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> unknown</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">>(</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">url</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> RequestInfo</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> |</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> URL</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">init</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">?:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> RequestInit</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">  fetch</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(url, init).</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">then</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">((</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">res</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">!</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">res.ok)</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">      throw</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6;font-weight:bold;--shiki-dark-font-weight:bold\"> new</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> HTTPError</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(res.statusText, { cause</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> res })</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> res.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">json</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">() </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">as</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Promise</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">&#x3C;</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">T</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">> </span><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// &#x3C;--- Aplicando o tipo genérico</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  })</span></span></code></pre>\n<p>No código acima, fizemos o seguinte:</p>\n<ol>\n<li>Criamos uma nova classe <code>HTTPError</code>, para lançar <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status\">erros HTTP</a> conforme eles ocorrem;</li>\n<li>Utilizamos um <a href=\"https://www.typescriptlang.org/docs/handbook/2/generics.html\">tipo genérico</a> para poder tipar a resposta da requisição.</li>\n</ol>\n<p>Agora, vamos estender a função <code>query</code> para nos permitir serializar e enviar dados em nossas requisições:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-typescript\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> makeRequest</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  // -----------\\/ RequestInit['method'] são os tipos de métodos válidos para a requisição</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">method</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> RequestInit</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">[</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">method</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">]) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">    //     | Esses dois tipos genéricos nos permitem tipar</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">    //     | o entrada de dados (TBody) e saída (TResponse) da função.</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    &#x3C;</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">TResponse</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> unknown</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">TBody</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\"> Record</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">&#x3C;</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">string</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">unknown</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">>>(</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">url</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> RequestInfo</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> |</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> URL</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">body</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> TBody</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">      query</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">&#x3C;</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">TResponse</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">>(url, {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">        method,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">        body</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> JSON</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">stringify</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(body), </span><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// &#x3C;-- Transforma os objetos em uma string</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      })</span></span></code></pre>\n<p>No código acima, fizemos o seguinte:</p>\n<ol>\n<li>Criamos um <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures\">encerramento (closure)</a> que, primeiramente, recebe o método que desejamos chamar e, em seguida, retorna uma função onde passamos a <code>url</code> e o <code>body</code> (que, por padrão, é <em>JSON-stringificado</em>) da requisição.</li>\n</ol>\n<p>Neste ponto, podemos usar nossas funções recém-criadas da seguinte forma:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-typescript\"><span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// Tipo para a entidade Product</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">type</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Product</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  id</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  title</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> string</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  description</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> string</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  price</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  discountPercentage</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  rating</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  stock</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  brand</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> string</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  category</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> string</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  thumbnail</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> string</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  images</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> string</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">[]</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// Requisitando um único produto</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> product </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> await</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> query</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">&#x3C;</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">Product</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">>(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">https://dummyjson.com/products/1</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">console.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">log</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(product)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// Cria uma função que faz uma requisição de POST</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> post </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> makeRequest</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">POST</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// Adiciona um novo produto</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> newProduct </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> await</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> post</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">&#x3C;</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">Product</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">Omit</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">&#x3C;</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">Product</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">id</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">>>(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">https://dummyjson.com/products</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  title</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">New Product</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  description</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">This is a new product</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  price</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 100</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  discountPercentage</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 0</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  rating</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 0</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  stock</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 0</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  brand</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">New Brand</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  category</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">New Category</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  images</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> [],</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  thumbnail</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> ''</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">})</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">console.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">log</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(newProduct)</span></span>\n<span class=\"line\"></span></code></pre>\n<p>Agora temos um código funcional, mas não muito “ergonômico”. Acredito que nosso código precisa ser capar de aceitar uma URL base para todas as requisições, cabeçalhos (como um <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Authorization\">token de autorização</a>) e um jeito mais fácil de fazer requisições do tipo <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/PATCH\"><code>PATCH</code></a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/PUT\">PUT</a> e <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/DELETE\">DELETE</a>.</p>\n<p>Vamos refatorar o código acima, de modo que adicionar uma URL base e cabeçalhos comuns a todas as requisições:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-typescript\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">import</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> { getToken } </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">from</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">my-custom-auth</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">class</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\"> HTTPError</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> extends</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Error</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> createQuery </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">baseURL</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> RequestInfo</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> |</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> URL</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> ''</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">baseInit</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">?:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> RequestInit</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    &#x3C;</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">T</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> unknown</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">>(</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">url</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> RequestInfo</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> |</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> URL</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">init</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">?:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> RequestInit</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">      fetch</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">`</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">${</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">baseURL</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">}${</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">url</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">}</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">`</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, { </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">...</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">baseInit, </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">...</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">init }).</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">then</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">((</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">res</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">        if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">!</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">res.ok)</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">          throw</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6;font-weight:bold;--shiki-dark-font-weight:bold\"> new</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> HTTPError</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(res.statusText, { cause</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> res })</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">         return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> res.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">json</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">() </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">as</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Promise</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">&#x3C;</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">T</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">></span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">       })</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// Esta é a função onde definimos nossa URL base e nossos cabeçalhos</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> query </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> createQuery</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span></span>\n<span class=\"line\"><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">https://dummyjson.com</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    headers</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E9F284;--shiki-dark:#E9F284\">      '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Content-Type</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">application/json</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#E9F284;--shiki-dark:#E9F284\">      '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Authorization</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> `Bearer </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">${</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">getToken</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">()</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">}</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">`</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// Se precisar adicionar um token no cabeçalho, este é o lugar</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    },</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  })</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> makeRequest</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">method</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> RequestInit</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">[</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">method</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">]) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  &#x3C;</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">TResponse</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> unknown</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">TBody</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\"> Record</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">&#x3C;</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">string</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">unknown</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">>>(</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">url</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> RequestInfo</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> |</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> URL</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">body</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> TBody</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">    query</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">&#x3C;</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">TResponse</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">>(url, {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      method,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      body</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> JSON</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">stringify</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(body),</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">     })</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">export</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> api </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  get</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> query,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  post</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> makeRequest</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">POST</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">),</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  delete</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> makeRequest</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">DELETE</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">),</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  put</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> makeRequest</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">PUT</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">),</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  patch</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> makeRequest</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">PATCH</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">),</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<p>No código acima, eu:</p>\n<ol>\n<li>Criei a função <code>createQuery</code> , um fechamento (closure), permitindo definir uma URL padrão e parâmetros <code>init</code> predefinidos;</li>\n<li>Criei uma nova função <code>query</code>, na qual utilizei a função <code>createQuery</code> para definir a URL base e os parâmetros padrão que todas as requisições devem ter (observe a função fictícia <code>getToken</code> que adiciona um <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Authentication\">Bearer Token</a> a cada requisição);</li>\n<li>No final, exportei o objeto <code>api</code> com todas as funções comumente usadas para fazer requisições.</li>\n</ol>\n<p>Você pode querer retornar o corpo de uma requisição que retornou um erro, por exemplo, quando o backend retorna os detalhes padronizados do <a href=\"https://datatracker.ietf.org/doc/html/rfc7807\">problem details</a>. Vejamos como fica o nosso código refatorado:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-typescript\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">import</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> { getToken } </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">from</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">my-custom-auth</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// Estende o retorno da classe HTTPError</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">class</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\"> HTTPError</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> extends</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Error</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  readonly</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> response</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> any</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  readonly</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> status</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  readonly</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> statusText</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> string</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  constructor</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">status</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">statusText</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> string</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">response</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> any</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#BD93F9;--shiki-dark:#BD93F9;font-style:italic;--shiki-dark-font-style:italic\">    super</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(statusText);</span></span>\n<span class=\"line\"><span style=\"color:#BD93F9;--shiki-dark:#BD93F9;font-style:italic;--shiki-dark-font-style:italic\">    this</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">.status </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> status;</span></span>\n<span class=\"line\"><span style=\"color:#BD93F9;--shiki-dark:#BD93F9;font-style:italic;--shiki-dark-font-style:italic\">    this</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">.statusText </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> statusText;</span></span>\n<span class=\"line\"><span style=\"color:#BD93F9;--shiki-dark:#BD93F9;font-style:italic;--shiki-dark-font-style:italic\">    this</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">.response </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> response;</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> createQuery </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">baseURL</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> RequestInfo</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> |</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> URL</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> ''</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">baseInit</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">?:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> RequestInit</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    &#x3C;</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">TResponse</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> unknown</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">>(</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">url</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> RequestInfo</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> |</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> URL</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">init</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">?:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> RequestInit</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">      fetch</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">`</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">${</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">baseURL</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">}${</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">url</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">}</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">`</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, { </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">...</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">baseInit, </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">...</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">init }).</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">then</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">async</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">res</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">        // Desta vez, pegamos a resposta da requisição mais cedo</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">        const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> response </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> await</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> res.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">json</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">()</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">        if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">!</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">res.ok)</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">          throw</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6;font-weight:bold;--shiki-dark-font-weight:bold\"> new</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> HTTPError</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(res.status, res.statusText, response);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">         return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> response </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">as</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> TResponse</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">       })</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// Esta é a função onde definimos nossa URL base e nossos cabeçalhos</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> query </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> createQuery</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span></span>\n<span class=\"line\"><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">https://dummyjson.com</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    headers</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E9F284;--shiki-dark:#E9F284\">      '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Content-Type</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">application/json</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#E9F284;--shiki-dark:#E9F284\">      '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Authorization</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> `Bearer </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">${</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">getToken</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">()</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">}</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">`</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// Se precisar adicionar um token no cabeçalho, este é o lugar</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    },</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  })</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> makeRequest</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">method</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> RequestInit</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">[</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">method</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">]) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  &#x3C;</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">TResponse</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> unknown</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">TBody</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\"> Record</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">&#x3C;</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">string</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">unknown</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">>>(</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">url</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> RequestInfo</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> |</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> URL</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">body</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> TBody</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">    query</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">&#x3C;</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">TResponse</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">>(url, {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      method,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      body</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> JSON</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">stringify</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(body),</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">     })</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">export</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> api </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  get</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> query,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  post</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> makeRequest</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">POST</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">),</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  delete</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> makeRequest</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">DELETE</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">),</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  put</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> makeRequest</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">PUT</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">),</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  patch</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> makeRequest</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">PATCH</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">),</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<p>Agora você pode usar seu novo wrapper em torno do <code>fetch</code> da seguinte forma:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-typescript\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">type</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> Product</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  id</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  title</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> string</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  description</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> string</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  price</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  discountPercentage</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  rating</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  stock</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  brand</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> string</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  category</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> string</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  thumbnail</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> string</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  images</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> string</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">[]</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// GET https://dummyjson.com/products/1</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">api</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  .</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">get</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">&#x3C;</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">Product</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">>(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">/products/1</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  .</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">then</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">console</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">.</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">log</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  .</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">catch</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">((</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">err</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">    if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">err</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\"> instanceof</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\"> HTTPError</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">      // Handle HTTP Errors</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      console.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">error</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">HTTPError</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, err);</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">    if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">err</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\"> instanceof</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\"> SyntaxError</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">      // Handle error parsing of the response</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      console.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">error</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">SyntaxError</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, err);</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">    console</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">.</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">error</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Other errors</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">err</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">);</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">});</span></span></code></pre>\n<h2>Considerações finais</h2>\n<p>O código acima pode não ter todos os recursos completos de bibliotecas como <a href=\"https://axios-http.com/\">Axios</a>, <a href=\"https://github.com/developit/redaxios\">redaxios</a>, <a href=\"https://github.com/sindresorhus/ky\">ky</a> ou <a href=\"https://github.com/elbywan/wretch\">wretch</a>, mas na maioria das vezes é tudo o que é necessário ao trabalhar com React usando <a href=\"https://swr.vercel.app/\">SWR</a> ou <a href=\"https://tanstack.com/query/latest\">TanStack Query</a> (tanto no frontend quanto no backend). Se quiser, dê sua opinião sobre o código e compartilhe suas melhorias. Este código está disponível neste <a href=\"https://gist.github.com/DouglasdeMoura/59ce418672d0e33dda7056b382b01de9\">gist</a>.</p>\n",
    "tags": [
      "javascript",
      "typescript"
    ],
    "translates": "j5ouuw7zm51z2ts"
  },
  "finding-the-greatest-common-divisor-in-typescript": {
    "id": "5d4agn9wp8tkd45",
    "title": "Finding the greatest common divisor in TypeScript",
    "slug": "finding-the-greatest-common-divisor-in-typescript",
    "locale": "en-US",
    "created": "2024-01-12T16:31:36.266Z",
    "updated": "2024-01-25T13:55:08.252Z",
    "content": "<p>First described in the classic geometry book <em>Elements</em>, by the ancient Greek mathematician Euclid (ca. 300 BC, at the book VII, proposition 2), the method of finding de greatest common divisor between the positive numbers $a$ and $b$, being $a &gt; b$ consists on the knowledge that the common divisors of $a$ and $b$ are the same of $a - b$ and $b$. Therefore, we can find this greatest common divisor by replacing the largest number ($a$) by the different between the two numbers ($a - b$), repeatedly, until the two numbers are equal. In TypeScript, we can do that like this:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-typescript\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> gcd</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">a</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">b</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  // When `a` is equal to `b`, return the result</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (a </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">===</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> b) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> a</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  // When `a` is bigger than b, calculate the the GCD again</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  // with the new `a` being `a - b`.</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (a </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> b) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    return</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> gcd</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(a </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">-</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> b, b)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  // If the new `b` is bigger than `a`,</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  // subtract a from it.</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> gcd</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(a, b </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">-</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> a)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<p>This method can be very slow if the difference between $a$ and $b$ is too large. Thankfully, there’s another method to find the greatest common divisor between two numbers, that can be described as follows:</p>\n<ol>\n<li>In order to find the greatest common divisor between $a$ and $b$, being $a &gt; b$, perform the division between the two numbers. This operation will give a quotient and a remainder (that we will call $q$ and $r$, respectively). Thus, $a$ can be described as $a = q \\times b + r$;</li>\n<li>If $r$ is equal to 0, we stop, because we found that the greatest common divisor of $a$ and $b$ is $b$. Otherwise, we go back to step 1, making $b$ the new $a$ and $r$ will be the new $b$.</li>\n</ol>\n<p>Now, we can start with the implementation of the algorithm above:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-typescript\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> gcd</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">a</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">b</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  // First, we take the remainder between the division of a and b:</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> r </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> a </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">%</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> b</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  </span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  // If the remainder is equal to zero, it means that we already found the</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  // greatest common divisor, therefore, we return b:</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (r </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">===</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 0</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> b</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  </span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  // If the remainder is not equal to 0, we call the function again</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  // with the new values for a and b:</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> gcd</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(b, a </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">%</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> b)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<p>The implementation is very straightforward and can be read exactly as is described in steps 1 and 2. We can make the function simpler, by checking, directly, if $b$ is equal to zero and only doing the remainder operation afterwards. Therefore, if the function receive a $b$ that is equal to zero, we will know that $a$ is the greatest common divisor:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-typescript\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> gcd</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">a</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">b</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (b </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">===</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 0</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> a</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  </span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> gcd</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(b, a </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">%</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> b)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<p>This variant is called <em>Euclidean algorithm</em> (in contrast of the first one, which is the <em>Euclid’s algorithm</em>) and it significantly faster than the first implementation.</p>\n<h2>Alternative implementations</h2>\n<p>We can also take a different approach. Instead of calling our <code>gcd</code> function recursively, we can implement our function using a <code>while</code> loop (analogous to our first implementation above):</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-typescript\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> gcd</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">a</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">b</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  // Run this loop while a is different of b</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  while</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (a </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">!==</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> b) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (a </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> b) {</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">      // Subtracts b from a while a is bigger than b</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      a </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> a </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">-</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> b</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">      // Go to the next loop</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">      continue</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    }</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">    // Subtracts a from b when a &#x3C;= b</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    b </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> b </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">-</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> a</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  // Returns the greatest common divisor between a and b</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> a</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<p>And this is another way (analogous to our second implementation above):</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-typescript\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> gcd</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">a</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">b</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  // Run this loop while `b` is different from 0</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  while</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (b </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">!==</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 0</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">    // Save the new value for a in a temporary variable</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> newA </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> b</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">    // Set b to the modulo of a and b (the remainder of the division between a and b)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    b </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> a </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">%</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> b</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">    // Set a to its new value before the next loop</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    a </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> newA</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  </span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  // Now that b is equal to 0, we know that a is the greatest common divisor</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> a</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<h2>Finding the greatest common between three or more numbers</h2>\n<p>The greatest  of three or more numbers is equal the product of the prime factors common to all the numbers (we will explore more of that in a future article), but, you can also calculate the greatest common divisor between pairs of this list of numbers with the same functions we have showed already. So, let’s refactor our <code>gcd</code> function to receive multiple parameters:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-typescript\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> gcd</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">...</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">numbers</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">[])</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> calculateGcd</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">a</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">b</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (b </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">===</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 0</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">      return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> a</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    return</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> calculateGcd</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(b, a </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">%</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> b)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  };</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span></span>\n<span class=\"line\"><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">    numbers</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">      // Just to be sure, sort numbers in descendant order:</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      .</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">sort</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">((</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">a</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">b</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> b </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">-</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> a)</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">      // Call `calculateGcd` for each pair in the numbers array:</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      .</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">reduce</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">((</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">a</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">b</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> calculateGcd</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(a, b))</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  )</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<h2>Validating our input</h2>\n<p>Let’s guarantee that our functions should always receive, at least, two numbers and that all numbers must not be negative:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-typescript\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> gcd</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">...</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">numbers</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">[])</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (numbers.length </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">&#x3C;</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 2</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    throw</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6;font-weight:bold;--shiki-dark-font-weight:bold\"> new</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> Error</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">You must pass, at least, 2 numbers</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (numbers.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">some</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">((</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">number</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> number </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">&#x3C;</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 0</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    throw</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6;font-weight:bold;--shiki-dark-font-weight:bold\"> new</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> Error</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">The numbers must be >= 0</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> calculateGcd</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">a</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">b</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> number</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (b </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">===</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 0</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">      return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> a</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    return</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> calculateGcd</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(b, a </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">%</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> b);</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  };</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span></span>\n<span class=\"line\"><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">    numbers</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">      // Just to be sure, sort numbers in descendant order:</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      .</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">sort</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">((</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">a</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">b</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> b </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">-</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> a)</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">      // Call `calculateGcd` for each pair in the numbers array:</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      .</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">reduce</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">((</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">a</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">b</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> calculateGcd</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(a, b))</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  )</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n",
    "tags": [
      "typescript",
      "mathematic",
      "javascript"
    ],
    "translates": "vfb16zvqx9d6eq8"
  },
  "como-foi-a-minha-experiencia-no-elixir-days-2024": {
    "id": "iwov85iu4liz8at",
    "title": "Como foi a minha experiência no Elixir Days 2024",
    "slug": "como-foi-a-minha-experiencia-no-elixir-days-2024",
    "locale": "pt-BR",
    "created": "2024-05-31T19:58:47.206Z",
    "updated": "2024-05-31T19:58:47.206Z",
    "content": "<p>No último final de semana (25 e 26 de maio), aconteceu o <a href=\"https://www.elixirdays.com/\">Elixir Days</a> no auditório da <a href=\"https://lsb.edu.br/\">Link Business School</a>. Apesar do evento ter sido organizado muito em cima da hora (e, por conta disso, não ter tido tempo de abrir o <em>call for papers</em>), contou com uma excelente seleção de palestrantes e até mesmo a presença do Bruce Tate, o instrutor do <a href=\"https://grox.io/\">grox.io</a>, que apresentou um workshop sobre alguns conceitos básicos do Elixir e do OTP.</p>\n<p>Não consegui participar do segundo dia do evento, mas tudo foi gravado e os organizadores disseram que, em breve, as gravações estarão disponíveis no YouTube.</p>\n<p>Eu, sem nenhum conhecimento de Elixir, saí motivado a estudar a linguagem e suas capacidades. Fiquei impressionado com a facilidade de uso do <a href=\"https://livebook.dev/\">Livebook</a> e a quantidade de coisas que ele pode ser usado (o Bruce fez o seu workshop inteiramente no Livebook, que consistia em explicar alguns conceitos do Elixir durante a implementação do <a href=\"https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life\">jogo da vida do Conway</a>). Imagino que o Livebook seja parecido com <a href=\"https://jupyter.org/\">Jupyter nooteboks</a>, mas também nunca parei para brincar um pouco com este (acredito que deva dedicar um tempo para descobrir do que são capazes).</p>\n<p>Bom, enquanto aguardo a disponibilização das gravações do domingo, já estou garantindo o meu ingresso para o Elixir Days 2025 (que já estão à venda no <a href=\"https://www.elixirdays.com/\">site oficial</a>).</p>\n",
    "tags": [
      "Elixir",
      "Palestras"
    ],
    "translates": null
  },
  "como-criar-um-indicador-de-carregamento-perfeito-para-seus-web-apps": {
    "id": "qky4tlh4sx84esg",
    "title": "Como criar um indicador de carregamento perfeito para seus web apps",
    "slug": "como-criar-um-indicador-de-carregamento-perfeito-para-seus-web-apps",
    "locale": "pt-BR",
    "created": "2021-03-03T15:00:00.000Z",
    "updated": "2023-08-12T13:45:55.590Z",
    "content": "<p>Web apps são complexos e, mantê-los acessíveis para pessoas com necessidades\nespeciais exige um bom conhecimento das suas <a href=\"https://w3c.github.io/html-aria/\">espeficações</a>.\nMas não se preocupe, pois neste artigo, eu vou mostrar como criar o indicadores\nde carregamento acessíveis e bonitos para suas aplicações.</p>\n<aside className=\"aside-info\">\nNeste artigo, você aprender aprender para que servem os atributos <code> aria-live</code>,\n <code> aria-busy</code>, <code> aria-control </code> e <code>role</code>.\nAlém disso, aprenderá como adicionar um ícone de carregamento feito somente com CSS.\n</aside>\n<p>Usamos indicadores de carregamento sempre que é necessário recuperar dados de maneira\nassíncrona em nossas aplicações, normalmente relacionadas à alguma interação do\nusuário: envio de formulários, requisições à <abbr title=\"Application Programming Interface\">API</abbr>s\nexternas, upload de arquivos, etc. Para executarmos estas ações, é necessário que\nforneçamos alguma identificação visual para que o usuário possa identificar que\na nossa aplicação está esperando algum dado ou retorno externo.</p>\n<p>Vamos começar com um exemplo simples, onde uma região da tela será atualizada quando\num usuário selecionar um planeta da lista:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-html\"><span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">&#x3C;!-- Utilizaremos este formulário para selecionar um planeta --></span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">&#x3C;</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">fieldset</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">></span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  &#x3C;</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">legend</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">>Informação do planeta&#x3C;/</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">legend</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">></span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  &#x3C;</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">label</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B;font-style:italic;--shiki-dark-font-style:italic\"> for</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">planetasSelect</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">>Planeta:&#x3C;/</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">label</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  &#x3C;!--</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">    O atributo aria-controls aponta para o ID do elemento da página este formulário controla</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  --></span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  &#x3C;</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">select</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B;font-style:italic;--shiki-dark-font-style:italic\"> id</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">planetasSelect</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B;font-style:italic;--shiki-dark-font-style:italic\"> aria-controls</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">planetaInformacoes</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">></span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    &#x3C;</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">option</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B;font-style:italic;--shiki-dark-font-style:italic\"> value</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">>Selecione um planeta:&#x3C;/</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">option</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">></span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    &#x3C;</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">option</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B;font-style:italic;--shiki-dark-font-style:italic\"> value</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">mercurio</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">>Mercúrio&#x3C;/</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">option</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">></span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    &#x3C;</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">option</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B;font-style:italic;--shiki-dark-font-style:italic\"> value</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">venus</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">>Vênus&#x3C;/</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">option</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">></span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    &#x3C;</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">option</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B;font-style:italic;--shiki-dark-font-style:italic\"> value</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">terra</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">>Terra&#x3C;/</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">option</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">></span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    &#x3C;</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">option</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B;font-style:italic;--shiki-dark-font-style:italic\"> value</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">marte</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">>Marte&#x3C;/</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">option</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">></span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  &#x3C;/</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">select</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">></span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">&#x3C;/</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">fieldset</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">&#x3C;!--</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  O atributo role=\"region\" define que a div a seguir é um ponto de destaque na</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  página, facilitando o acesso à região através do teclado.</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  Observe que o ID da div a seguir é o mesmo definido no atributo aria-controls</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  do select acima.</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  Definimos o aria-live como igual a polite. Desse modo, os leitores de</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  tela não interromperam a leitura da página quando o conteúdo dessa div for alterado.</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  Por fim, definimos o aria-busy para informar aos leitores de tela ou outras</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  tecnologias assistivas quando a região está aguardando um novo conteúdo.</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">--></span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">&#x3C;</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">div</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B;font-style:italic;--shiki-dark-font-style:italic\"> role</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">region</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B;font-style:italic;--shiki-dark-font-style:italic\"> id</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">planetaInformacoes</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B;font-style:italic;--shiki-dark-font-style:italic\"> aria-live</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">polite</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B;font-style:italic;--shiki-dark-font-style:italic\"> aria-busy</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">false</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">></span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  &#x3C;</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">h2</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B;font-style:italic;--shiki-dark-font-style:italic\"> id</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">planetaNome</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">>Nenhum planeta selecionado&#x3C;/</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">h2</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">></span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  &#x3C;</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">p</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B;font-style:italic;--shiki-dark-font-style:italic\"> id</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">planetaDescricao</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">>Selecione um planeta para ver sua descrição&#x3C;/</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">p</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">></span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">&#x3C;/</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">div</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">&#x3C;</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">p</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">></span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  &#x3C;</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">small</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">></span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    Com informações da</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    &#x3C;</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">a</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B;font-style:italic;--shiki-dark-font-style:italic\"> href</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">https://en.wikipedia.org/wiki/Solar_System#Inner_Solar_System</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">>Wikipedia&#x3C;/</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">a</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">></span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  &#x3C;/</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">small</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">></span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">&#x3C;/</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">p</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">></span></span></code></pre>\n<p>Agora, precisamos dizer para o leitores de telas ou qualquer outra tecnologia assistiva\nque o parte do conteúdo exibido na tela é dinâmico. Para fazermos isso, usamos o\natributo <code>aria-live</code><sup><a href=\"#aria-live-regions\">1</a></sup>, o qual pode receber um dos três argumentos:</p>\n<ol>\n<li><code>off</code>: atributo padrão para todos os elementos da página. Normalmente, você\nnão precisa definir este atributo de maneira explícita;</li>\n<li><code>assertive</code>: interrompe a leitura da tecnologia assistiva de maneira abrupta.\nSó deve ser utilizado para notificações críticas ou que requeiram a atenção imediata\ndo usuário;</li>\n<li><code>polite</code>: indica que a uma região da página foi atualizada, mas não requer a\natenção imediata do usuário. É o atributo utilizado com mais frequência.</li>\n</ol>\n<p>Também utilizamos o atributo <code>aria-busy</code> para informar aos leitores de tela que\na região está aguardando uma atualiação. Este atributo só aceita valores <em>booleanos</em>:\n<code>true</code> ou <code>false</code>.</p>\n<p>Se você leu o código acima com atenção, verá que definimos outros atributos:\n<code>aria-controls</code><sup><a href=\"#using-aria\">2</a></sup> (linha 9) e <code>role</code><sup><a href=\"#aria-region-role\">3</a></sup> (linha 32).\nO primeiro indica qual elemento o formulário controla, enquanto o segundo facilita\no acesso à região para pessoas que só podem utilizar o teclado para navegar na página.</p>\n<p>Agora, vamos adicionar um pouco de JavaScript para  selecionar os dados dos\nplanetas selecionados em nosso formulário:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-javascript\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> PLANETAS </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  mercurio</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    nome</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Mercúrio</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    descricao</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Mercúrio é o menor e mais interno planeta do Sistema Solar. Tem o nome da divindade romana Mercúrio, o mensageiro dos deuses.</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  },</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  venus</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    nome</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Vênus</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    descricao</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Vênus é o segundo planeta depois do Sol. Foi nomeado em homenamgem à deusa romana do amor e da beleza.</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  },</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  terra</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    nome</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Terra</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    descricao</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">A Terra é o terceiro planeta depois do Sol e o único planeta conhecido capaz de suportar a vida.</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  },</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  marte</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    nome</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Marte</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    descricao</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Marte é o quarto planeta depois do Sol e o segundo menor planeta do Sistema Solar. Seu nome é uma homenagem ao deus romano da Guerra. Também é conhecido com o \"Planeta Vermelho\".</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">function</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> renderizaInformacoesDoPlaneta</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">planeta</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> planetaInformacoes </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> document.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">getElementById</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">planetaInformacoes</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">);</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> planetaNome </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> document.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">getElementById</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">planetaNome</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">);</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> planetaDescricao </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> document.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">getElementById</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">planetaDescricao</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  planetaInformacoes.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">setAttribute</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">aria-busy</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">true</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">  setTimeout</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(() </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (planeta </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">in</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> PLANETAS) {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      planetaNome.textContent </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> PLANETAS[planeta].nome;</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      planetaDescricao.textContent </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> PLANETAS[planeta].descricao;</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    } </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">else</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      planetaNome.textContent </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Nenhum planeta selecionado</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      planetaDescricao.textContent </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Selecione um planeta para ver sua descrição</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    planetaInformacoes.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">setAttribute</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">aria-busy</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">false</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">);</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }, </span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">1100</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">);</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">document.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">getElementById</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">planetasSelect</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  .</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">addEventListener</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">change</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">event</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">    renderizaInformacoesDoPlaneta</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(event.target.value);</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  });</span></span></code></pre>\n<p>Perceba que utilizamos a função <a href=\"https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Asynchronous/Timeouts_and_intervals\"><code>setTimeout</code></a>\n(linha 27) para simular o acesso à uma API externa.</p>\n<p>E para finalizar, adicionaremos um indicador de carregamento utilizando CSS. Sempre\nque algum elemento da página (<code>div</code>, <code>aside</code>, <code>main</code>, etc.) tiver um atributo <code>aria-busy</code>\nque seja igual a <code>true</code>, diminuiremos a opacidade do elemento e adicionaremos um\nícone de carregamento sobre o elemento em questão.</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-css\"><span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">[</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B;font-style:italic;--shiki-dark-font-style:italic\">aria-busy</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">] {</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">  transition</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> opacity </span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">0.2</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">s</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> linear</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">  position</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> relative</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">[</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B;font-style:italic;--shiki-dark-font-style:italic\">aria-busy</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">true</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">]</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> *</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">  opacity</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 0.7</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">[</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B;font-style:italic;--shiki-dark-font-style:italic\">aria-busy</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">true</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">]</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6;font-style:italic;--shiki-dark-font-style:italic\">:</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B;font-style:italic;--shiki-dark-font-style:italic\">before</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">  content</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> ''</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">  display</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> block</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">  border</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 6</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">px</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> solid</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> transparent</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">  border-top-color</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> purple</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">  width</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 30</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">px</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">  height</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 30</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">px</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">  border-radius</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 50</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">%</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">  animation</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> spin </span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">1.2</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">s</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> infinite</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> linear</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">  position</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> absolute</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">  left</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\"> calc</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">50</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">%</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> -</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 18</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">px</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">);</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">  top</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\"> calc</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">50</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">%</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> -</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 18</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">px</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">);</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">@keyframes</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\"> spin</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  0% {</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">    transform</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\"> rotate</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">0</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">deg</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">);</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  100% {</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">    transform</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\"> rotate</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">360</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">deg</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">);</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<p>Depois de tudo isso, podemos ver o nosso exemplo em ação:</p>\n<iframe height=\"350\" style=\"width: 100%\" scrolling=\"no\" title=\"Exemplo de loading acessível\" src=\"https://codepen.io/douglasdemoura/embed/poNqmYq?default-tab=\" frameBorder=\"no\" loading=\"lazy\" />\n<p>Experimente utilizar um leitor de tela no exemplo que acabamos de construir e veja\ncomo os atributos que adicionados ao nosso exemplo fornecem uma boa experiência de\nuso para usuários com necessidades especiais. Claro que podemos chegar ao mesmo\nresultado de diversas outras formas, mas é importante sempre levarmos em consideração\nse a nossa aplicação é acessível.</p>\n<p><small>\n  <abbr title=\"Post scriptum\">P.S.</abbr>: interaja e edite o código deste exemplo no <a href=\"https://codepen.io/douglasdemoura/pen/poNqmYq\" target=\"_blank\">CodePen</a>.\n</small></p>\n<footer className=\"footnotes\">\n  <h4>Referências</h4>\n  <ol>\n    <li id=\"aria-live-regions\">\n      <a href=\"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Live_Regions\" target=\"_blank\">ARIA live regions</a>\n    </li>\n    <li id=\"using-aria\">\n      <a href=\"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques\" target=\"_blank\">Using ARIA: Roles, states, and properties</a>\n    </li>\n    <li id=\"aria-region-role\">\n      <a href=\"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/Region_role\" target=\"_blank\">ARIA: Region role</a>\n    </li>\n  </ol>\n</footer>\n",
    "tags": [
      "html",
      "javascript"
    ],
    "translates": null
  },
  "use-este-script-do-npm-para-gerar-seus-arquivos-do-editorconfig": {
    "id": "1z3ovbccz4z4tmh",
    "title": "Use este script do NPM para gerar seus arquivos do EditorConfig",
    "slug": "use-este-script-do-npm-para-gerar-seus-arquivos-do-editorconfig",
    "locale": "pt-BR",
    "created": "2022-01-01T15:00:00.000Z",
    "updated": "2022-12-29T14:52:01.854Z",
    "content": "<p>Você já precisou criar um EditorConfig nos seus projetos de programação, mas\nnunca consegue lembrar de todas as opções que pode usar? Seus problemas\nacabaram: apenas digite npx create-editorconfig -y no seu terminal e tenha um\nEditorConfig gerado para você. Essas são as opções definidas por padrão:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-text\"><span class=\"line\"><span># editorconfig.org</span></span>\n<span class=\"line\"><span>root = true</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>[*]</span></span>\n<span class=\"line\"><span>charset = utf-8</span></span>\n<span class=\"line\"><span>end_of_line = lf</span></span>\n<span class=\"line\"><span>insert_final_newline = true</span></span>\n<span class=\"line\"><span>indent_style = space</span></span>\n<span class=\"line\"><span>indent_size = 2</span></span>\n<span class=\"line\"><span>trim_trailing_whitespace = true</span></span></code></pre>\n<p>E se você desejar customizar estas configurações ou até mesmo adicionar mais\nconfigurações para um grupo de arquivo diferente (definindo um padrão <a href=\"https://en.wikipedia.org/wiki/Glob_(programming)\">glob</a>),\napenas omita o parâmetro -y no terminal e responda às questões que aparecerão\nno terminal.</p>\n<h2>O que é o EditorConfig?</h2>\n<p>EditorConfig é um formato de arquivo (o próprio .editorconfig) que serve para\ndefinir os estilos que um editor de código (como o <a href=\"https://code.visualstudio.com/\">VS Code</a>) deve aplicar nos\narquivos. Você pode até definir um conjunto diferente de regras para os arquivos\npresentes no seu projeto de acordo com suas respectivas extensões ou diretórios,\nutilizando um <a href=\"https://en.wikipedia.org/wiki/Glob_(programming)\">padrão glob</a>.</p>\n<h2>Meu editor de código não está aplicando as configurações do EditorConfig</h2>\n<p>Para aplicar as regras do seu .editorconfig, o seu editor de código deve ter um\nplugin ou ter implementado, nativamente, a aplicação das regras do EditorConfig\n(se você estiver usando o VS Code, você deve instalar <a href=\"https://marketplace.visualstudio.com/items?itemName=EditorConfig.EditorConfig\">esta extensão</a>).</p>\n<h2>Como posso contribuir com o create-editorconfig?</h2>\n<p>Por favor, vá ao <a href=\"https://github.com/DouglasdeMoura/create-editorconfig\">repositório oficial do GitHub</a> e abra uma nova issue.</p>\n",
    "tags": [
      "javascript",
      "html"
    ],
    "translates": null
  },
  "dissecando-urls-com-javascript": {
    "id": "jdwjqfxbwki78t2",
    "title": "Dissecando URLs com JavaScript",
    "slug": "dissecando-urls-com-javascript",
    "locale": "pt-BR",
    "created": "2023-09-11T12:48:41.199Z",
    "updated": "2023-09-11T12:52:25.736Z",
    "content": "<p>Vamos entender o que significa cada parte de uma URL (Uniform Resource Locator). Observe a URL abaixo:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-text\"><span class=\"line\"><span>https://user:password@blog.exemple.com.br:443/posts?s=javascript&#x26;tags[]=html&#x26;tags[]=css#top</span></span></code></pre>\n<Alert title=\"URL (Uniform Resource Locator)\" color=\"blue\" mb=\"md\">\nUma URL é um endereço de uma localização específica na web e uma mecanismo que especifica a forma de recuperar este conteúdo, que pode ser um documento, uma imagem, um vídeo, etc.\n</Alert>\n<ul>\n<li><code>https://</code>: <strong>Protocolo de comunicação</strong> (padrão de comunicação utilizado entre o cliente e o servidor);</li>\n<li><code>user:password@</code>: <strong>Credenciais de autenticação para o <a href=\"https://datatracker.ietf.org/doc/html/rfc7617\">esquema Basic</a></strong> (obviamente, por questões de segurança, você <strong>não</strong> deve colocar suas credenciais diretamente na URL - inclusive, alguns navegadores <a href=\"https://crbug.com/82250#c7\">já não permitem mais isso</a>);</li>\n<li><code>blog</code>: <strong>Subdomínio</strong> (um domínio dentro de outro domínio);</li>\n<li><code>exemple.com.br</code>: <strong>Domínio</strong> (nome do site);</li>\n<li><code>.br</code>: <strong>TLD (Top Level Domain)</strong> (domínio de primeiro nível - identifica o país ou a região geográfica do site);</li>\n<li><code>.com.br</code>: <strong>SLD (Second Level Domain)</strong> (domínio de segundo nível - alguns são reservados para entidades específicas, como governos, universidades, etc.);</li>\n<li><code>:443</code>: <strong>Porta de comunicação</strong> (cada protocolo de comunicação possui uma porta padrão, por exemplo, o HTTP utiliza a porta 80 , HTTPS utiliza a porta 443. Porém, podemos utilizar outras portas, caso necessário);</li>\n<li><code>/posts</code>: <strong>Caminho do recurso no servidor</strong>;</li>\n<li><code>?s=javascript&amp;tags[]=html&amp;tags[]=css</code>: <strong>Parâmetros da requisição</strong> (informações adicionais que podem ser enviadas para o servidor);</li>\n<li><code>#top</code>: <strong>Âncora</strong> (identifica um local específico dentro de uma página - normalmente utilizado para rolar a página até o local desejado).</li>\n</ul>\n<h2>O construtor URL</h2>\n<p>O JavaScript possui um construtor chamado <code>URL</code> que nos permite criar um objeto com as informações de uma URL. Veja o exemplo abaixo:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-javascript\"><span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// Criando um objeto URL</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> url </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6;font-weight:bold;--shiki-dark-font-weight:bold\"> new</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> URL</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span></span>\n<span class=\"line\"><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">https://user:password@blog.exemple.com.br:443/posts?s=javascript&#x26;tags[]=html&#x26;tags[]=css#top</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// Exibindo o objeto URL</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">console.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">log</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(url);</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">/*</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">Você verá o seguinte resultado:</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">URL {</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  hash:  \"#top\"</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  host: \"blog.exemple.com.br\"</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  hostname: \"blog.exemple.com.br\"</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  href: \"https://user:password@blog.exemple.com.br:443/posts?s=javascript&#x26;tags[]=html&#x26;tags[]=css#top\"</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  origin: \"https://blog.exemple.com.br\"</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  password: \"password\"</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  pathname: \"/posts\"</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  port: \"\"</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  protocol: \"https:\"</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  search: \"?s=javascript&#x26;tags[]=html&#x26;tags[]=css\"</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  searchParams: URLSearchParams {size: 3}</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  username: \"user\"</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">}</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">*/</span></span></code></pre>\n<p>Note que a porta está vazia, pois o protocolo HTTPS utiliza a porta 443 por padrão. Caso houvesse uma porta diferente, ela seria exibida no atributo <code>port</code>.</p>\n<h2>O construtor URLSearchParams</h2>\n<p>O JavaScript também possui um construtor chamado <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams\"><code>URLSearchParams</code></a> que nos permite criar um objeto com os parâmetros de uma URL. Veja o exemplo abaixo:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-javascript\"><span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// Criando um objeto URLSearchParams</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> params </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6;font-weight:bold;--shiki-dark-font-weight:bold\"> new</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> URLSearchParams</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">s=javascript&#x26;tags[]=html&#x26;tags[]=css</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">);</span></span></code></pre>\n<p>Note que ele já é está presente no objeto URL que criamos anteriormente (no attributo <code>searchParams</code>), de modo que podemos acessar os parâmetros da URL da seguinte maneira:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-javascript\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> url </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6;font-weight:bold;--shiki-dark-font-weight:bold\"> new</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> URL</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span></span>\n<span class=\"line\"><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">https://user:password@blog.exemple.com.br:443/posts?s=javascript&#x26;tags[]=html&#x26;tags[]=css#top</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">console.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">log</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(url.searchParams.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">get</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">s</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)); </span><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// javascript</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">console.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">log</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(url.searchParams.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">get</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">tags</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)); </span><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// ['html', 'css']</span></span></code></pre>\n<h2>Uma nota importante sobre a âncora</h2>\n<p>Os navegadores não enviam a âncora para o servidor, de modo que, no nosso exemplo, os caracteres <code>#top</code> só é acessível do lado do navegador. Algumas pessoas utilizam este recurso para armazenar o estado da aplicação ou informações encriptadas na URL que só serão acessíveis do lado do navegador, sem nunca ter acesso à isso pelo servidor.</p>\n",
    "tags": [
      "javascript",
      "html",
      "Node.js"
    ],
    "translates": null
  },
  "ola-mundo": {
    "id": "7ba8zyw9of4afcw",
    "title": "Olá, mundo",
    "slug": "ola-mundo",
    "locale": "pt-BR",
    "created": "2021-01-01T15:00:00.000Z",
    "updated": "2022-12-29T14:52:10.686Z",
    "content": "<p>Um blog sobre computação e engenharia de software não poderia começar de outra\nforma. Desde que o <a href=\"https://en.wikipedia.org/wiki/The_C_Programming_Language\">primeiro livro sobre a linguagem de programação C</a> foi publicado por Brian Kernighan e Dennis Ritchie em 1978, milhares de programadores deram\nseus primeiros passos nessa disciplina escrevendo um programa que imprime “Hello, world”\n(apesar disso, a primeira versão conhecida desse programa a ser usado como exemplo foi escrita pelo mesmo\nKernighan no seu <em>A Tutorial Introduction to the Language B</em>, de 1972).</p>\n<p>Comecei a programar em 2009, quando entrei em uma empresa para prestar suporte\ntelefônico para serviços de hospedagem de sites de um grande provedor. Comecei\nfuçando o código dos sites, corrigindo alguns problemas, fazendo blogs para amigos…\nComo muitos de vocês, minha primeira linguagem de programação foi o PHP. Na época,\neu estudava saxofone na <a href=\"https://theatromunicipal.org.br/pt-br/escola-municipal-de-musica/\">Escola Municipal de Música de São Paulo</a>\ne eu tinha aspirações de me profissionalizar na música, então, nunca levei a sério\no estudo da programação. Apesar disso, fiz vários projetos como freelancer, como\ne-commerces, sites institucionais e blogs.</p>\n<p>Em 2012, através do ProUni, consegui uma bolsa de estudos integral para estudar\nEngenharia Civil na Universidade Anhembi Morumbi. Gostava muito do curso, consegui\nestágio numa ótima empresa durante a faculdade, fiz grandes amigos durante o curso\n(com os quais tenho contato até hoje) e comecei a publicar textos sobre engenharia\ne tecnologia na internet: primeiro no <a href=\"https://blogdaengenharia.com\">Blog da Engenharia</a>\ne depois no meu próprio blog, o <a href=\"https://engenharialivre.com\">Engenharia Livre</a>.</p>\n<p>Após finalizar o curso e entregar o meu <a href=\"https://github.com/douglasdemoura/tcc\">TCC (no qual fiz um programa para calcular pontes)</a>,\njuntamente com um amigo da faculdade, iniciamos uma empresa de projetos e construção,\na <a href=\"http://constrinew.com.br/\">Constrinew Engenharia</a> (a qual está funcionando até hoje).\nMas, mesmo já empreendendo na área de construção civil, eu estava recebendo muitas\nboas oportunidades para trabalhar com programação, devido aos contatos e aos projetos\nque haviam sido entregues no passado. E em 2019, eu recebi uma proposta irrecusável\ne fui trabalhar como engenheiro de software na <a href=\"https://www.avanade.com/pt-br\">Avanade</a>.</p>\n<p>Desde então, me dedico ao estudo da engenharia de software e faço cursos para me\ntornar um programador melhor. Espero que o material que vou produzir e publicar aqui\nseja útil para as pessoas que tiverem uma jornada parecida com a minha :)</p>\n",
    "tags": [
      "offtopic"
    ],
    "translates": null
  },
  "new-year-new-blog-or-how-i-created-this-blog-for-2023": {
    "id": "l1ko9m5j8svvm88",
    "title": "New year, new blog (or how I created this blog for 2023)",
    "slug": "new-year-new-blog-or-how-i-created-this-blog-for-2023",
    "locale": "en-US",
    "created": "2023-01-01T18:29:53.355Z",
    "updated": "2023-08-12T13:31:07.448Z",
    "content": "<p>New year, new blog! After delaying the publication of my blog for a long time, I finally finished developing it using <a href=\"https://nextjs.org/\">Next.js</a>, <a href=\"https://pocketbase.io/\">PocketBase</a>, and <a href=\"https://mantine.dev/\">Mantine</a>. Want to know why I chose these tools? Then, keep reading here with me.</p>\n<p>I’ve been creating blogs for a long time (since 2007). I started with Blogger, but then I migrated to WordPress. And that’s when I started to be interested in Linux and programming. I spent a lot of time creating themes, customizing plugins, reading documentation, and translating themes and plugins for WordPress. And, although WordPress is an excellent CMS for those who just want to publish a website as quickly as possible, this time I wanted something more personalized, containing all the features I would like to have and nothing more. From there, I started researching.</p>\n<p>I tried several CMSs (<a href=\"https://directus.io/\">Directus</a>, <a href=\"https://keystonejs.com/\">KeystoneJS</a>,\n<a href=\"https://strapi.io/\">Strapi</a> and <a href=\"https://getcockpit.com/\">Cockpit</a>), but what I found most simple to meet my need was <a href=\"https://pocketbase.io/\">PocketBase</a>, mainly because I intended to self-host my solution. The other CMSs are great, but when you’re a team of one, you have to choose the right tools. And what’s easier for one person to manage than an SQLite database? PocketBase already exposes database updates in real time with SSE, provides authentication and file management (with integration with S3), SDK for JavaScript and Flutter, and can even be used as a framework. All this within a small binary written in Go (if you want to know more about PocketBase, <a href=\"https://pocketbase.io/docs/\">read the documentation</a> and watch this video from <a href=\"https://www.youtube.com/watch?v=Wqy3PBEglXQ\">FireShip</a>, where he shows how to create a real-time chat system with PocketBase). And finally, in order to have real-time backups of my SQLite database and send them to S3, I use <a href=\"https://litestream.io/\">Litestream</a>. Well, having made the choice for the backend, let’s move on to the frontend.</p>\n<p>I tried <a href=\"https://astro.build/\">Astro</a> (which is excellent!) and <a href=\"https://remix.run/\">Remix</a>, but I ended up choosing Next.js, mainly because of the Vercel image generation library, which I use to generate images of the post, like this one:</p>\n<img src=\"https://douglasmoura.dev/api/v1/og?ok\" alt=\"The job that's never started as takes longest to finish\" />\n<p>And here we come to the choice of what I would use to create the styles of the blog. In recent years, I styled React applications with <a href=\"https://github.com/css-modules/css-modules\">CSS Modules</a>, <a href=\"https://styled-components.com/\">Styled Components</a>, <a href=\"https://stitches.dev/\">Stitches</a>, <a href=\"https://tailwindcss.com/\">Tailwind</a> and <a href=\"https://chakra-ui.com/\">Chakra UI</a>. I even stated to create a Design System with Stitches and Tailwind, but create an entire Design System all by myself would take a long time, so, I decided to take the shorter route.</p>\n<p>I have tried a few libraries until I found <a href=\"https://mantine.dev/\">Mantine</a>, which is an excellent library packaged with everything I wanted to use.\nFrom there, the work consisted of implementing the blog with the basic initial features:</p>\n<ul>\n<li><a href=\"https://nextjs.org/docs/basic-features/data-fetching/incremental-static-regeneration\">Incremental Static Regeneration</a> of posts;</li>\n<li>Form validation with <a href=\"https://github.com/colinhacks/zod\">Zod</a>;</li>\n<li>Nested comment system with anti-spam verification provided by <a href=\"https://akismet.com/\">Akismet</a>;</li>\n<li>Display of commentator avatars with <a href=\"http://pt.gravatar.com/\">Gravatar</a>;</li>\n<li>SVG Favicon with light/dark mode;</li>\n<li>I18n (Portuguese and English).</li>\n</ul>\n<p>With all that ready, I changed the canonical URLs of my articles on <a href=\"https://dev.to/douglasdemoura\">Dev.to</a> to point to the new URLs and finally published my blog.</p>\n<p>Of course, if you’re reading this on my blog now, you’ll see that an important feature is still missing: search. I’ll be studying possible solutions for this in the coming days, but I’ll already let you know that you can preview the functionality by pressing the <kbd>/</kbd> key on any page.</p>\n<p>Happy 2023, everyone 🎉.</p>\n",
    "tags": [
      "designsystem",
      "webdev",
      "programming"
    ],
    "translates": "6cotdaubg05n32i"
  },
  "valide-suas-variaveis-de-ambiente-com-zod": {
    "id": "uybmrtdz9y7iuzk",
    "title": "Valide suas variáveis de ambiente com Zod",
    "slug": "valide-suas-variaveis-de-ambiente-com-zod",
    "locale": "pt-BR",
    "created": "2024-08-15T13:51:14.579Z",
    "updated": "2024-08-15T14:16:39.812Z",
    "content": "<p><a href=\"https://github.com/colinhacks/zod\">Zod</a> é a biblioteca de validação mais famosa do ecossistema TypeScript. Com Zod, você cria um <em>schema</em> e valida seus dados de acordo com o <em>schema</em>. Observe o <em>schema</em> abaixo:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-ts\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">import</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> { z } </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">from</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">zod</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> UserSchema </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> z.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">object</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">({</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  name</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> z.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">string</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">().</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">min</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">1</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">),</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  age</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> z.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">number</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">({ coerce</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> }).</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">min</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">18</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">),</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  email</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> z.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">string</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">().</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">email</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(),</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">})</span></span></code></pre>\n<p>Este <em>schema</em> pode ser usado para validar um objeto da seguinte maneira:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-ts\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> data </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  name</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">John Doe</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  age</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> 18</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  email</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">john@example.com</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// Caso haja um erro na validação, lança um erro</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> validatedData </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> UserSchema.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">parse</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(data)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// Caso haja um erro na validação, retorna um objeto com erro, para você tratar posteriormente</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> safeValidatedData </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> UserSchema.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">safeParse</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(data)</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// => { success: false; error: ZodError }</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// => { success: true; data: 'billie' }</span></span></code></pre>\n<p>O Zod é capaz de fazer diversos tipos de validações nos seus dados, certifique-se de ler a <a href=\"https://github.com/colinhacks/zod\">documentação</a> para mais detalhes.</p>\n<h2>Validando as variáveis de ambiente</h2>\n<p>Podemos usar o Zod para validar os valores presentes no <a href=\"https://nodejs.org/api/process.html#processenv\"><code>process.env</code></a> e até processá-los antes de usar as variáveis de ambiente na nossa aplicação. Normalmente, eu gosto de criar um arquivo <code>environment.ts</code>, como no exemplo abaixo:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-ts\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">import</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> { z } </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">from</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">zod</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> environmentSchema </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> z.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">object</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">({</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  // Define os valores possíveis para o NODE_ENV, deixando sempre um valor padrão:</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  NODE_ENV</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> z.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">enum</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">([</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">test</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">development</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">production</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">]).</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">default</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">production</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">),</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  // Variáveis de ambiente sempre são definidas como strings. Aqui, transformo a string em número e defino um valor padrão: </span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  PORT</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> z.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">number</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">({ coerce</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> }).</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">default</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">3000</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">),</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">})</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">export</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> env </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> environmentSchema.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">parse</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(process.env)</span></span></code></pre>\n<p>Depois, é só importar a variável e usar ao longo da minha aplicação:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-ts\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">import</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> Fastify </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">from</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">fastify</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">import</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> { env } </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">from</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">./environment.js</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> app </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> Fastify</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">({ logger</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> })</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">app.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">listen</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">({ port</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> env.</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">PORT</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> }, (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">err</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (err) {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    app.log.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">error</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    process.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">exit</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">1</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">})</span></span></code></pre>\n",
    "tags": [
      "Tips",
      "TypeScript",
      "Zod"
    ],
    "translates": "j58woxctz6b7mpo"
  },
  "corrigindo-a-configuracao-do-teclado-americano-no-ubuntu": {
    "id": "1maxkvari818nwt",
    "title": "Corrigindo a configuração do teclado americano no Ubuntu",
    "slug": "corrigindo-a-configuracao-do-teclado-americano-no-ubuntu",
    "locale": "pt-BR",
    "created": "2024-07-29T13:26:35.627Z",
    "updated": "2024-08-07T14:27:45.659Z",
    "content": "<p>Neste fim de semana, troquei meu Macbook Air M1 (com o qual precisava lutar com o pouco armazenamento de 256 GB) por um Dell G3 3579 (onde fiz um upgrade para ter 40 GB de RAM, 500 GB SSD M.2 e um SSD de 1 TB) e, logo após instalar o Ubuntu 24.04, eu não estava conseguindo digitar o ç no me teclado Keychron K2 v.2 (sempre que tentava digitar um ç, me aparecia um ć).</p>\n<p>Acontece que, ao invés de digitar <kbd>'</kbd> + <kbd>c</kbd>, para obter o <kbd>ç</kbd>, teria que digitar  <kbd>Alt Grd</kbd> + <kbd>&lt;</kbd><kbd>c</kbd>. Como não queria me adaptar à essa mudança, fiz uma rápida pesquisa e descobri que a solução é adicionar a variável de ambiente <code>GTK_IM_MODULE=cedilla</code> no arquivo <code>/etc/environment</code> (<a href=\"https://help.ubuntu.com/community/EnvironmentVariables\">afetando todos os usuários do sistema</a>) ou no arquivo <code>~/.profile</code> (o que afeta apenas o seu usuário). Para corrigir o problema para todos os usuários do computador, eu anexei essa variável de ambiente ao fim do arquivo <code>/etc/environment</code> da seguinte maneira:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">sudo</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> sh</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> -c</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">echo \"GTK_IM_MODULE=cedilla\" >> /etc/environment</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span></code></pre>\n<p>Depois disso, reinicie sua sessão de usuário (<em>logout</em> e <em>login</em>) ou reinicie o computador.</p>\n<hr>\n<h2>Fonte</h2>\n<p><a href=\"https://askubuntu.com/questions/1291492/cedilha-getting-%C4%87-rather-than-%C3%A7-after-upgrade-to-20-10\">Ask Ubuntu</a></p>\n",
    "tags": [
      "Ubuntu",
      "Linux",
      "Dicas"
    ],
    "translates": null
  },
  "gerando-hashes-md5-no-node-js": {
    "id": "zj7xcfn2r753ld7",
    "title": "Gerando hashes MD5 no Node.js",
    "slug": "gerando-hashes-md5-no-node-js",
    "locale": "pt-BR",
    "created": "2024-01-22T20:36:58.299Z",
    "updated": "2024-01-23T13:20:20.671Z",
    "content": "<p>Você pode criar <em>hashes</em> com Node.js sem a necessidade instalar nenhuma biblioteca externa. Normalmente eu crio a seguinte função utilitária nos projetos em que trabalho:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-javascript\"><span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">/**</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\"> * Cria um hash MD5 para a string dada</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\"> *</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\"> * </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">@param</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> {string}</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\"> str</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\"> * </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">@returns</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> {string}</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\"> */</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">export</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> md5</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">str</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> createHash</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">md5</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">).</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">update</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(str).</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">digest</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">hex</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span></span></code></pre>\n<p>E a uso para substituir a biblioteca <a href=\"https://www.npmjs.com/package/md5\">md5</a> sempre que encontro.</p>\n<p>Note que você pode criar <em>hashes</em> para qualquer algoritmo suportado pela versão do OpenSSL da sua plataforma. No Linux e no Mac, você pode ver quais os algoritmos disponíveis com o comando <code>openssl list -digest-algorithms</code>.</p>\n",
    "tags": [
      "javascript",
      "Node.js"
    ],
    "translates": "bdwhaei947bfrx4"
  },
  "generating-md5-hashes-on-node-js": {
    "id": "bdwhaei947bfrx4",
    "title": "Generating MD5 hashes on Node.js",
    "slug": "generating-md5-hashes-on-node-js",
    "locale": "en-US",
    "created": "2024-01-23T13:20:06.581Z",
    "updated": "2024-01-23T13:29:10.648Z",
    "content": "<p>You can create hashes in Node.js without the need to install any external library. Usually, I create the following utility function in the projects I work on:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-javascript\"><span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">/**</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\"> * Hashes a string using md5</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\"> *</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\"> * </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">@param</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> {string}</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\"> str</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\"> * </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">@returns</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\"> {string}</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\"> */</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">export</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> md5</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">str</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> createHash</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">md5</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">).</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">update</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(str).</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">digest</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">hex</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span></span></code></pre>\n<p>And I use it to replace the <a href=\"https://www.npmjs.com/package/md5\">md5</a> library whenever I come across it.</p>\n<p>Note that you can create hashes for any algorithm supported by the OpenSSL version on your platform. On Linux and Mac, you can see which algorithms are available with the command <code>openssl list -digest-algorithms</code>.</p>\n",
    "tags": [
      "Node.js",
      "javascript"
    ],
    "translates": "zj7xcfn2r753ld7"
  },
  "o-minimo-que-voce-precisa-saber-para-testar-suas-apis-com-curl": {
    "id": "5ufu9x2h9ilz2jr",
    "title": "O mínimo que você precisa saber para testar suas APIs com CURL",
    "slug": "o-minimo-que-voce-precisa-saber-para-testar-suas-apis-com-curl",
    "locale": "pt-BR",
    "created": "2023-08-30T17:28:52.275Z",
    "updated": "2024-06-02T00:24:20.126Z",
    "content": "<p>O <a href=\"https://github.com/curl/curl\">CURL</a> é uma ferramenta de linha de comando que permite transmitir dados com sintaxe de URL, suportando uma miríade de protocolos (DICT, FILE, FTP, FTPS, GOPHER, GOPHERS, HTTP, HTTPS, IMAP, IMAPS, LDAP, LDAPS, MQTT, POP3, POP3S, RTMP, RTMPS, RTSP, SCP, SFTP, SMB, SMBS, SMTP, SMTPS, TELNET, TFTP, WS e WSS). Neste artigo, vou focar no uso do CURL para fazer requisicões HTTP para APIs, que, pelo menos, para mim, é o uso mais comum.</p>\n<h2>Instalação</h2>\n<p>O CURL já vem instalado na maioria das distribuições Linux e nas versões <a href=\"https://techcommunity.microsoft.com/t5/containers/tar-and-curl-come-to-windows/ba-p/382409\">mais recentes do Windows</a>. Para verificar se ele está instalado, basta executar o comando <code>curl</code> no terminal. Se você não tiver o CURL instalado, você pode instalar com o comando <code>sudo apt install curl</code> (Ubuntu/Debian) ou <code>sudo yum install curl</code> (CentOS/Fedora) ou <code>winget install curl</code> (Windows).</p>\n<p>Ah, e como é comum que trabalhemos com APIs REST no desenvolvimento web, outra ferramenta de linha de comando que nos será útil é a <a href=\"https://jqlang.github.io/jq/\"><code>jq</code></a>, que serve para formatar o JSON no terminal. Para instalar a <code>jq</code>, basta executar o comando <code>sudo apt install jq</code> (Ubuntu/Debian) ou <code>sudo yum install jq</code> (CentOS/Fedora) ou <code>winget install jqlang.jq</code> (Windows).</p>\n<h2>Nossa API de exemplo</h2>\n<p>Para fins didáticos, vou usar o <a href=\"https://dummyjson.com/\">DummyJSON</a> como API.</p>\n<h2>Fazendo uma requisição GET</h2>\n<p>Para fazer uma requisição GET, basta executar o comando <code>curl</code> seguido da URL que você quer acessar. Por exemplo, para solicitar os dados do produto 1, basta executar o comando <code>curl https://dummyjson.com/products/1</code>.</p>\n<p>E, para formatar a saída, basta adiciona um <code>| jq</code> ao final do comando:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">curl</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> https://dummyjson.com/products/1</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> |</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> jq</span></span></code></pre>\n<h2>Fazendo uma requisição POST,  PUT,  PATCH ou DELETE com JSON no corpo</h2>\n<p>Para fazer uma requisição POST, basta executar:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">curl</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> --json</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">{\"title\": \"Novo produto\"}</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> https://dummyjson.com/products/add</span></span></code></pre>\n<p>O <code>curl</code> se encarregará de adicionar os cabeçalhos <code>Content-Type: application/json</code> e <code>Accept: application/json</code>. Caso queira fazer uma requisição do tipo <code>PUT</code>, <code>PATCH</code> ou <code>DELETE</code>, adicione a opção <code>-X</code> seguida do método HTTP que você quer usar. Por exemplo, para fazer um <code>PUT</code>, execute:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">curl</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> -X</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> PUT</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> --json</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">{\"title\": \"Novo título\"}</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> https://dummyjson.com/products/1</span></span></code></pre>\n<p>Você também pode enviar um arquivo JSON ao invés de digitar o JSON no terminal colocando um <code>@</code> na frente do nome do arquivo:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">curl</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> --json</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> @arquivo.json</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> https://dummyjson.com/products/add</span></span></code></pre>\n<p>Ou passando os dados do <a href=\"https://man.archlinux.org/man/stdin.3.en\"><em>stdin</em></a> (note que eu uso <code>@-</code> ao invés de <code>@</code> para indicar que os dados virão do <em>stdin</em>):</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">curl</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> --json</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> @-</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> https://dummyjson.com/products/add</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> &#x3C;</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> arquivo.json</span></span></code></pre>\n<h2>Fazendo uma requisição com cabeçalhos</h2>\n<p>Para fazer uma requisição com cabeçalhos, basta executar o comando <code>curl</code> seguido da URL que você quer acessar, e da opção <code>-H</code> seguida do cabeçalho que você quer enviar. Então, para enviar um Bearer Token, você executaria o seguinte comando:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">curl</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> -H</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Authentication: Bearer token</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> --json</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">{\"title\": \"Novo produto\"}</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> https://dummyjson.com/products/add</span></span></code></pre>\n<h2>Alguns exercícios</h2>\n<p>Julia Evans publicou alguns exercícios para você ficar fluente no uso do curl. Vale a pena dar uma olhada <a href=\"https://jvns.ca/blog/2019/08/27/curl-exercises/\">neste artigo</a> no blog dela.</p>\n<h2>Referências</h2>\n<ul>\n<li><a href=\"https://manpages.ubuntu.com/manpages/lunar/en/man1/curl.1.html\">curl manpage</a></li>\n</ul>\n",
    "tags": [
      "curl",
      "API",
      "HTTP"
    ],
    "translates": "pgltwbdkto3gado"
  },
  "renderizando-jsx-no-servidor-com-fastify": {
    "id": "p7310widh7o7h9e",
    "title": "Renderizando JSX no servidor com Fastify",
    "slug": "renderizando-jsx-no-servidor-com-fastify",
    "locale": "pt-BR",
    "created": "2024-01-25T00:16:10.675Z",
    "updated": "2024-01-25T00:42:27.538Z",
    "content": "<p><a href=\"https://facebook.github.io/jsx/\">JSX</a> é uma excelente abstração para montar interfaces. Introduzida pelo Facebook e popularizada pelo React, trata-se de uma extensão do JavaScript para abstrair a chamada de funções aninhadas. É esperado que o código JSX seja pré-processado (transpilado) para JavaScript válido antes de ser executada nos navegadores ou em ambientes como Node.js.</p>\n<h2>Configuração do projeto</h2>\n<p>Antes de tudo, vamos iniciar o nosso projeto e instalar as dependências necessárias:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-text\"><span class=\"line\"><span>npm init -y</span></span>\n<span class=\"line\"><span>npm i fastify react react-dom</span></span>\n<span class=\"line\"><span>npm i -D @types/node @types/react @types/react-dom tsx typescript</span></span></code></pre>\n<p>Agora, configuramos os <em>scripts</em> do nosso projeto. O <code>package.json</code> deverá ficará assim:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-json\"><span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">  \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">type</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">module</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">  \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">name</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">fastify-react</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">  \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">version</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">1.0.0</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">  \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">author</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Douglas Moura &#x3C;douglas.ademoura@gmail.com></span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">  \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">description</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">POC on rendering React components from Fastify</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">  \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">main</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">dist/main.js</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">  \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">scripts</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">start</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">tsc &#x26;&#x26; node dist/main.js</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">dev</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">tsx --watch src/main.tsx</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">build</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">tsc</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  },</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">  \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">license</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">ISC</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">  \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">dependencies</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">fastify</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">^4.25.2</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">react</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">^18.2.0</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">react-dom</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">^18.2.0</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  },</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">  \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">devDependencies</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">@types/node</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">^20.11.6</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">@types/react</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">^18.2.48</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">@types/react-dom</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">^18.2.18</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">tsx</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">^4.7.0</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">typescript</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">^5.3.3</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<p>E esse é o <code>tsconfig.json</code> que iremos utilizar:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-json\"><span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">  \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">compilerOptions</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">target</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">ESNext</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">module</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">ESNext</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">lib</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> [</span></span>\n<span class=\"line\"><span style=\"color:#E9F284;--shiki-dark:#E9F284\">      \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">dom</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#E9F284;--shiki-dark:#E9F284\">      \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">es6</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#E9F284;--shiki-dark:#E9F284\">      \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">es2017</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#E9F284;--shiki-dark:#E9F284\">      \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">esnext.asynciterable</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    ],</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">skipLibCheck</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">  true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">sourceMap</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">  false</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">outDir</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">./dist</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">moduleResolution</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">node</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">removeComments</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">  true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">noImplicitAny</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">  true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">strictNullChecks</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">  true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">strictFunctionTypes</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">  true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">noImplicitThis</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">  true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">noUnusedLocals</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">  true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">noUnusedParameters</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">  true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">noImplicitReturns</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">  true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">noFallthroughCasesInSwitch</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">  true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">allowSyntheticDefaultImports</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">  true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">esModuleInterop</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">  true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">emitDecoratorMetadata</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">  true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">experimentalDecorators</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">  true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">resolveJsonModule</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">  true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">baseUrl</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">.</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">    \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">jsx</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">react-jsx</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  },</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">  \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">exclude</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> [</span></span>\n<span class=\"line\"><span style=\"color:#E9F284;--shiki-dark:#E9F284\">    \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">node_modules</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  ],</span></span>\n<span class=\"line\"><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">  \"</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD\">include</span><span style=\"color:#8BE9FE;--shiki-dark:#8BE9FE\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> [</span></span>\n<span class=\"line\"><span style=\"color:#E9F284;--shiki-dark:#E9F284\">    \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">./src/**/*.ts</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#E9F284;--shiki-dark:#E9F284\">    \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">./src/**/*.tsx</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  ]</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<h2>Criando nossos componentes</h2>\n<p>O ecossistema do React já fornece as ferramentas necessárias para renderizarmos os nossos componentes para HTML e enviarmos diretamente do servidor para o nosso cliente. Então, primeiro, vamos criar o componente raiz:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-ts\"><span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// src/components/root.tsx</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">type</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">  RootProps</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  children</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">  React</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">.</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">ReactNode</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  title</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">  string</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">export</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  function</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">  Root</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">({ </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">children</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">title</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> }</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">  RootProps</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    &#x3C;</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">html  lang</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">en</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">></span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      &#x3C;</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">head</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">></span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">        &#x3C;</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">meta  charSet</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">utf-8</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  /></span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">        &#x3C;</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">meta  name</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">viewport</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  content</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">width=device-width, initial-scale=1</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  /></span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">        &#x3C;</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">title</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">>{title}</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">&#x3C;/</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">title</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">></span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">      &#x3C;/</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">head</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">></span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      &#x3C;</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">body</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">>{children}</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">&#x3C;/</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">body</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">></span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    &#x3C;/</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">html</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">></span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  )</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<p>E nossa página inicial:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-ts\"><span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// src/components/index.tsx</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">export</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  function</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">  App</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">() {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    &#x3C;</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">h1</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">></span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">Hello</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, World</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">!&#x3C;/</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">h1</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">></span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  )</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<h2>Configurando o Fastify para renderizar nosso componente React</h2>\n<p>Como não pretendemos carregar o React para hidratar o nosso HTML do lado do cliente, podemos usar a função <code>renderToStaticMarkup</code> exportada de <code>react-dom/server</code>. Nosso arquivo de inicialização do servidor ficará assim:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-ts\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">import</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> Fastify </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">from</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">fastify</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">import</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> { renderToStaticMarkup } </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">from</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">react-dom/server</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// Importando com o `.js` no final, o arquivo \"buildado\"</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// fará as importações corretamente e você não deverá ver nenhum erro na</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// IDE, ainda que os arquivos tenham a extensão `.tsx`.</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">import</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> { App } </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">from</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">./components/index.js</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">import</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> { Root } </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">from</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">./components/root.js</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">type</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">  RenderArgs</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  children</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">  React</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">.</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">ReactNode</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  title</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">  string</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">  render</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> ({ </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">title</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">children</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> }</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">  RenderArgs</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">  // Aqui, inserimos `&#x3C;!DOCTYPE html>`</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> `&#x3C;!DOCTYPE html></span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">${</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">renderToStaticMarkup</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    &#x3C;</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">Root</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  title</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">{</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">title</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">}</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">></span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">{</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">children</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">}</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">&#x3C;/</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">Root</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">></span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  )</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">}</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">`</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> fastify </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">  Fastify</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">({</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  logger</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">  true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">})</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">fastify.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">get</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">/</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">async</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  function</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">  handler</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">_request</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">reply</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  reply.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">type</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">text/html</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">  render</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">({ children</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  &#x3C;</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">App</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  />, title</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Hello, World!</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> })</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">})</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">try</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  await</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> fastify.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">listen</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">({ port</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">  3000</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> })</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">} </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">catch</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (err) {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  fastify.log.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">error</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  process.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">exit</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">1</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<p>Se você iniciar o projeto agora (<code>npm run dev</code>), você deverá ver a página em <a href=\"http://localhost:3000\">http://localhost:3000</a>. Claro, podemos melhorar a nossa implementação usando a nova API de stream, introduzida no React 18 (<a href=\"https://github.com/reactwg/react-18/discussions/106#discussion-3611411\">que é o método recomendado</a>). Para isso, faremos as seguintes alterações no nosso código:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-ts\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">import</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> Fastify </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">from</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">fastify</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">import</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> { renderToStaticNodeStream } </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">from</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">react-dom/server</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">import</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> { Transform } </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">from</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">node:stream</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">import</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> { App } </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">from</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">./components/index.js</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">import</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> { Root } </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">from</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">./components/root.js</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">type</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">  RenderArgs</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  children</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">  React</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">.</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">ReactNode</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  title</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">  string</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">  render</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> ({ </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">title</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">children</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> }</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">  RenderArgs</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  let</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  isFirstChunk  </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">  true</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  prepend  </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6;font-weight:bold;--shiki-dark-font-weight:bold\">  new</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">  Transform</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">({</span></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">    transform</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">chunk</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">_encoding</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">callback</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">      if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (isFirstChunk) {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">        isFirstChunk  </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">  false</span></span>\n<span class=\"line\"><span style=\"color:#BD93F9;--shiki-dark:#BD93F9;font-style:italic;--shiki-dark-font-style:italic\">        this</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">push</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">&#x3C;!DOCTYPE html></span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">      }</span></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">      callback</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">null</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, chunk)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    },</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  })</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">  renderToStaticNodeStream</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    &#x3C;</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">Root  title</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">{title}</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">{children}</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">&#x3C;/</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">Root</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">></span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  ).</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">pipe</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(prepend)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  fastify  </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">  Fastify</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">({</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  logger</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">  true</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">})</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">fastify.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">get</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">/</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">async</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  function</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">  handler</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">_request</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">reply</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  stream  </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">  render</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">({ children</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  &#x3C;</span><span style=\"color:#8BE9FD;--shiki-dark:#8BE9FD;font-style:italic;--shiki-dark-font-style:italic\">App</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  />, title</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">  '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Hello, World!</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> })</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  reply.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">type</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">text/html</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  reply.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">send</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(stream)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">})</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">try</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  await</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  fastify.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">listen</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">({ port</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">  3000</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> })</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">} </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">catch</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (err) {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  fastify.log.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">error</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  process.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">exit</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">1</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<p>E com isso, conseguimos renderizar nossos componentes React do lado do servidor e fazer <em>streaming</em> deles para o nosso cliente. E este é o <a href=\"https://github.com/DouglasdeMoura/react-fastify\">link</a> do repositório.</p>\n",
    "tags": [
      "Dicas",
      "Node.js",
      "javascript",
      "Fastify"
    ],
    "translates": "91sox12o3ozzl5n"
  },
  "como-fazer-um-push-de-um-commit-vazio-no-git": {
    "id": "e62l4z2ckms6roz",
    "title": "Como fazer um push de um commit vazio no Git",
    "slug": "como-fazer-um-push-de-um-commit-vazio-no-git",
    "locale": "pt-BR",
    "created": "2023-01-13T20:58:55.955Z",
    "updated": "2023-01-13T21:04:57.659Z",
    "content": "<p>Voê já teve que rodar, novamente, uma <a href=\"https://www.redhat.com/pt-br/topics/devops/what-cicd-pipeline\">pipeline de CI/CD</a> que é iniciada por um commit no repositório, quando não há nenhuma alteração no código fonte para ser “commitada”?</p>\n<p>Ora, é só usar o comando abaixo:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">git</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> commit</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> --allow-empty</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> -m</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> \"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">ci: aciona pipeline com um commit vazio</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span></span></code></pre>\n<p>E agora, só precisa fazer o push para o repositório remoto:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">git</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> push</span></span></code></pre>\n",
    "tags": [
      "Git"
    ],
    "translates": null
  },
  "creating-native-modals-with-the-dialog-element": {
    "id": "pd682cq57ureywz",
    "title": "Creating native modals with the dialog element",
    "slug": "creating-native-modals-with-the-dialog-element",
    "locale": "en-US",
    "created": "2023-08-13T19:29:49.318Z",
    "updated": "2023-08-15T00:22:38.749Z",
    "content": "<p>Using custom dialog elements instead of native browser implementations, such as <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/alert\"><code>alert</code></a>,\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/confirm\"><code>confirm</code></a>, or <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/prompt\"><code>prompt</code></a>,\nhas become the standard for web development for quite some time (popularized by various <a href=\"https://jqueryui.com/dialog/\">jQuery</a> plugins and by <a href=\"https://getbootstrap.com/2.3.2/javascript.html#modals\">Bootstrap</a> itself), so that with every new UI library that emerges<sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1\">[1]</a></sup><sup class=\"footnote-ref\"><a href=\"#fn2\" id=\"fnref2\">[2]</a></sup><sup class=\"footnote-ref\"><a href=\"#fn3\" id=\"fnref3\">[3]</a></sup>, it is common for its authors to re-implement a modal with the framework of the moment (which may or may not implement <a href=\"https://www.w3.org/WAI/ARIA/apg/patterns/dialog-modal/\">WAI-ARIA accessibility</a>).</p>\n<p>But now, with the arrival of the <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog\"><code>&lt;dialog&gt;</code></a> element in HTML5 (supported by <a href=\"https://caniuse.com/dialog\">93.85%</a> of browsers in use), it is much easier to create dialogs natively. In this article, we will see how to create a simple modal (and non-modal) dialog with the <code>&lt;dialog&gt;</code> element.</p>\n<h2>Understanding the <em>dialog</em> element</h2>\n<p>In the sense employed in user interface development, a <strong>dialog</strong> is a <q>conversation</q> between the system and the user, where the system expects a response from the user to continue. A dialog can be <strong>modal</strong> or <strong>non-modal</strong>. A modal dialog (that is, one that changes the <strong>mode</strong> of interaction of the user with the system) is one that locks the interface, preventing the user from interacting with the rest of the page until it is closed. A non-modal dialog (that is, one that <em>does not</em> change the <strong>mode</strong> of interaction of the user with the system), on the other hand, allows the user to interact with the rest of the page while the dialog is open.</p>\n<p>The simplest way to put a non-modal dialog on the screen is as follows:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-html\"><span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">&#x3C;</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">dialog</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B;font-style:italic;--shiki-dark-font-style:italic\"> open</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">></span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  &#x3C;</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">p</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">>Olá, mundo!&#x3C;/</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">p</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">></span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  &#x3C;</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">form</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B;font-style:italic;--shiki-dark-font-style:italic\"> method</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">dialog</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">\"</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">></span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">    &#x3C;</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">button</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">>Fechar&#x3C;/</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">button</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">></span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  &#x3C;/</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">form</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">></span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">&#x3C;/</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">dialog</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">></span></span></code></pre>\n<p>Note the form, on line 5, with the <em>dialog</em> method. It is this form that sends actions to the <code>dialog</code>. It will be displayed like this:</p>\n<iframe loading=\"lazy\" allowtransparency allowfullscreen height=\"380px\" width=\"100%\" title=\"Styled Dialog\" src=\"https://codepen.io/douglasdemoura/embed/zYMgBOz\n?default-tab=result&embed-version=2\"></iframe><p>What makes the example above a non-modal dialog is the use of the <code>open</code> attribute (line 1), which also makes it unable to be closed with the <code>Esc</code> key. It’s possible to create a non-modal dialog using the JavaScript API:</p>\n<iframe loading=\"lazy\" allowtransparency allowfullscreen height=\"380px\" width=\"100%\" title=\"Styled Dialog\" src=\"https://codepen.io/douglasdemoura/embed/BaGXqjx\n?default-tab=result&embed-version=2\"></iframe><p>In order for it to behave like a modal, it is necessary to open it through its JavaScript API, as we will see next.</p>\n<iframe loading=\"lazy\" allowtransparency allowfullscreen height=\"380px\" width=\"100%\" title=\"Styled Dialog\" src=\"https://codepen.io/douglasdemoura/embed/VwVojZB\n?default-tab=result&embed-version=2\"></iframe><p>This time, we open and close the modal with JavaScript and put the form result in the <code>output</code> element when the modal is closed. Read the code carefully and try to understand what is happening.</p>\n<h2>Styling the modal</h2>\n<p>The <code>dialog</code> element can (of course), be styled like any other HTML element. However, note that, to style the overlay (the dark background behind the modal), it is necessary to use the <code>::backdrop</code> selector:</p>\n<iframe loading=\"lazy\" allowtransparency allowfullscreen height=\"380px\" width=\"100%\" title=\"Styled Dialog\" src=\"https://codepen.io/douglasdemoura/embed/gOQVMYE\n?default-tab=result&embed-version=2\"></iframe><h2>Polyfill</h2>\n<p>If you want to use <code>dialog</code> and don’t have compatibility issues in older browsers, you can use this <a href=\"https://github.com/GoogleChrome/dialog-polyfill\">polyfill</a>.</p>\n<hr />\n<h3>References</h3>\n<ul>\n<li><a href=\"https://web.dev/learn/html/dialog/\">Dialog</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog\">Dialog</a></li>\n<li><a href=\"https://www.nngroup.com/articles/modal-nonmodal-dialog/\">Modal &amp; Nonmodal Dialogs: When (&amp; When Not) to Use Them</a></li>\n</ul>\n<hr class=\"footnotes-sep\">\n<section class=\"footnotes\">\n<ol class=\"footnotes-list\">\n<li id=\"fn1\" class=\"footnote-item\"><p><a href=\"https://mui.com/material-ui/react-modal/\">Material UI Modal</a> <a href=\"#fnref1\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn2\" class=\"footnote-item\"><p><a href=\"https://ant.design/components/modal\">Ant Design Modal</a> <a href=\"#fnref2\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn3\" class=\"footnote-item\"><p><a href=\"https://carbondesignsystem.com/components/modal/usage/#live-demo\">Carbon Design System Modal</a> <a href=\"#fnref3\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n</ol>\n</section>\n",
    "tags": [
      "html",
      "javascript",
      "tutorial"
    ],
    "translates": "066kuym52jk3nbp"
  },
  "what-is-a-rpc-remote-procedure-call": {
    "id": "2jd9yuw0klpgymp",
    "title": "What is a RPC (Remote Procedure Call)?",
    "slug": "what-is-a-rpc-remote-procedure-call",
    "locale": "en-US",
    "created": "2022-10-07T15:00:00.000Z",
    "updated": "2022-12-29T14:51:32.038Z",
    "content": "<p>A <strong>remote procedure call</strong> (RPC) is a mechanism of communication between two computational environments, where one can be identified as a client, while the other can be identified as a server.</p>\n<p>From the client’s point of view, the RPC is just a matter of calling a function with the desired arguments and await for the response, in order to continue the program’s execution.</p>\n<p><img src=\"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p3733ruz3n51tadloaaq.png\" alt=\"Diagram on how a RPC (remote procedure call) works\"></p>\n<p>Thus, using an RPC allows one programmer to distribute the system, according to their needs.</p>\n<p><strong>References:</strong></p>\n<ul>\n<li><a href=\"https://www.youtube.com/watch?v=gr7oaiUsxSU\">RPC Vs Simple Procedure Call - Georgia Tech - Advanced Operating Systems</a></li>\n<li><a href=\"https://learn.microsoft.com/en-us/windows/win32/rpc/how-rpc-works\">How RPC works</a></li>\n<li><a href=\"https://users.cs.cf.ac.uk/Dave.Marshall/C/node33.html\">Remote Procedure Calls (RPC)</a></li>\n<li><a href=\"https://web.archive.org/web/20030404113118/http://techpubs.sgi.com/library/tpl/cgi-bin/getdoc.cgi?coll=0650&amp;db=bks&amp;srch=&amp;fname=/SGI_Developer/IRIX_NetPG/sgi_html/ch04.html\">Introduction to RPC Programming</a></li>\n<li><a href=\"https://colinhacks.com/essays/painless-typesafety\">Building an end-to-end typesafe API — without GraphQL</a></li>\n</ul>\n",
    "tags": [
      "programming",
      "computerscience",
      "rpc",
      "beginners"
    ],
    "translates": null
  },
  "what-is-a-first-class-citizen-in-computer-science": {
    "id": "wcz61fkqkj5y6se",
    "title": "What is a first-class citizen in computer science?",
    "slug": "what-is-a-first-class-citizen-in-computer-science",
    "locale": "en-US",
    "created": "2022-10-08T15:00:00.000Z",
    "updated": "2022-12-29T14:51:27.174Z",
    "content": "<p>In computer science, a <strong>first-class citizen</strong> is an entity that supports all operations available to other entities. Some of the available operations are:</p>\n<ul>\n<li>They may be named by variables;</li>\n<li>They may be passed as arguments to procedures;</li>\n<li>They may be returned as the results of procedures;</li>\n<li>They may be included in data structures.</li>\n</ul>\n<p>It was the British computer scientist Christopher Strachey (1916-1975) <a href=\"https://link.springer.com/article/10.1023/A:1010052305354\">who first</a> coined this notion of first-class citizen status of elements in a programming language in the 1960s.</p>\n<p>In JavaScript, for example, functions are first-class citizens, as all of the operations cited above can be applied to them. Let’s see some examples:</p>\n<p><strong>A simple function definition in JavaScript</strong></p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-javascript\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">function</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> sum</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">a</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">b</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> a </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">+</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> b</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n<p><strong>Assigning a constant to a function</strong></p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-javascript\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> sum</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> =</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">a</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">b</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> a </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">+</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> b</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// or</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// </span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// const sum = function (a, b) {</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">//   a + b</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// }</span></span></code></pre>\n<p><strong>Passing a function as an argument</strong></p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-javascript\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">function</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> sum</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">a</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">b</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">callback</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> result </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> a </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">+</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> b</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">typeof</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> callback </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">===</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\"> '</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">function</span><span style=\"color:#E9F284;--shiki-dark:#E9F284\">'</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">    callback</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(result) </span><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// pass the result as an argument of `callback`</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> result</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">//        Pass `console.log` as the callback function</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// -------\\/</span></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">sum</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">2</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">2</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, console.log) </span><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// => 4</span></span></code></pre>\n<p><strong>Return a function</strong></p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-javascript\"><span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">function</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> sum</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">a</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">b</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">callback</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> result </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> a </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">+</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> b</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  if</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (callback) {</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">    return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> () </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> callback</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(result)</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">  return</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> result</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">//            The callback is the sum of the result with 2.</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// ------------------\\/</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> fn </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> sum</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">2</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">2</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">result</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\"> sum</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">2</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, result))</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">//    ^---- Store the returned function in a variable</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">//          Execute the function</span></span>\n<span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// ---------\\/</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">console.</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">log</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">(</span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">fn</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">()) </span><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// => 6</span></span></code></pre>\n<p><strong>Including a function in a data structure</strong></p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-javascript\"><span class=\"line\"><span style=\"color:#6272A4;--shiki-dark:#6272A4\">// Store the basic operations in an object</span></span>\n<span class=\"line\"><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">const</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> operations </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> {</span></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">  sum</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">a</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">b</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> a </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">+</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> b,</span></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">  sub</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">a</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">b</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> a </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">-</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> b,</span></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">  mul</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">a</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">b</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> a </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">*</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> b,</span></span>\n<span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">  div</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">:</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> (</span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">a</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">, </span><span style=\"color:#FFB86C;--shiki-dark:#FFB86C;font-style:italic;--shiki-dark-font-style:italic\">b</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">) </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=></span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> a </span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">/</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> b,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">}</span></span></code></pre>\n",
    "tags": [
      "javascript",
      "computerscience",
      "programming",
      "beginners"
    ],
    "translates": null
  },
  "instalando-o-whatsapp-no-linux": {
    "id": "d3govdnqx3prpgq",
    "title": "Instalando o WhatsApp no Linux",
    "slug": "instalando-o-whatsapp-no-linux",
    "locale": "pt-BR",
    "created": "2024-07-29T17:18:23.361Z",
    "updated": "2024-07-29T17:34:53.815Z",
    "content": "<p>Infelizmente, o WhatsApp não fornece um aplicativo oficial para o Linux. Felizmente, se você tem o <a href=\"https://www.google.com/intl/pt-BR/chrome/\">Google Chrome</a> ou o Chromium instalado no seu computador, você pode instalar a página como uma aplicação. Siga os passos abaixo:</p>\n<h3>1. Baixe um ícone para a sua aplicação</h3>\n<p>Eu, por exemplo, escolhi <a href=\"https://github.com/mimbrero/whatsapp-desktop-linux/blob/main/data/icons/hicolor/512x512/apps/io.github.mimbrero.WhatsAppDesktop.png\">este</a> ícone para o WhatsApp no meu computador. Se quiser utilizar o mesmo, execute o seguinte comando no terminal:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"line\"><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">ICON_INSTALLATION_DIR</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\">=</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">~/.local/share/web-apps/icons</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> &#x26;&#x26; </span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">mkdir</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> -p</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> $ICON_INSTALLATION_DIR</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> &#x26;&#x26; </span><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">wget</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\"> https://raw.githubusercontent.com/mimbrero/whatsapp-desktop-linux/main/data/icons/hicolor/512x512/apps/io.github.mimbrero.WhatsAppDesktop.png</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> -P</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\"> $ICON_INSTALLATION_DIR</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">/WhatsApp.png</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\"> </span></span></code></pre>\n<p>O comando acima irá criar o diretório <code>~/.local/share/web-apps</code> e baixará o ícone do WhatsApp.</p>\n<h3>2. Crie o <a href=\"https://wiki.archlinux.org/title/Desktop_entries\"><em>desktop entry</em></a> da aplicação</h3>\n<p>Para criar o arquivo <a href=\"https://wiki.archlinux.org/title/Desktop_entries\"><em>desktop entry</em></a> da aplicação, execute o seguinte comando:</p>\n<pre class=\"shiki shiki-themes dracula dracula\" style=\"background-color:#282A36;--shiki-dark-bg:#282A36;color:#F8F8F2;--shiki-dark:#F8F8F2\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"line\"><span style=\"color:#50FA7B;--shiki-dark:#50FA7B\">cat</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> &#x3C;&#x3C;</span><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">EOF</span><span style=\"color:#FF79C6;--shiki-dark:#FF79C6\"> ></span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">~/.local/share/applications/WhatsApp.desktop</span></span>\n<span class=\"line\"><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">[Desktop Entry]</span></span>\n<span class=\"line\"><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Version=1.0</span></span>\n<span class=\"line\"><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Name=WhatsApp</span></span>\n<span class=\"line\"><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Comment=WhatsApp Messenger</span></span>\n<span class=\"line\"><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Exec=google-chrome --app=\"https://web.whatsapp.com\" --name=WhatsApp --class=Whatsapp</span></span>\n<span class=\"line\"><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Terminal=false</span></span>\n<span class=\"line\"><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Type=Application</span></span>\n<span class=\"line\"><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Icon=/home/</span><span style=\"color:#BD93F9;--shiki-dark:#BD93F9\">$USER</span><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">/.local/share/web-apps/icons/WhatsApp.png</span></span>\n<span class=\"line\"><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">Categories=GTK;</span></span>\n<span class=\"line\"><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">MimeType=text/html;text/xml;application/xhtml_xml;</span></span>\n<span class=\"line\"><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">StartupNotify=true</span></span>\n<span class=\"line\"><span style=\"color:#F1FA8C;--shiki-dark:#F1FA8C\">StartupWMClass=Whatsapp</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F2;--shiki-dark:#F8F8F2\">EOF</span></span></code></pre>\n<p>Agora, o WhatsApp estará disponível no menu do seu sistema. No meu Ubuntu 24.04 ficou assim:</p>\n<p><img src=\"https://pocketbase.douglasmoura.dev/api/files/quq9xznky3sx782/8ka7cdr3iet8iqf/screenshot_from_2024_07_29_14_25_00_3M0OyL4OCK.png\" alt=\"Meu dash do Gnome\"></p>\n",
    "tags": [
      "WhatsApp",
      "Linux",
      "Ubuntu"
    ],
    "translates": null
  }
}